@model IEM.Areas.IFAMS.Models.SaleMakerModel
@{
    ViewBag.Title = "Index";
    var saviewfor = (string)ViewBag.viewfor;
    if (saviewfor == "edit")
    {
        ViewBag.viewmode = "";
        Session["ViewBag"] = "";
    }
    else if (saviewfor == "view" || saviewfor == "cancel" || saviewfor == "delete")
    {
        ViewBag.viewmode = "disabled";
        Session["ViewBag"] = "disabled";
    }
}
<div id="saaddviewattachement" class="borderstyle">
    <div id="hidesaatt">
        <table class="myTableStyleTabNew" align="center">
            <tr>
                <td>
                    <span>Document Date</span> <br />
                    <input type="text" disabled="disabled" id="said_attachDate" value="@System.DateTime.Now.ToShortDateString()" maxlength="10" title="Document Date" class="textboxStyle" />
                </td>
                <td>
                    <span>Select File</span> <br />
                    @Html.TextBoxFor(m => m.soaUploadfilename, new { @id = "satxtfilename", type = "file", @class = "txtfilename form-control" })
                </td>
                <td>
                    <span>File Name</span><br />
                    <input name="soaAttachName" readonly="readonly" id="soaAttachName" class="textboxStyle" title="File Name" type="text" value="@Model.attach_file">
                </td>

            
            
                <td>
                    <span>Description</span> <br />
                    @*<input name="soaAttachDesc" id="soaAttachDesc" class="textboxstyle" title="Description" type="text" value="@Model.attach_desc">*@
                    <input name="soaAttachDesc" id="soaAttachDesc" class="textboxStyle" title="Description" type="text" value="@Model.attach_file" maxlength="128">
                </td>
                <td>
                    <br />
                    <button name="btnSaveAttachementSup" id="btnSaveAttachmentSub" class="btn btn-primary" value="Save" onclick="SaveSAAttachment(@Model.soaGid)" ><span style="color:white" class="glyphicon glyphicon-floppy-disk"></span> Save</button>
                    &nbsp;&nbsp;&nbsp;&nbsp;

                    <button class="btn btn-primary" id="btnsoarefresh" onclick="sarefreshattach()" name="command" value="Clear"><span style="color:white" class="glyphicon glyphicon-remove-circle"></span> Clear</button>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    @*<input type="button" class="btn btn-primary" id="btnsoaback" onclick="backtosmsummary()" name="command" value="Back" />*@
                </td>
            </tr>
        </table>
    </div>
</div>
<div>
    @Html.Partial("soaAttachgrid")
</div>
<script src="~/Addons/file-upload/jquery.fileupload.js"></script>
<script src="~/Addons/file-upload/jquery.fileupload-ui.js"></script>
<script src="~/Addons/file-upload/jquery.iframe-transport.js"></script>
<script>
    
    var jqxHRDatasa;

    $(document).ready(function () {
        if ('@ViewBag.viewmode' == "disabled") {            
            $("#saaddviewattachement").hide(0);
           $("#soaattachgridaddview td:nth-child(5),#soaattachgridaddview th:nth-child(5)").hide(0);
        }
        saAutoFileUpload();
    });

    function saAutoFileUpload() {
        'use strict';
        
        $('#satxtfilename').fileupload({            
            autoUpload: true,
            url: '@Url.Action("SubUploadedFiles", "AssetSale")?' + new Date().getTime(),
            dataType: 'json',
            add: function (e,data){
                var sajqXHR = data.submit()
                .success(function (data, textStatus, sajqXHR){
                   ////// alert(data.message);
                    if (data.isUploaded)
                    {

                    }
                    else{

                    }
                    $("#soaAttachName").val(data.message);
                })
                .error(function (data, textStatus, errorThrown){
                    if (typeof (data) != 'undefined' || typeof (textstatus) != 'undefined' || typeof (errorThrown) != 'undefined') {
                        jAlert(textStatus + errorThrown + data, "Error");

                    }
                });
            },
        fail: function(event,data){
            if(data.files[0].error){
                jAlert(data.files[0].error)
            }
        }

    });

    }   

    function SaveSAAttachment(id) {
        if ($("#soaAttachName").val() == "") {
            jAlert("Please Choose a File", "Information");
            return false;
        }
        if ($("#soaAttachDesc").val() == "") {
            jAlert("Please enter the description", "Information");
            return false;
        }
        if ($("#soaAttachDesc").val() != "" && $("#soaAttachName").val() != "") {
            var AttachFileNamesa = $("#soaAttachName").val();
            var AttachDescription = $("#soaAttachDesc").val();
            var model = {
                "soaGid": id,
                "attach_file": AttachFileNamesa,
                "attach_desc": AttachDescription,
            };

            $.post('../AssetSale/SASaveattach?' + new Date().getTime(), model,
                function (data) {
                    if (data == 0) { location = location.href; } else {
                        $('#soaattachmentgrid').load('@Url.Action("soaAttachgrid", "Assetsale")?id=' + id + '&' + new Date().getTime());
                        jAlert("Inserted Successfully", "Message"); sarefreshattach();
                    }
                },
                'json');
        }
    }

    

    function sarefreshattach(){
        $("#soaAttachName").val("");
        $("#soaAttachDesc").val("");
    }

    $(".ui-icon-closethick").click(function () {
        $('#sagridId').find('tr').css('background', 'none');
    });

</script>
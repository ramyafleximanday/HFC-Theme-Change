@model IEM.Areas.IFAMS.Models.Ifams_Property
@{
    ViewBag.Title = "Asset Code Master";
    var viewfor = (string)Session["viewfor"];
    if (viewfor == "edit")
    {
        ViewBag.viewmode = "";
    }
    else if (viewfor == "view")
    {
        ViewBag.viewmode = "disabled";
    }
    else if (viewfor == "delete")
    {
        ViewBag.viewmode = "disabled";
        ViewBag.deletemode = "disabled";
    }
}
<link href="@Url.Content("~/Content/Rmax_Site.css")" rel="stylesheet" type="text/css" />
<script src="~/Scripts/asms/commonvalidation.js"></script>
@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.assetgid)
    @Html.HiddenFor(model => model.Status)
    <div class="panel panel-default">
        <table class="myTableStyleTabNew" width="100%">
            <tr>
                <td colspan="3" align="left" style="width:99%; padding:10px;color:Background;font-size:medium;" class="panel panel-default">Asset Code</td>
            </tr>
            <tr>
                <td style="padding:10px; width:33%;">
                    <span>Asset Code</span><br />
                    @if (ViewBag.viewmode == "disabled" || ViewBag.viewmode == "")
                    {
                        @Html.TextBoxFor(model => model.assetCode, new { @id = "txtassetcode", @class = "textboxStyle valid", @maxlength = "4", @disabled = "disabled" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.assetCode, new { @id = "txtassetcode", @class = "textboxStyle required", @maxlength = "4", @required = "required" })

                    }
                </td>
                <td style="padding:10px;width:33%;">
                    <span>Asset Description</span><br />
                    @if (ViewBag.viewmode == "disabled")
                    {
                        @Html.TextBoxFor(model => model.assetDesc, new { @id = "txtdesc", @class = "textboxStyle valid", @maxlength = "150", @disabled = "disabled" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.assetDesc, new { @id = "txtdesc", @class = "textboxStyle required", @maxlength = "150", @required = "required" })

                    }
                </td>
                <td style="padding:10px;width:33%;">
                    <span>Asset Category</span><br />
                    @if (ViewBag.viewmode == "disabled" || ViewBag.viewmode == "")
                    {  @Html.DropDownList("ddlcategory", Model.assetCategory, new { @id = "ddlcategory", @class = "textboxStyle valid", @disabled = "disabled" })
                    }
                    else
                    {  @Html.DropDownList("ddlcategory", Model.assetCategory, new { @id = "ddlcategory", @class = "textboxStyle chosen-select required" })
                    }
                </td>
            </tr>
            <tr>
                <td style="padding:10px;width:33%;">
                    <span>GL Code</span><br />
                    @if (ViewBag.viewmode == "disabled")
                    {   @Html.TextBoxFor(model => model.glCode, new { @id = "txtglcode", @class = "textboxStyle valid", @onkeypress = "return isNumber(event);", @maxlength = "10", @disabled = "disabled" })
                    }
                    else
                    {  @Html.TextBoxFor(model => model.glCode, new { @id = "txtglcode", @class = "textboxStyle ", @onkeypress = "return isNumber(event);", @maxlength = "10", @required = "required" })
                    }
                </td>
                <td style="padding:10px;width:33%;">
                    <span>Classification</span><br />
                    @if (ViewBag.viewmode == "disabled")
                    {<select name="ddlclassication" id="ddlclassication_id" disabled="disabled" class="textboxStyle valid">
                        <option selected value="0">--Select--</option>
                        <option value="1">IT</option>
                        <option value="2">PM</option>
                    </select>}
                    else
                    {<select name="ddlclassication" id="ddlclassication_id" class="textboxStyle chosen-select required">
                        <option selected value="0">--Select--</option>
                        <option value="1">IT</option>
                        <option value="2">PM</option>
                    </select> }
                </td>
                <td style="padding:10px;width:33%;">
                    <span>Owned By</span><br />
                    @if (ViewBag.viewmode == "disabled")
                    {   @Html.TextBoxFor(model => model.ownedByName, new { @id = "ddlownedby_id", @class = "textboxStyle", @maxlength = "150", @disabled = "disabled" })
                    }
                    else
                    {   @Html.TextBoxFor(model => model.ownedByName, new { @id = "ddlownedby_id", @class = "textboxStyle", @maxlength = "150" })
                    }
                </td>
            </tr>
            <tr>
                <td style="padding:10px;width:33%;">
                    <div>
                        @if (ViewBag.viewmode == "disabled")
                        {
                            if (Model.Verifiable == "Non Verifiable")
                            {
                                @Html.RadioButtonFor(model => model.Verifiable, "1", new { @class = "radio-inlin", @id = "rdbverfiable", @disabled = "disabled" })<span>Verifiable</span>
                                @Html.RadioButtonFor(model => model.NonVerifiable, "0", new { @checked = "checked", @class = "radio-inlin", @id = "rdbNonverfiable", @disabled = "disabled" })<span>Non Verifiable</span>
                            }
                            else
                            {
                                @Html.RadioButtonFor(model => model.Verifiable, "1", new { @checked = "checked", @class = "radio-inlin", @id = "rdbverfiable", @disabled = "disabled" })<span>Verifiable</span>
                                @Html.RadioButtonFor(model => model.NonVerifiable, "0", new {  @class = "radio-inlin", @id = "rdbNonverfiable", @disabled = "disabled" })<span>Non Verifiable</span>
                            }
                        }


                        else
                        {
                            if (Model.Verifiable == "Non Verifiable")
                            {
                                @Html.RadioButtonFor(model => model.Verifiable, "1", new {  @class = "radio-inlin", @id = "rdbverfiable" })<span>Verifiable</span>
                                @Html.RadioButtonFor(model => model.NonVerifiable, "0", new { @checked = "checked", @class = "radio-inlin", @id = "rdbNonverfiable" })<span>Non Verifiable</span>
                            }
                            else
                            {  @Html.RadioButtonFor(model => model.Verifiable, "1", new { @checked = "checked", @class = "radio-inlin", @id = "rdbverfiable" })<span>Verifiable</span>
                            @Html.RadioButtonFor(model => model.NonVerifiable, "0", new { @class = "radio-inlin", @id = "rdbNonverfiable" })<span>Non Verifiable</span>
                            }
                        }
                    </div>
                    <br />
                    <div>
                        @if (ViewBag.viewmode == "disabled")
                        {
                            if (Model.Quantified == false)
                            {
                                @Html.CheckBoxFor(model => model.Quantified, new { @class = "checkbox-inlin", @id = "chkQuantified", @disabled = "disabled" })}
                            else
                            {
                                @Html.CheckBoxFor(model => model.Quantified, new { @checked = "checked", @class = "checkbox-inlin", @id = "chkQuantified", @disabled = "disabled" })}
                        }
                        else
                        {
                            if (Model.Quantified == false)
                            {
                                @Html.CheckBoxFor(model => model.Quantified, new { @class = "checkbox-inlin", @id = "chkQuantified" })}
                            else
                            {
                                @Html.CheckBoxFor(model => model.Quantified, new { @checked = "checked", @class = "checkbox-inlin", @id = "chkQuantified" })}
                        } <span>Quantified</span>


                        @if (ViewBag.viewmode == "disabled")
                        {
                            if (Model.Barcode == false)
                            {  @Html.CheckBoxFor(model => model.Barcode, new { @class = "checkbox-inlin", @id = "chkBarcode", @disabled = "disabled" })
                            }
                            else
                            {  @Html.CheckBoxFor(model => model.Barcode, new { @checked = "checked", @class = "checkbox-inlin", @id = "chkBarcode", @disabled = "disabled" })
                            }
                        }
                        else
                        {
                            if (Model.Barcode == false)
                            {  @Html.CheckBoxFor(model => model.Barcode, new { @class = "checkbox-inlin", @id = "chkBarcode" })}
                            else
                            { @Html.CheckBoxFor(model => model.Barcode, new { @checked = "checked", @id = "chkBarcode", @class = "checkbox-inlin" })}
                        }<span>Barcode</span>

                    </div>
                </td>
                <td>

                    <span>Asset Type</span><br />

                    @if (ViewBag.viewmode == "disabled")
                    {
                        if (Model.Movable == "Immovable")
                        {
                            @Html.RadioButtonFor(model => model.Movable, "1", new { @class = "radio-inlin", @id = "rdbMovable", @disabled = "disabled" })<span>Movable</span>
                            @Html.RadioButtonFor(model => model.Immovable, "0", new { @checked = "checked", @class = "radio-inlin", @id = "rdbImmovable", @disabled = "disabled" })<span>Immovable</span>
                        }

                        else
                        {
                            @Html.RadioButtonFor(model => model.Movable, "1", new { @checked = "checked", @class = "radio-inlin", @id = "rdbMovable", @disabled = "disabled" })<span>Movable</span>
                            @Html.RadioButtonFor(model => model.Immovable, "0", new { @class = "radio-inlin", @id = "rdbImmovable", @disabled = "disabled" })<span>Immovable</span>


                        }

                    }
                    else
                    {

                        if (Model.Movable == "Immovable")
                        {

                            @Html.RadioButtonFor(model => model.Movable, "1", new { @class = "radio-inlin", @id = "rdbMovable" })<span>Movable</span>
                            @Html.RadioButtonFor(model => model.Immovable, "0", new { @checked = "checked", @class = "radio-inlin", @id = "rdbImmovable" })<span>Immovable</span>


                        }

                        else
                        {

                            @Html.RadioButtonFor(model => model.Movable, "1", new { @checked = "checked", @class = "radio-inlin", @id = "rdbMovable" })<span>Movable</span>
                            @Html.RadioButtonFor(model => model.Immovable, "0", new { @class = "radio-inlin", @id = "rdbImmovable" })<span>Immovable</span>

                        }
                    }
                </td>
                <td colspan="2" style="padding:10px;width:88%;">
                    <span>Serial No</span><br />
                    @if (ViewBag.viewmode == "disabled")
                    {
                        if (Model.Mandatory == "Mandatory")
                        { @Html.RadioButtonFor(model => model.Mandatory, "1", new { @checked = "checked", @class = "radio-inlin", @id = "rdbMandatory", @disabled = "disabled" })<span>Mantadatory</span>
                        @Html.RadioButtonFor(model => model.NonMantadatory, "0", new { @class = "radio-inlin", @id = "rdbNonMandatory", @disabled = "disabled" })<span>NonMantadatory</span>
                        }
                        else
                        { @Html.RadioButtonFor(model => model.Mandatory, "1", new { @class = "radio-inlin", @id = "rdbMandatory", @disabled = "disabled" })<span>Mantadatory</span>
                        @Html.RadioButtonFor(model => model.NonMantadatory, "0", new { @checked = "checked", @class = "radio-inlin", @id = "rdbNonMandatory", @disabled = "disabled" })<span>NonMantadatory</span>
                        }
                    }
                    else
                    {
                        if (Model.Mandatory == "Mandatory")
                        { @Html.RadioButtonFor(model => model.Mandatory, "1", new { @checked = "checked", @class = "radio-inlin", @id = "rdbMandatory" })<span>Mantadatory</span>
                        @Html.RadioButtonFor(model => model.NonMantadatory, "0", new { @class = "radio-inlin", @id = "rdbNonMandatory" })<span>NonMantadatory</span>
                        }
                        else
                        { @Html.RadioButtonFor(model => model.Mandatory, "1", new { @class = "radio-inlin", @id = "rdbMandatory" })<span>Mantadatory</span>
                        @Html.RadioButtonFor(model => model.NonMantadatory, "0", new { @checked = "checked", @class = "radio-inlin", @id = "rdbNonMandatory" })<span>NonMantadatory</span>
                        }

                    }

                </td>
            </tr>
        </table>
    </div>
    <div class="panel panel-default">
        <table class="myTableStyleTabNew" width="100%">
            <tr>
                <td colspan="3" align="left" style="width:99%;padding:10px;color:Background;font-size:medium;" class="panel panel-default">Depreciation</td>
            </tr>
            <tr>
                <td style="padding:10px;width:33%;">
                    <span>Asset Depreciation Type</span><br />
                    @if (ViewBag.viewmode == "disabled")
                    {
                        if (Model.SLM == "LPM")
                        {
                            @Html.RadioButtonFor(model => model.SLM, "1", new { @class = "radio-inlin", @id = "rdbSLM", @disabled = "disabled" })<span>SLM</span>
                            @Html.RadioButtonFor(model => model.LPM, "0", new { @checked = "checked", @class = "radio-inlin", @id = "rdbLPM", @disabled = "disabled" })<span>LPM</span>}
                        else
                        {
                            @Html.RadioButtonFor(model => model.SLM, "1", new { @checked = "checked", @class = "radio-inlin", @id = "rdbSLM", @disabled = "disabled" })<span>SLM</span>
                            @Html.RadioButtonFor(model => model.LPM, "0", new { @class = "radio-inlin", @id = "rdbLPM", @disabled = "disabled" })<span>LPM</span>}
                    }

                    else
                    {

                        if (Model.SLM == "LPM")
                        {     @Html.RadioButtonFor(model => model.SLM, "1", new { @class = "radio-inlin", @id = "rdbSLM" })<span>SLM</span>
                        @Html.RadioButtonFor(model => model.LPM, "0", new { @checked = "checked", @class = "radio-inlin", @id = "rdbLPM" })<span>LPM</span>
                        }
                        else
                        {
                            @Html.RadioButtonFor(model => model.SLM, "1", new { @checked = "checked", @class = "radio-inlin", @id = "rdbSLM" })<span>SLM</span>
                            @Html.RadioButtonFor(model => model.LPM, "0", new { @class = "radio-inlin", @id = "rdbLPM" })<span>LPM</span>
                    }

                    }
                </td>
                <td style="padding:10px;width:33%;">
                    <span>Useful Life(in Months)</span><br />
                    @if (ViewBag.viewmode == "disabled")
                    {  @Html.TextBoxFor(model => model.umonths, new { @id = "txtumonths", @class = "textboxStyle valid", @disabled = "disabled", @onkeypress = "return isNumber(event);", @maxlength = "3", @required = "required" })
                    }
                    else
                    { @Html.TextBoxFor(model => model.umonths, new { @id = "txtumonths", @class = "textboxStyle required", @onkeypress = "return isNumber(event);", @maxlength = "3", @required = "required" })
                    }
                </td>
                <td style="padding:10px;width:33%;">
                    <span>Depreciation Rate</span><br />
                    @if (ViewBag.viewmode == "disabled")
                    { @Html.TextBoxFor(model => model.descRate, new { @id = "txtdepreciationrate", @class = "textboxStyle valid", @disabled = "disabled", @maxlength = "9", @required = "required" })
                    }
                    else
                    {  @Html.TextBoxFor(model => model.descRate, new { @id = "txtdepreciationrate", @class = "textboxStyle required", @maxlength = "9", @required = "required" })
                    }
                </td>
            </tr>
            <tr>
                <td style="padding:10px;width:33%;">
                    <span>Depreciation GL Code</span><br />
                    @if (ViewBag.viewmode == "disabled")
                    { @Html.TextBoxFor(model => model.descGlCode, new { @id = "txtdescglcode", @class = "textboxStyle valid", @disabled = "disabled", @onkeypress = "return isNumber(event);", @maxlength = "10", @required = "required" })
                    }
                    else
                    { @Html.TextBoxFor(model => model.descGlCode, new { @id = "txtdescglcode", @class = "textboxStyle ", @onkeypress = "return isNumber(event);", @maxlength = "10", @required = "required" })
                    }
                </td>
                <td style="padding:10px;width:33%;">
                    <span>Depreciation Res GL Code</span><br />
                    @if (ViewBag.viewmode == "disabled")
                    {    @Html.TextBoxFor(model => model.descResGlCode, new { @id = "txtdescresglcode", @class = "textboxStyle valid", @disabled = "disabled", @onkeypress = "return isNumber(event);", @maxlength = "10", @required = "required" })
                    }
                    else
                    { @Html.TextBoxFor(model => model.descResGlCode, new { @id = "txtdescresglcode", @class = "textboxStyle ", @onkeypress = "return isNumber(event);", @maxlength = "10", @required = "required" })
                    }
                </td>
                <td style="padding:10px;width:33%;"></td>
            </tr>
        </table>
    </div>
    <table class="myTableStyleTabNew" width="100%">
        <tr>
            <td style="padding:10px; text-align:right;">
                @if (ViewBag.viewmode != "disabled")
                {
                    if (ViewBag.viewmode != "")
                    {
                        <button type="button" id="btnsubmit" onclick="SAVE()" class="btn btn-primary" disabled><span style="color:white;" class="glyphicon glyphicon-floppy-disk"></span> Save</button>

                    }
                    else
                    {
                        <button type="button" id="btnsubmit" onclick="UPDATE()" class="btn btn-primary" disabled><span style="color:white;" class="glyphicon glyphicon-floppy-disk"></span> Update</button>

                    }
                    <button type="button" id="btnClear" class="btn btn-primary"> <span style="color:white;" class="glyphicon glyphicon-refresh"></span> Clear</button>
                }
                <button type="button" id="btnBack" onclick="backAsset()" class="btn btn-warning"><span style="color:white;" class="glyphicon glyphicon-remove-circle"></span> Close</button>
            </td>
        </tr>
    </table>
}
<script>


    //$("#txtdepreciationrate").keyup(function () {


    //    function checkDecimal(el) {
    //        var ex = /^[0-9]+\.?[0-9]*$/;
    //        if (ex.test(el.value) == false) {
    //            el.value = el.value.substring(0, el.value.length - 1);
    //        }
    //    }


    //    if (isDecimal($("#txtdepreciationrate").val()) == false) {
    //        $("#txtdepreciationrate").focus();
    //        return false;
    //    }
    //});

    $("#txtdepreciationrate").on("keypress", function (evt) {
        var $txtBox = $(this);       
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46)
            return false;
        else {
            var len = $txtBox.val().length;            
            var index = $txtBox.val().indexOf('.');            
            if (index > 0 && charCode == 46) {
                return false;
            }
            if (index > 0) {
                var charAfterdot = (len +1) - index;
               
                if (charAfterdot > 3) {
                    return false;
                }
            }
        }
        return $txtBox; //for chaining
    });

   
    $(document).ready(function () {
        $("#ddlclassication_id, #ddlcategory").chosen({});
        $("#ddlclassication_id_chosen, #ddlcategory_chosen").css('width', '100%');

        $("#ddlclassication_id_chosen, #ddlcategory_chosen").addClass('required');  //.addClass('mychosen')

        var classfication = '@Model.classficationId';
        if (classfication == null || classfication == '') {
            $("#ddlclassication_id").val("0").trigger("chosen:updated");
        } else {
            $("#ddlclassication_id").val(classfication).trigger("chosen:updated");
        }

        var statusType = '@Model.Status';
        if (statusType == "view") {
            checkfields();
            $("#btnsubmit").prop('disabled', true);
            $("#btnClear").prop('disabled', true);
        } else if (statusType == "submit") {
            $('#rdbNonverfiable').prop('checked', true);
            $('#rdbverfiable').removeAttr('checked');

            $('#rdbMovable').prop('checked', true);
            $('#rdbImmovable').removeAttr('checked');

            $('#rdbNonMandatory').prop('checked', true);
            $('#rdbMandatory').removeAttr('checked');

            $('#rdbSLM').prop('checked', true);
            $('#rdbLPM').removeAttr('checked');
            checkfields();
        } else {
            checkfields();
        }



        /*$('#ddlcategory').change(function (e) {
            var selectval = $(this).val();
            $.ajax({
                url: '/AssetCodeMaster/Subcategory',
                type: "GET",
                dataType: "JSON",
                data: { category: selectval },
                success: function (subcate) {
                    $("#ddlSubcategory").html("");
                    $.each(subcate, function (i, Ifams_Property) {
                        $("#ddlSubcategory").append(
                            $('<option></option>').val(Ifams_Property.assetSubCategoryId).html(Ifams_Property.assetSubCategoryName));
                    });
                }
            });
         });
         $('#btnnew').click(function () {
            $('#txtassetcode').prop('disabled', false);
            $('#txtdesc').prop('disabled', false);
            $('#ddlcategory').prop('disabled', false);
            $('#txtglcode').prop('disabled', false);
            $('#ddlclassfication').prop('disabled', false);
            $('#txtumonths').prop('disabled', false);
            $('#txtdepreciationrate').prop('disabled', false);
            $('#txtdescglcode').prop('disabled', false);
            $('#txtdescresglcode').prop('disabled', false);
            $('#ddlownedby_id').prop('disabled', false);
        });*/

        var checkstatus = "R";
        $('#rdbverfiable').change(function () {
            $('#rdbNonverfiable').removeAttr('checked');
            checkstatus = "A";
        });
        $('#rdbNonverfiable').change(function () {
            $('#rdbverfiable').removeAttr('checked');
            checkstatus = "R";
        });

        //  var checkstatus = "R";
        $('#rdbMovable').change(function () {
            $('#rdbImmovable').removeAttr('checked');
            // checkstatus = "A";
        });
        $('#rdbImmovable').change(function () {
            $('#rdbMovable').removeAttr('checked');
            //   checkstatus = "R";
        });

        //  var checkstatus = "R";
        $('#rdbMandatory').change(function () {
            $('#rdbNonMandatory').removeAttr('checked');
            // checkstatus = "A";
        });
        $('#rdbNonMandatory').change(function () {
            $('#rdbMandatory').removeAttr('checked');
            //   checkstatus = "R";
        });

        $('#rdbSLM').change(function () {
            $('#rdbLPM').removeAttr('checked');
            // checkstatus = "A";
        });
        $('#rdbLPM').change(function () {
            $('#rdbSLM').removeAttr('checked');
            //   checkstatus = "R";
        });

        $("#txtassetcode,#txtdesc,#txtglcode,#txtumonths,#txtdepreciationrate,#txtdescglcode,#txtdescresglcode").keyup(function (e) {
            IsMandatory(this);
            checkfields();
        });
        //$("#txtassetcode,#txtdesc,#txtglcode,#txtumonths,#txtdepreciationrate,#txtdescglcode,#txtdescresglcode,#ddlownedby_id").keyup(function (e) {
        //    IsMandatory(this);
        //    checkfields();
        //});
        $("#ddlcategory").change(function (e) {
            var txtval = $("#ddlcategory").val();
            if (txtval.trim() != "" && txtval.trim() != "0") {
                $("#ddlcategory_chosen").removeClass('required');
                $("#ddlcategory_chosen").addClass('valid');
            }
            else {
                $("#ddlcategory_chosen").removeClass('valid');
                $("#ddlcategory_chosen").addClass('required');
            }


            var value = $("#ddlcategory").val();
            $.ajax({
                url: "@Url.Action("GetGLDetails", "AssetCodeMaster")?" + new Date().getTime(),
                type: 'POST',
                data: { values: value },
                success: function (data) {

                    var str = data;
                    var txtglcode = str[0];
                    var txtresglcode = str[2];
                    var txtdepglcode = str[1];
                    $("#txtglcode").val(txtglcode);
                    $("#txtdescresglcode").val(txtresglcode);
                    $("#txtdescglcode").val(txtdepglcode);
                },
                error: function (data) {
                    jAlert("Error. Please, check the data", "Message");
                }

            });

            checkfields();
        });

        $("#ddlclassication_id").change(function (e) {
            var txtval = $("#ddlclassication_id").val();
            if (txtval.trim() != "" && txtval.trim() != "0") {
                $("#ddlclassication_id_chosen").removeClass('required');
                $("#ddlclassication_id_chosen").addClass('valid');
            }
            else {
                $("#ddlclassication_id_chosen").removeClass('valid');
                $("#ddlclassication_id_chosen").addClass('required');
            }
            checkfields();
        });

        $('#btnClear').click(function () {
            $('#txtassetcode').val('');
            $('#txtdesc').val('');
            //$('#ddlcategory').val('0');
            //$('#ddlclassication_id').val('0');
            $("#ddlcategory").val('0').trigger('chosen:updated');
            $("#ddlclassication_id").val('0').trigger('chosen:updated');

            $('#txtglcode').val('');

            $('#txtumonths').val('');
            $('#txtdepreciationrate').val('');
            $('#txtdescglcode').val('');
            //$('#ddlSubcategory').val('0');
            $('#txtdescresglcode').val('');
            $('#ddlownedby_id').val('');

            $('#rdbImmovable').removeAttr('checked');
            $('#rdbMovable').removeAttr('checked');


            $('#rdbNonMandatory').removeAttr('checked');
            $('#rdbMandatory').removeAttr('checked');

            $('#rdbSLM').removeAttr('checked');
            $('#rdbLPM').removeAttr('checked');

            $('#rdbNonverfiable').removeAttr('checked');
            $('#rdbverfiable').removeAttr('checked');

            $('#rdbNonverfiable').prop('checked', true);
            $('#rdbNonMandatory').prop('checked', true);
            $('#rdbSLM').prop('checked', true);

            $('.checkbox-inlin').removeAttr('checked');

            checkfields();
            return false;
        });

    });
    function checkfields() {
        var assetcode = $('#txtassetcode').val();
        var assetdesc = $('#txtdesc').val();
        var category = $('#ddlcategory').val();
        var glcode = $('#txtglcode').val();
        var classification = $('#ddlclassication_id').val();
        var umonth = $('#txtumonths').val();
        var deprate = $('#txtdepreciationrate').val();
        var depglcode = $('#txtdescglcode').val();
        //var subcategory = $('#ddlSubcategory').val();
        var depresglcode = $('#txtdescresglcode').val();
        //  var ownedby = $('#ddlownedby_id').val();
        // var myRadio = $('input[name=Verifiable]');

        IsMandatoryField("txtassetcode");
        IsMandatoryField("txtdesc");
        IsMandatoryField("txtglcode");
        IsMandatoryField("txtumonths");
        IsMandatoryField("txtdepreciationrate");
        IsMandatoryField("txtdescglcode");
        IsMandatoryField("txtdescresglcode");
        // IsMandatoryField("ddlownedby_id");

        if (category == '0') {
            $("#ddlcategory_chosen").removeClass('valid').removeClass('required');
            $("#ddlcategory_chosen").addClass('required');
        } else {
            $("#ddlcategory_chosen").removeClass('valid').removeClass('required');
            $("#ddlcategory_chosen").addClass('valid');
        }

        if (classification == '0') {
            $("#ddlclassication_id_chosen").removeClass('valid').removeClass('required');
            $("#ddlclassication_id_chosen").addClass('required');
        } else {
            $("#ddlclassication_id_chosen").removeClass('valid').removeClass('required');
            $("#ddlclassication_id_chosen").addClass('valid');
        }

        var ErrCount = 0;
        if (assetcode == '') {
            ErrCount = 1;
        }
        else if (assetdesc == '') {
            ErrCount = 1;
        }
        else if (category == '0') {
            ErrCount = 1;
        }
        else if (glcode == '') {
            ErrCount = 1;
        }
        else if (classification == '0') {
            ErrCount = 1;
        }
        else if (umonth == '') {
            ErrCount = 1;
        }
        else if (deprate == '') {
            ErrCount = 1;
        }
        else if (depglcode == '') {
            ErrCount = 1;
        }
        else if (depresglcode == '') {
            ErrCount = 1;
        }
        //else if (ownedby == '') {
        //    ErrCount = 1;
        //}
        if (ErrCount == 0) {
            $("#btnsubmit").removeAttr('disabled');
        }
        else {
            $("#btnsubmit").attr('disabled', true);
            //$("#btnsave").attr('disabled', 'disabled');
        }
    }

    function IsMandatory(element) {
        var txtval = $(element).val();
        if (txtval.trim() != "") {
            $(element).removeClass('valid').removeClass('required');
            $(element).addClass('valid');
        }
        else {
            $(element).removeClass('valid').removeClass('required');
            $(element).addClass('required');
        }
    }

    function IsMandatoryField(id) {
        var txtval = $("#" + id).val();
        if (txtval.trim() != "") {
            $("#" + id).removeClass('valid').removeClass('required');
            $("#" + id).addClass('valid');
        }
        else {
            $("#" + id).removeClass('valid').removeClass('required');
            $("#" + id).addClass('required');
        }
    }

    function backAsset() {
        location = '@Url.Action("AssetCodeMaster", "AssetCodeMaster")';
    }



    function SAVE() {
        var assetcode1 = $('#txtassetcode').val();
        var assetdesc1 = $('#txtdesc').val();
        var category1 = $('#ddlcategory').val();
        var glcode1 = $('#txtglcode').val();
        var classification1 = $('#ddlclassication_id').val();
        var umonth1 = $('#txtumonths').val();
        var deprate1 = $('#txtdepreciationrate').val();
        var depglcode = $('#txtdescglcode').val();
        //var subcategory = $('#ddlSubcategory').val();
        var depresglcode1 = $('#txtdescresglcode').val();
        var ownedby1 = $('#ddlownedby_id').val();
        var deptype1 = "";
        if ($('#rdbSLM').val() == "1") {
            deptype1 = "SLM";
        }
        else {
            deptype1 = "LPM";
        }
        var veri1;
        if ($("#rdbverfiable").val() == "1") {
            veri1 = "Y"
        }
        else {
            veri1 = "N"

        }
        var qty1;
        if ($("#chkQuantified").is(':checked')) {
            qty1 = "Y";
        }
        else { qty1 = "N"; }

        var bar1;
        if ($("#chkBarcode").is(':checked')) {
            bar1 = "Y";
        }
        else { bar1 = "N"; }

        var assettype1;
        if ($("#rdbMovable").is(':checked')) {
            assettype1 = "M";
        }
        else { assettype1 = "N"; }
        var rdbMandatory1;
        if ($("#rdbMandatory").is(':checked')) {
            rdbMandatory1 = "Y";
        }
        else { rdbMandatory1 = "N"; }

        if (classification1 == "1")
        { classification1 = "IT" }
        else { classification1 = "PM" }
        alert(bar1 + "-" + qty1);
        var DocNameModel =
               {
                   "assetCode": assetcode1,
                   "assetDesc": assetdesc1,
                   "assetCategoryId": category1,
                   "glCode": glcode1,
                   "ownedByName": ownedby1,
                   "descRate": deprate1,
                   "descResGlCode": depresglcode1,
                   "descGlCode": depglcode,
                   "BarcodeIsMandatory": bar1,
                   "classficationName": classification1,
                   "IsQuantified": qty1,
                   "Mandatory": rdbMandatory1,
                   "Verifiable": veri1,
                   "umonths": umonth1,
                   "assetDescType": deptype1,
                   "Movable": assettype1
               };

        $.ajax({
            url: '@Url.Action("Create", "AssetCodeMaster")?' + new Date().getTime(),
            data: JSON.stringify(DocNameModel),
            type: 'POST',
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "success") {

                    jAlert("Record Inserted Successfully!", "Information", function (r) {
                        if (r == true) {
                            showProgress();
                            location = '../AssetCodeMaster/AssetCodeMaster';
                            hideProgress();
                        }
                    });
                }
                else if (data == "Fail") {
                    hideProgress();
                    jAlert("Error During insert", "Error", function () {
                        return false;
                    });
                }
                else {
                    jAlert("Duplicate Record", "Error", function () {
                        return false;
                    });
                }
            },
            error: function (result) {
                jAlert("Error While Inserting", "Error", function () {
                    return false;
                });
            }
        });
        //$.post('../AssetCodeMaster/Create', DocNameModel,
        //function (data) {
        //    if (data == null) {
        //        jAlert("Record Inserted Successfully!", "Information", function (r) {
        //            if (r == true) { location = '../AssetCodeMaster/AssetCodeMaster'; }
        //        });
        //    }
        //    else {
        //        jAlert("Duplicate Record!", "Error", function (r) {
        //            if (r == true) { return false; }
        //        });
        //        return false;
        //    }
        //}, 'json');
    }



    function UPDATE() {
        var assetcode1 = $('#txtassetcode').val();
        var assetdesc1 = $('#txtdesc').val();
        var category1 = $('#ddlcategory').val();
        var glcode1 = $('#txtglcode').val();
        var classification1 = $('#ddlclassication_id').val();
        var umonth1 = $('#txtumonths').val();
        var deprate1 = $('#txtdepreciationrate').val();
        var depglcode = $('#txtdescglcode').val();
        //var subcategory = $('#ddlSubcategory').val();
        var depresglcode1 = $('#txtdescresglcode').val();
        var ownedby1 = $('#ddlownedby_id').val();
        var deptype1 = "";
        if ($('#rdbSLM').val() == "1") {
            deptype1 = "SLM";
        }
        else {
            deptype1 = "LPM";
        }
        var veri1;
        if ($("#rdbverfiable").val() == "1") {
            veri1 = "Y"
        }
        else {
            veri1 = "N"

        }
        var qty1;
        if ($("#chkQuantified").is(':checked')) {
            qty1 = "Y";
        }
        else { qty1 = "N"; }

        var bar1;
        if ($("#chkBarcode").is(':checked')) {
            
            bar1 = "Y";
        }
        else { bar1 = "N"; }
        alert(bar1);
        var assettype1;
        if ($("#rdbMovable").is(':checked')) {
            assettype1 = "M";
        }
        else { assettype1 = "N"; }
        var rdbMandatory1;
        if ($("#rdbMandatory").is(':checked')) {
            rdbMandatory1 = "Y";
        }
        else { rdbMandatory1 = "N"; }


        if (classification1 == "1")
        { classification1 = "IT" }
        else { classification1 = "PM" }
        var DocNameModel =
               {
                   "assetCode": assetcode1,
                   "assetDesc": assetdesc1,
                   "assetCategoryId": category1,
                   "glCode": glcode1,
                   "ownedByName": ownedby1,
                   "descRate": deprate1,
                   "descResGlCode": depresglcode1,
                   "descGlCode": depglcode,
                   "BarcodeIsMandatory": bar1,
                   "classficationName": classification1,
                   "IsQuantified": qty1,
                   "Mandatory": rdbMandatory1,
                   "Verifiable": veri1,
                   "umonths": umonth1,
                   "assetDescType": deptype1,
                   "Movable": assettype1,
                   "assetgid" : '@Model.assetgid'
               };
        showProgress();
        $.ajax({
            url: '@Url.Action("upadte", "AssetCodeMaster")?' + new Date().getTime(),
            data: JSON.stringify(DocNameModel),
            type: 'POST',
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "Success") {
                    hideProgress();
                    jAlert("Record Updated Successfully!", "Information", function (r) {
                        if (r == true) {
                           
                            location = '../AssetCodeMaster/AssetCodeMaster';
                            
                        }
                    });
                }
                else if (data == "Fail") {
                    hideProgress();
                    jAlert("Error During insert", "Error", function () {
                        return false;
                    });
                }
                else  {
                    hideProgress();
                    jAlert("Duplicate Record", "Error", function () {
                        return false;
                    });
                }
            },
            error: function (result) {
                hideProgress();
                jAlert("Error While Inserting", "Error", function () {
                    return false;
                });
            }
        });
        //$.post('../AssetCodeMaster/Create', DocNameModel,
        //function (data) {
        //    if (data == null) {
        //        jAlert("Record Inserted Successfully!", "Information", function (r) {
        //            if (r == true) { location = '../AssetCodeMaster/AssetCodeMaster'; }
        //        });
        //    }
        //    else {
        //        jAlert("Duplicate Record!", "Error", function (r) {
        //            if (r == true) { return false; }
        //        });
        //        return false;
        //    }
        //}, 'json');
    }
</script>

@@model IEnumerable<iem.areas.eow.models.supclassificationmodel>

    @{
        ViewBag.Title = "Role Vs Employee Mapping";
        Layout = "~/Views/Shared/_Layout.cshtml";
        WebGrid grid = new WebGrid(source: Model, canSort: true, canPage: true);
        int rowVal = 0;
    }
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="well">
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <input type="text"
                               name="filter"
                               id="txtFilter"
                               value="@ViewBag.filter"
                               class="form-control"
                               style="display: block;"
                               placeholder="Enter Role" />
                    </div>
                    <div class="input-group">
                        <input type="text"
                               name="filter"
                               id="txtFilter"
                               value="@ViewBag.filter"
                               class="form-control"
                               style="display: block;"
                               placeholder="Enter Role Group" />
                    </div>
                </div>
                <span class="input-group-btn">
                    <button class="btn btn-primary" type="submit">Search</button>
                </span>
            </div>
            <div style="margin-top:17px;" id="mainll">
                @functions {
                    public static string Sorter(string columnName, string columnHeader, WebGrid grid)
                    {
                        return string.Format("{0} {1}", columnHeader, grid.SortColumn == columnName ?
                            grid.SortDirection == SortDirection.Ascending ? "▲" :
                            "▼" : string.Empty);
                    }
                }
                @grid.GetHtml(
            tableStyle: "table table-bordered table-hover table-responsive ",
            columns: grid.Columns
            (
                grid.Columns(grid.Column("S No", format: item => rowVal = rowVal + 1),
                grid.Column(null, null, format: @<input type="hidden" name="RollEmployee" value="@item.Roleid" />),
                grid.Column("Role", Sorter("Role", "Role", grid)),
                grid.Column("RoleGroup", Sorter("RoleGroup", "Role Group", grid)),
                grid.Column(header: "Action", canSort: false, style: "action",
                format: @<text>
                    <span class="glyphicon glyphicon-search" onclick="ViewHoliday(@item.Roleid)"></span>
                    <span class=" glyphicon glyphicon-edit" onclick="EditHoliday(@item.Roleid)"></span>
                    <span class="glyphicon glyphicon-trash" onclick="DeleteHoliday(@item.Roleid)"></span>
                    <button id="id" class="newmap" value="MapEmployee" onclick="MapEmployee()"></button>
                </text>)
          )))
            </div>
        </div>
    }
    <div id="ForPartialView1"></div>
    <script type="text/javascript">
    var objDialog;
    $(document).ready(function () {
        objDialog = $("[id$='ForPartialView1']");
        objDialog.dialog({
            autoOpen: false,
            modal: true,
            show: 'fade-in',
            close: 'fade-out',
            width: 700,
            height: 500
        });

    });
    function MapEmployee() {
        objDialog.load('../RoleEmployee/RoleEmployee');
        objDialog.dialog({ title: 'Role Vs Employee Mapping' });
    }

    </script>

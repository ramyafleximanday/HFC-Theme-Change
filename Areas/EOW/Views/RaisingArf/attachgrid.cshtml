@model  IEM.Areas.EOW.Models.EOW_arfraising
@using System.Data
@using IEM.Areas.EOW.Models
@{
    DataTable getadvancetype = new DataTable();
    List<EOW_arfraising> list = new List<EOW_arfraising>();
    ArfRaising rais = new ArfRaising();
    //list = rais.Selectattach().ToList();
    //getadvancetype = rais.Selectattach(Session["ecf_gid"].ToString());
    ////getadvancedetails = rais.SelectAdvance().ToList();
    //foreach (DataRow row in getadvancetype.Rows)
    //{
    //    list.Add(
    //    new EOW_arfraising
    //    {
    //        attachment_gid = Convert.ToInt16(row["attachment_gid"].ToString()),
    //        attachment_filename = Convert.ToString(row["attachment_filename"]),
    //        attachment_type = Convert.ToString(row["attachment_attachmenttype_gid"].ToString()),
    //        attachment_desc = Convert.ToString(row["attachment_desc"]),
    //        attachment_nameby = Convert.ToString(row["attachment_by"]),
    //        attachment_date = Convert.ToString(row["attachment_date"].ToString())

    //    });
    //};
    WebGrid gridatt = new WebGrid(source: list, canSort: true, canPage: true);

    //grid.Pager(WebGridPagerModes.All);
}
@*<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>*@


@using (Html.BeginForm())
{

    <div id="attgrid" class="table-responsive" style="max-height: 150px;padding-top : 5px;">

        @functions {
            public static string Sorter(string columnName, string columnHeader, WebGrid gridatt)
            {
                return string.Format("{0} {1}", columnHeader, gridatt.SortColumn == columnName ?
                    gridatt.SortDirection == SortDirection.Ascending ? "▲" :
                    "▼" : string.Empty);
            }
        }
        @gridatt.GetHtml(
       tableStyle: "tableSmall table-bordered table-hover",
     columns: gridatt.Columns
            (
        //Here I am going to add checkbox column
        //grid.Column("attachment_gid ", Sorter("attachment_gid ", "SNo", grid), canSort: false),
   gridatt.Column("attachment_filename", "Attachment", canSort: false, style: "collargeBreak"),
    gridatt.Column("attachment_type", "Attachment Type", canSort: false, style: "colmediumBreak"),
   gridatt.Column("attachment_desc", "Description", canSort: false, style: "collargeBreak"),
  gridatt.Column("attachment_date", "Attached Date", canSort: false, style: "colmediumBreak"),
     gridatt.Column("attachment_nameby", "Attached By", canSort: false, style: "collargeBreak"),

             gridatt.Column(header: "Action", canSort: false, style: "action",
                format: @<text>

                @Html.Raw("<a data-modal='' style='text-decoration:none' href='../RaisingArf/Download/" + item.attachment_gid + "' id='" + item.attachment_gid + "' title='Detail'> <span style='color: #2a6393 !important;' id='id' class='glyphicon glyphicon-edit'> </span> </a>")
                @Html.Raw("<a title='Delete' style='text-decoration:none' onclick='DeleteAttachment(" + item.attachment_gid + ")' > <span id='id' style='color: #2a6393 !important;' class='glyphicon glyphicon-trash'> </span> </a>")
                @*@Html.Raw("<a title='View' onclick='ViewType(" + item.attachment_gid + ")'> <span class='glyphicon glyphicon-eye-open'> </span> </a>")
                    @Html.Raw("<a title='Edit' onclick='EditType(" + item.attachment_gid + ")'> <span class='glyphicon glyphicon-edit'> </span> </a>")
                    @Html.Raw("<a title='Delete' onclick='DeleteType(" + item.attachment_gid + ")'> <span class='glyphicon glyphicon-trash'> </span> </a> ")*@
                </text>)))
    </div>


}



<script type="text/javascript">
    function DeleteAttachment(id) {

        var taxModel = {
            "attachment_gid": id
        };
        jConfirm("Do you want to delete this Attachement ? ", "Delete Attachement", function (j) {
            if (j == true) {
                $.post('../RaisingArf/DeleteAttachment', taxModel,
                     function (data) {
                         if (data != "NotExists") {
                             alert(data);
                             return false;
                         }
                         else {
                             //location = '../IEM_TAX/Index';
                             $("#gridAttachment").load('../RaisingArf/ArfAttachement');
                         }
                     }, 'json');
            }
            else { return false; }
        });
    }
    function Saveattachement() {


        var fileuploadlocal = $('#fileuploadlocal').val();
        var _attachtype = $('#_attachtype').val();
        var _attachdesc = $('#_attachdesc').val();
        //var atttachdate = $('#atttachdate').val();
        //var attachby = $('#attachby').val();


        var Student = {

            "attachment_filename": fileuploadlocal,
            "attachment_attachmenttype_gid": _attachtype,
            "attachment_desc": _attachdesc,
            //"attachment_date": atttachdate,
            //"attachment_by": attachby,

        };

        $.ajax({
            url: '../RaisingArf/_EmpAttachmentCreate/',
            data: JSON.stringify(Student),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                if (result != "Yes") {
                    jAlert(result, "Error");

                }
                if (result == "Yes") {
                    jAlert('Record inserted Successfully !', "Error");
                    $("#gridAttachment").load('../RaisingArf/ArfAttachement');
                    // $("#gridadvance").load('../RaisingArf/Index');
                    //location = '../RaisingArf/PouchInwardIndex';
                }
            },
        });
    }
</script>

@model  IEM.Areas.EOW.Models.EOW_TravelClaim
@using IEM.Areas.EOW.Models
@{
    EOW_TravelClaim sh = (EOW_TravelClaim)ViewBag.TravelClaimheader;
 
}
@{
    var viewfor = (string)ViewBag.viewfor;
    if (viewfor == "edit")
    {
        <div id="EditExpenseqwer">

            @using (Html.BeginForm())
            {
                <div style="padding:0;margin:0;">
                    <input type="hidden" name="hidglCode" id="hidglCode" />
                    <input type="hidden" id="hdraiserfcc" value="@Session["raiserfcc"]" />
                    <input type="hidden" id="hdraiserccc" value="@Session["raiserccc"]" />
                    <table class="myTableStyleTabNew" style="width:100%">
                        <tr id="trForExpense">
                            <td style="width: 33%;">
                                <span>Nature of Expenses</span><br />
                                @Html.DropDownListFor(model => sh.NatureofExpensesId, sh.ExpNatureofExpdata, new { @class = "textboxStyle required", @id = "ddlNatureofExpensesto" })
                            </td>
                            <td style="width: 33%;">
                                <span>Expense Category</span><br />
                                @Html.DropDownListFor(model => sh.ExpenseCategoryId, sh.ExpCatdata, new { @class = "textboxStyle required", @id = "ddlExpenseCategoryto" })
                            </td>
                            <td style="width: 35%;">
                                <span>Sub Category</span><br />
                                @Html.DropDownListFor(model => sh.SubCategoryId, sh.ExpSubCatdata, new { @class = "wht textboxStyle required", @id = "ddlSubCategoryto" })
                            </td>
                            <td style="width:10%">
                                <span>&nbsp;</span><br />
                                <input type="button" value="?" style="margin-top: 5px;" id="Getpolicypopupe" onclick="Newpolicypopupe()" />
                            </td>
                        </tr>
                        <tr id="trForAsset">
                            <td style="width: 50%;" colspan="2">
                                <span>Asset Category</span><br />
                                @Html.DropDownListFor(model => sh.AssetCatId, sh.AssetCatList, new { @class = "textboxStyle required", @id = "ddlAssetCatList" })
                            </td>
                            <td style="width: 50%;" colspan="2">
                                <span>Asset Sub Category</span><br />
                                @Html.DropDownListFor(model => sh.AssetSubCatId, sh.AssetSubCatList, new { @class = "textboxStyle required", @id = "ddlAssetSubCatList" })
                            </td>
                            @*<td style="width: 35%;">
                                   <span>Sub Category</span><br />
                                    @Html.DropDownListFor(model => sh.SubCategoryId, sh.ExpSubCatdata, new { @class = "wht textboxStyle required", @id = "ddlSubCategoryto" })
                                </td>
                                <td style="width:10%">
                                   <span>&nbsp;</span><br />
                                    <input type="button" value="?" style="margin-top: 5px;" id="Getpolicypopupe" onclick="Newpolicypopupe()" />
                                </td>*@
                        </tr>
                        <tr>
                            <td style="width: 20%;">
                                <span>Business Segment(BU)</span><br />
                                @Html.DropDownListFor(model => model.FC, sh.Exp_FCC, new { @class = "textboxStyle ", @id = "txtFCto", @disabled = "disabled" })
                            </td>
                            <td style="width: 25%;">
                                <span>Cost Center(CC)</span><br />
                                @Html.DropDownListFor(model => model.CC, sh.Exp_CCC, new { @class = "textboxStyle ", @id = "txtCCto" })
                            </td>
                            <td colspan="2">
                                <span>Product Code</span><br />
                                @Html.TextBoxFor(model => sh.ProductCode, new { disable = true, @class = "textboxStyle with", @id = "txtProductCodeto" })
                                @*@Html.TextBoxFor(model => sh.Exp_FCCC, new { disable = true, @class = "textboxStyle disp", @id = "txtFCCC", @maxlength = "58", @disabled = "disabled" })*@
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <span>Location Code(OUCode)</span><br />
                                @Html.TextBoxFor(model => sh.OUCode, new { disable = true, @class = "textboxStyle withs", @id = "txtOUCodeto" })

                            </td>

                            <td colspan="2">
                                <span>Amount</span><br />
                                @Html.TextBoxFor(model => sh.Amount, new { disable = true, @class = "textboxStyle required whtamt", @id = "txtAmountto" })

                            </td>
                        </tr>
                        <tr>
                            <td colspan="1" style="width: 14%;">
                                <span>HSN Code</span><br />
                                @Html.DropDownListFor(model => sh.TravelHsnid, sh.HsncodeList,  new { @class = "textboxStyle required", @id = "txtHsnId" })
                            </td>
                            <td colspan="2">
                                <span> Hsn Description</span><br />
                           
                                     @Html.TextAreaFor(model => sh.TravelHsnDesc, new { disable = true, @class = "textboxStyle", @id = "txthsndesc", @maxlength = "250", @disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <span>Description</span><br />
                                @Html.TextAreaFor(model => sh.travelDescription, new { disable = true, @class = "textboxStyle txtarea", @id = "txttravelDescriptiony", @maxlength = "250" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <span>RCM Flag</span><br />
                                @if (sh.RCMFlag == "Y")
                                {
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "Y", new { @id = "rdorcmChargedYes", @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "N", new { @id = "rdorcmChargedNo", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                                else
                                {
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "Y", new { @id = "rdorcmChargedYes", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "N", new { @id = "rdorcmChargedNo", @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td style="padding-top: 10px;" colspan="4" align="right">
                                <center>
                                    <button type="button" title="Save" name="Save" id="btnsavexpNN" class="btn btn-primary" onclick="SaveotherTravelmode1()"><span style="color:white;" class="glyphicon glyphicon-floppy-disk"></span> Save</button>
                                    <button type="button" id="btncanexpNNN" title="Cancel" name="Cancel" class="btn btn-warning" onclick="GotoIndexotherExpense()"><span style="color:white;" class="glyphicon glyphicon-remove-sign"></span>Cancel</button>
                                </center>
                            </td>
                        </tr>
                    </table>
                </div>
            }
        </div>
    }
    else if (viewfor == "view")
    {
        <div id="EditExpense">

            @using (Html.BeginForm())
            {
                <div style="padding:0;margin:0;">
                    <input type="hidden" id="ecfamomtssessiontmy" value="@Session["Ecfamountvaltmeditoe"]" />
                    <table class="myTableStyleTabNew" style="width:100%">
                        <tr id="ForExpenseView">
                            <td style="width: 33%;">
                                <span>Nature of Expenses</span><br />
                                @Html.DropDownListFor(model => sh.NatureofExpensesId, sh.ExpNatureofExpdata, new { @class = "textboxStyle", @id = "ddlNatureofExpensesto", @disabled = @ViewBag.viewmode })
                            </td>
                            <td style="width: 33%;">
                                <span>Expense Category</span><br />
                                @Html.DropDownListFor(model => sh.ExpenseCategoryId, sh.ExpCatdata, new { @class = "textboxStyle", @id = "ddlExpenseCategoryto", @disabled = @ViewBag.viewmode })
                            </td>
                            <td style="width: 35%;">
                                <span>Sub Category</span><br />
                                @Html.DropDownListFor(model => sh.SubCategoryId, sh.ExpSubCatdata, new { @class = "wht textboxStyle", @id = "ddlSubCategoryto", @disabled = @ViewBag.viewmode })
                            </td>
                            <td style="width:10%">
                                <span>&nbsp;</span><br />
                                <input type="button" value="?" style="margin-top: 5px;" disabled="disabled" id="Getpolicypopup2" onclick="Newpolicypopup()" />
                            </td>
                        </tr>
                        <tr id="ForAssetView">
                            <td style="width: 50%;" colspan="2">
                                <span>Asset Category</span><br />
                                @Html.DropDownListFor(model => sh.AssetCatId, sh.AssetCatList, new { @class = "textboxStyle required", @id = "ddlAssetCatList", @disabled = "disabled" })
                            </td>
                            <td style="width: 50%;" colspan="2">
                                <span>Asset Sub Category</span><br />
                                @Html.DropDownListFor(model => sh.AssetSubCatId, sh.AssetSubCatList, new { @class = "textboxStyle required", @id = "ddlAssetSubCatList", @disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 20%;">
                                <span>Business Segment(BU)</span><br />
                                @Html.DropDownListFor(model => model.FC, sh.Exp_FCC, new { @class = "textboxStyle ", @id = "txtFCto", @disabled = @ViewBag.viewmode })
                            </td>
                            <td style="width: 25%;">
                                <span>Cost Center(CC)</span><br />
                                @Html.DropDownListFor(model => model.CC, sh.Exp_CCC, new { @class = "textboxStyle ", @id = "txtCCto", @disabled = @ViewBag.viewmode })
                            </td>
                            <td colspan="2">
                                <span>Product Code</span><br />
                                @Html.TextBoxFor(model => sh.ProductCode, new { disable = true, @class = "textboxStyle with", @id = "txtProductCodeto", @disabled = @ViewBag.viewmode })
                                @*@Html.TextBoxFor(model => sh.Exp_FCCC, new { disable = true, @class = "textboxStyle disp", @id = "txtFCCC", @maxlength = "58", @disabled = "disabled" })*@
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <span>Location Code(OUCode)</span><br />
                                @Html.TextBoxFor(model => sh.OUCode, new { disable = true, @class = "textboxStyle withs", @id = "txtOUCodeto", @disabled = @ViewBag.viewmode })
                            </td>
                            <td colspan="2">
                                <span>Amount</span><br />
                                @Html.TextBoxFor(model => sh.Amount, new { disable = true, @class = "textboxStyle whtamt", @id = "txtAmountto", @disabled = @ViewBag.viewmode })

                            </td>
                        </tr>
                        <tr>
                            <td colspan="1" style="width: 14%;">
                                <span>HSN Code</span><br />
                                @Html.DropDownListFor(model => sh.TravelHsnid, sh.HsncodeList, "--Select--", new { @class = "textboxStyle required", @id = "txtHsnId", @disabled = @ViewBag.viewmode })
                            </td>
                            <td colspan="2">
                                <span> Hsn Description</span><br />
                                @Html.TextAreaFor(model => sh.TravelHsnDesc, new { disable = true, @class = "textboxStyle", @id = "txthsndesc", @maxlength = "250", @disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <span>Description</span><br />
                                @Html.TextAreaFor(model => sh.travelDescription, new { disable = true, @class = "textboxStyle txtarea", @id = "txttravelDescriptiony", @maxlength = "250", @disabled = @ViewBag.viewmode })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <span>RCM Flag</span><br />
                                @if (sh.RCMFlag == "Y")
                                {
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "Y", new { @id = "rdorcmChargedYes", @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "N", new { @id = "rdorcmChargedNo", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                                else
                                {
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "Y", new { @id = "rdorcmChargedYes", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "N", new { @id = "rdorcmChargedNo", @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td style="padding-top: 10px;" colspan="4" align="right">
                                <center>
                                    <button type="button" id="btncanexpNNN" title="Cancel" name="Cancel" class="btn btn-warning" onclick="GotoIndexotherExpense()"><span style="color:white;" class="glyphicon glyphicon-remove-sign"></span>Cancel</button>
                                </center>
                            </td>
                        </tr>
                    </table>
                </div>
            }
        </div>
    }

}

<style>
    .with {
        width: 90%;
    }

    .withe {
        width: 100%;
    }

    .withs {
        width: 95%;
    }

    .disp {
        display: none;
    }
</style>
<style>
    .wht {
        width: 100%;
    }

    .whtamt {
        width: 90%;
    }

    .txtarea {
        width: 96.5%;
        height: 70px;
        resize: none;
    }
</style>
<script>
    $("#txtAmountto").keyup(function (event) {
        if (event.which >= 37 && event.which <= 40) {
            event.preventDefault();
        }

        var currentval = $("#txtAmountto").val();
        var testDecimal = testDecimals(currentval);
        if (testDecimal.length > 1) {
            currentval = currentval.slice(0, -1);
        }
        $("#txtAmountto").val(replaceCommas(currentval));

    });

    $(document).ready(function () {
        // $("#txtHsnId").chosen({});
        //$("#txtHsnId_chosen").addClass("mychosen").css('width', '100%');
        var HsnArray;
       // LoadGSTINCategory();
       

        function LoadRCMonHSNChange(txtHsnID) {
            //hsn+provider location state
            var DebitlineGId = 0;
            var ECFId = 0;
            var invid = 0;
            var ProviderLocation = 0;
            var GstinVendor = 0;
            var hsngid = txtHsnID;

            var rcmflagparam = {
                DebitlineGId: DebitlineGId,
                ECFId: ECFId,
                invid: invid,
                hsngid: hsngid,
                ProviderLocation: ProviderLocation,
                action: 'single'
            };
            $.ajax({
                type: "post",
                url: "../TravelClaimNew/CheckrcmExists",
                data: JSON.stringify(rcmflagparam),
                contentType: "application/json;",
                success: function (response) {
                    var Data1 = "";
                    if (response.Data1 != null && response.Data1 != "" && JSON.parse(response.Data1) != null) {
                        Data1 = JSON.parse(response.Data1);
                        if (Data1[0].STATUS == 'EXISTS')
                            $("#rdorcmChargedYes").prop("checked", true);
                        else {
                            $("#rdorcmChargedNo").prop("checked", true);
                        }
                    }


                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });

        };
        $('#txtHsnId').change(function () {
            if (HsnArray.length > 0) {
                var hsnid = $("#txtHsnId").val();
                $("#rdorcmChargedNo").prop("checked", true);
                if (parseInt(hsnid) != 0 || hsnid != "") {
                    for (var i = 0; i < HsnArray.length; i++) {
                        if (parseInt(hsnid) == parseInt(HsnArray[i].Id)) {
                            $("#txthsndesc").val(HsnArray[i].Value1);
                            var GSTCharged = $("#hdfEditViewGstChargedFlag").val();
                            if (GSTCharged == "N") {
                                LoadRCMonHSNChange(hsnid);
                            }
                            break;
                        }
                    }
                }
                else {
                    $("#txthsndesc").val("");
                }
            }
        });
        $('#txtFCto').change(function () {
            var txtFC = $(this).val();
            var hdraiserfcc = $("#hdraiserfcc").val();
            if (txtFC != hdraiserfcc) {
                jAlert("Additional Approval to be attached", "Message");
                return false;
            }
        });
    });
    $(document).ready(function () {
        $('#txtCCto').change(function () {
            var txtCC = $(this).val();
            var hdraiserccc = $("#hdraiserccc").val();
            if (txtCC != hdraiserccc) {
                jAlert("Additional Approval to be attached", "Message");
                return false;
            }
        });
    });
    $(document).ready(function () {
        $("#txtOUCodeto").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompleteoucode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.raiserccName, value: item.raiserccName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#txtProductCodeto").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompleteproductcode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.raiserccName, value: item.raiserccName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    function Newpolicypopupe() {
        var SubCategory = $("#ddlSubCategoryto").val();
        var url = '@Url.Action("_Emppolicypopup", "SupplierInvoiceNew")?id=' + SubCategory + '&' + new Date().getTime();
        objDialogpolicypopup.load(url);
        objDialogpolicypopup.dialog({
            autoOpen: false,
            cache: false,
            modal: true,
            show: 'fade-in',
            close: 'fade-out',
            title: 'Policy Help',
            width: 860,
            height: 400,
        });
        objDialogpolicypopup.dialog("open");
    }

    function GotoIndexotherExpense() {
        objDialogOtherTravelmodenew.dialog("close");
        window.parent.jQuery('#ForPartialViewOtherTravelExpensenew').dialog('close');
    }

    function SaveotherTravelmode1() {
        //var ecfinvoiceamt = $("#txtInvoiceamount").val();
        var ecfinvoiceamt = $("#txtInvoiceamount").val().replace(/,/g, "");
        var txtiClaimMonth = $("#txtsermonth").val();
        var NatureofExpenses = $("#ddlNatureofExpensesto").val();
        var ExpenseCategory = $("#ddlExpenseCategoryto").val();
        var SubCategory = $("#ddlSubCategoryto").val();

        var assetcat = $("#ddlAssetCatList").val();
        var assetsubcat = $("#ddlAssetSubCatList").val();
        var RCMFlag = "";
        if ($("input[id=rdorcmChargedYes]:radio[checked=checked]").attr("value")) {
            RCMFlag = "Y";
        }
        else {
            RCMFlag = "N";
        }
        var FC = $("#txtFCto").val();
        var CC = $("#txtCCto").val();
        var ProductCode = $("#txtProductCodeto").val();
        var OUCode = $("#txtOUCodeto").val();
        //var Amount = $("#txtAmountto").val();
        var Amount = $("#txtAmountto").val().replace(/,/g, "");
        var glcode = $("#hidglCode").val();
        var travelDescription = $("#txttravelDescriptiony").val();
        var prodservmode = '@sh.ProdServCategory';
        if (prodservmode == "A") {
            if (assetcat == null || assetcat == "" || assetcat == "0") {
                jAlert("Please Select Asset Category.", "Message", function () {
                    $("#ddlAssetCatList").focus();
                    return false;
                });
                return false;
            }
            if (assetsubcat == null || assetsubcat == "0") {
                assetsubcat = 0;
            }
            NatureofExpenses = 0;
            ExpenseCategory = 0;
          //  SubCategory = 0;
        }
        else {
            if (NatureofExpenses == null || NatureofExpenses == "" || NatureofExpenses == "0") {
                jAlert("Please select the Nature of Expenses.", "Message", function () {
                    $("#ddlNatureofExpensesto").focus();
                    return false;
                });
                return false;
            }
            if (ExpenseCategory == null || ExpenseCategory == "0") {
                jAlert("Please select The Expense Category", "Message", function () {
                    $("#ddlExpenseCategoryto").focus();
                    return false;
                });
                return false;
            }
            if (SubCategory == null || SubCategory == "0") {
                jAlert("Please select the Sub Category", "Message", function () {
                    $("#ddlSubCategoryto").focus();
                    return false;
                });
                return false;
            }
            assetcat = 0;
            assetsubcat = 0;
        }
        var Hsnid = $("#txtHsnId").val();
        //if ($("input[name=rdogstChargedFlag]:radio[checked=checked]").attr("value") == "Y") {
        if (Hsnid == null || Hsnid == "" || Hsnid == "0") {
            Hsnid == "0"
                //jAlert("Please select the HSN Code.", "Message");
                //return false;
            }
        //}
        //else
        //{
        //    Hsnid = "0";
        //}

        if (FC == null || FC == "") {
            jAlert("Please Enter FC.", "Message");
            return false;
        }
        if (CC == null || CC == "") {
            jAlert("Please Enter the Cost Center(CC)", "Message");
            return false;
        }
        if (ProductCode == null || ProductCode == "") {
            jAlert("Please Enter the Product Code", "Message");
            return false;
        }
        if (OUCode == null || OUCode == "") {
            jAlert("Please Enter Location (OU Code)", "Message");
            return false;
        }
        if (Amount == null || Amount == "") {
            jAlert("Please enter the Amount", "Message");
            return false;
        }
        if (parseFloat(ecfinvoiceamt) < parseFloat(Amount)) {
            jAlert("The Debitline Amount Should Should Not Be Greather Invoice Amount ", "Message");
            return false;
        }
        else {

            var NewExpensemodel = {
                "NatureofExpensesName": NatureofExpenses,
                "ExpenseCategoryName": ExpenseCategory,
                "SubCategoryName": SubCategory,
                "FC": FC,
                "CC": CC,
                "ClaimMonth": txtiClaimMonth,
                "ProductCode": ProductCode,
                "OUCode": OUCode,
                "travelDescription": travelDescription,
                "Amount": Amount,
                "AssetCatId": assetcat,
                "AssetSubCatId": assetsubcat,
                "ProdServCategory": prodservmode,
                "GLCode": glcode,
                "TravelHsnid": Hsnid,
                "RCMFlag": RCMFlag
            };
            $.post('../Insurance/_TabdebitlineEdit', NewExpensemodel,
            function (data) {
                if (data == "Success" || data == "SUCCESS") {
                    jAlert("Updated Successfully.", "Message");
                    var url = '@Url.Action("_TabdebitlineDetails", "Insurance")?' + new Date().getTime();
                    $("#wgTravelmodeotab2").load(url);
                    var url1 = '@Url.Action("_GetGstDetails", "Insurance")';
                    $("#PoGstGrid").load(url1);
                    var payurl = '@Url.Action("_SupplierPaymentGrid", "Insurance")?' + new Date().getTime();
                    $("#wgempPaymensupplier").load(payurl);
                    window.parent.jQuery('#ForPartialViewOtherTravelExpensenew').dialog('close');
                    GotoIndexotherExpense();
                }
                else {
                    jAlert(data, "Message");
                    return false;
                }
            }, 'json');
        }
    }

    $(document).ready(function () {
        $('#ddlNatureofExpensesto').change(function () {
            cheval();
            var brandID = $(this).val();
            var Student =
           {
               "NatureofExpensesId": brandID
           };
            $.ajax({
                url: '../TravelClaimNew/GetExpenseCategory/',
                data: JSON.stringify(Student),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    cheval();
                    $("#ddlExpenseCategoryto").empty();
                    $("#ddlSubCategoryto").empty();
                    if (data.length > 0) {
                        $("#ddlSubCategoryto").append("<option value='0' >--Select--</option>");
                        $("#ddlExpenseCategoryto").append("<option value='0' >--Select--</option>");
                        for (var i = 0; i < data.length; i++) {
                            var stylesSelect = $('#ddlExpenseCategoryto');
                            stylesSelect.attr('disabled', false);
                            $("#ddlExpenseCategoryto").append("<option value=" + data[i].ExpenseCategoryId + " >" + data[i].ExpenseCategoryName + "</option>");
                        }
                    }

                    if (data.length == 0) {
                        $("#ddlSubCategoryto").append("<option value='0' >--Select--</option>");
                        $("#ddlExpenseCategoryto").append("<option value='0' >--Select--</option>");
                        var stylesSelect = $('#ddlExpenseCategoryto');
                        stylesSelect.attr('disabled', true);
                        var stylesSelect = $('#ddlSubCategoryto');
                        stylesSelect.attr('disabled', true);
                        cheval();
                    }
                },
                error: function (result) {
                    jAlert("Error", "Message");
                    return false;
                }
            });
        });

        $('#ddlExpenseCategoryto').change(function () {
            debugger;
            var brandID = $(this).val();
            var Student =
           {
               "ExpenseCategoryId": brandID
           };
            $.ajax({
                url: '../Insurance/GetSubCategory/',
                data: JSON.stringify(Student),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    cheval();
                    $("#ddlSubCategoryto").empty();
                    var data1 = JSON.parse(data.Data1);
                    if (data1.length > 0) {
                        debugger;
                        //$("#hidglCode").val(data[0].GLCode);
                        $("#ddlSubCategoryto").append("<option value='0' >--Select--</option>");
                        for (var i = 0; i < data1.length; i++) {
                            //var stylesSelect = $('#ddlSubCategoryto');
                            //stylesSelect.attr('disabled', false);
                            $("#ddlSubCategoryto").append("<option value=" + data1[i].expsubcat_gid + " >" + data1[i].expsubcat_name + "</option>");
                        }
                    }
                    debugger;
                    if (data1.length == 0) {
                        $("#hidglCode").val("");
                        $("#ddlSubCategoryto").append("<option value='0' >--Select--</option>");
                        var stylesSelect = $('#ddlSubCategoryto');
                        stylesSelect.attr('disabled', true);
                        cheval();
                    }
                },
                error: function (result) {
                    debugger;
                    jAlert("Error", "Message");
                    return false;
                }
            });
        });


        $('#ddlSubCategoryto').change(function () {
            debugger;
            var brandID = $(this).val();
            if (brandID != "0") {
                var Student =
               {
                   "ExpenseCategoryId": brandID
               };
                $.ajax({
                    url: '../Insurance/GetSubCategorypolicy/',
                    data: JSON.stringify(Student),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        cheval();
                        if (data.policy != "") {
                            var stylesSelect = $('#Getpolicypopup');
                            stylesSelect.attr('disabled', false);
                        }

                        $("#txtHsnId").empty();

                        if (data.Data2 != "" && data.Data2 != null) {
                            HsnArray = JSON.parse(data.Data2);
                            $("#txtHsnId").empty();
                            if (HsnArray.length > 0) {
                                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                                for (var i = 0; i < HsnArray.length; i++) {
                                    var stylesSelect1 = $('#txtHsnId');
                                    stylesSelect1.attr('disabled', false);
                                    $("#txtHsnId").append("<option value=" + HsnArray[i].hsnid + " >" + HsnArray[i].hsncode + "</option>");
                                }
                            }
                            else {

                                $("#txtHsnId").empty();
                                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                                var stylesSelect1 = $('#txtHsnId');
                                stylesSelect1.attr('disabled', true);
                            }
                        }


                        else {
                            var stylesSelect = $('#Getpolicypopupt');
                            stylesSelect.attr('disabled', true);
                            $("#txtHsnId").empty();
                            $("#txtHsnId").append("<option value='0' >--Select--</option>");
                            var stylesSelect1 = $('#txtHsnId');
                            stylesSelect1.attr('disabled', true);
                            $("#txtHsnId").removeClass('valid');
                            $("#txtHsnId").addClass('required');
                            cheval();
                        }
                    },
                    error: function (result) {
                        jAlert("Error.", "Error");
                        return false;
                    }
                });
            }
            else {
                var stylesSelect = $('#Getpolicypopup');
                stylesSelect.attr('disabled', true);
            }
        });
        $('#txtCCto').change(function () {
            var ccs = $("#txtCCto option:selected").text();
            var fcs = $("#txtFCto option:selected").text();
            concode(fcs, ccs);
        });
        $('#txtFCto').change(function () {
            var ccs = $("#txtCCto option:selected").text();
            var fcs = $("#txtFCto option:selected").text();
            concode(fcs, ccs);
        });
    });
    function concode(fcs, ccs) {
        var fc = fcs.split('-');
        var cc = ccs.split('-');
        $("#txtFCCC").val(fc[1] + "-" + cc[1]);
    }

    function cheval() {
        var ddlNatureofExpenses1 = $("#ddlNatureofExpensesto").val();
        var ddlExpenseCategory1 = $("#ddlExpenseCategoryto").val();
        var ddlSubCategory1 = $("#ddlSubCategoryto").val();

        var ddlAssetCategory1 = $("#ddlAssetCatList").val();
        var ddlAssetSubCategory1 = $("#ddlAssetSubCatList").val();

        var ddlNatureofExpenses = $("#ddlNatureofExpensesto option:selected").text();
        var ddlExpenseCategory = $("#ddlExpenseCategoryto option:selected").text();
        var ddlSubCategory = $("#ddlSubCategoryto option:selected").text();

        var ddlAssetCategory = $("#ddlAssetCatList option:selected").text();
        var ddlAssetSubCategory = $("#ddlAssetSubCatList option:selected").text();

        var txtAmount = $("#txtAmountto").val();
        var txtProductCode = $("#txtProductCodeto").val();
        var txtOUCode = $("#txtOUCodeto").val();

        var prodservmode1 = '@sh.ProdServCategory';
        if (prodservmode1 == "A") {
            if (txtProductCode != "" && txtOUCode != "" && ddlAssetCategory1 != null && ddlAssetCategory != "--Select--" && txtAmount != "") {
                $('#btnsavexpNN').attr('disabled', false);
                $("#ddlAssetCatList").removeClass('required');
                $("#ddlAssetCatList").addClass('valid');
                if (ddlAssetCategory1 != null && ddlAssetCategory != "--Select--") {
                    $("#ddlAssetSubCatList").removeClass('required');
                    $("#ddlAssetSubCatList").addClass('valid');
                }
                $("#txtAmountto").removeClass('required');
                $("#txtProductCodeto").addClass('valid');
                $("#txtOUCodeto").removeClass('required');
            }
            else {
                $('#btnsavexpNN').attr('disabled', true);
            }
        }
        else {
            if (txtProductCode != "" && txtOUCode != "" && ddlNatureofExpenses1 != null && ddlExpenseCategory1 != null && ddlSubCategory1 != null && ddlNatureofExpenses1 != "0" && ddlExpenseCategory1 != "0" && ddlSubCategory1 != "0" && ddlNatureofExpenses != "--Select--" && ddlExpenseCategory != "--Select--" && ddlSubCategory != "--Select--" && txtAmount != "") {
                $('#btnsavexpNN').attr('disabled', false);
                $("#ddlNatureofExpensesto").removeClass('required');
                $("#ddlNatureofExpensesto").addClass('valid');
                $("#ddlExpenseCategoryto").removeClass('required');
                $("#ddlExpenseCategoryto").addClass('valid');
                $("#ddlSubCategoryto").removeClass('required');
                $("#ddlSubCategoryto").addClass('valid');
                $("#txtAmountto").removeClass('required');
                $("#txtProductCodeto").addClass('valid');
                $("#txtOUCodeto").removeClass('required');
            }
            else {
                $('#btnsavexpNN').attr('disabled', true);
            }
        }


    }

    $("#ddlAssetCatList").change(function () {
        var AssetCatId = $(this).val();

        var objAssetCat =
   {
       "AssetCatId": AssetCatId
   };
        $.ajax({
            url: '@Url.Action("GetAssetSubCat", "SupplierInvoiceNew")',
            data: JSON.stringify(objAssetCat),
            type: 'POST',
            async: false,
            cache: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#ddlAssetSubCatList").empty();
                if (data.length > 0) {
                    $("#hidglCode").val(data[0].GLCode);
                    $("#ddlAssetSubCatList").append("<option value='0' >--Select--</option>");
                    for (var i = 0; i < data.length; i++) {
                        $('#ddlAssetSubCatList').attr('disabled', false);
                        $("#ddlAssetSubCatList").append("<option value=" + data[i].AssetSubCatId + " >" + data[i].AssetSubCatName + "</option>");
                    }
                }

                if (data.length == 0) {
                    $("#hidglCode").val("");
                    $("#ddlAssetSubCatList").empty();
                    $("#ddlAssetSubCatList").append("<option value='0' >--Select--</option>");
                    $('#ddlAssetSubCatList').val('0');
                    $('#ddlAssetSubCatList').attr('disabled', true);

                }
            },
            error: function (result) {
                jAlert("Something went wrong", "Error");
            }
        });


    });
</script>
<script>

    $(document).ready(function () {

        var prodservmode = '@sh.ProdServCategory';
        if (prodservmode == "A") {
            $("#trForExpense").hide();
            $("#trForAsset").show();

            $("#ForExpenseView").hide();
            $("#ForAssetView").show();
        }
        else {
            $("#trForExpense").show();
            $("#trForAsset").hide();

            $("#ForExpenseView").show();
            $("#ForAssetView").hide();
        }
        var hsnid = $("#txtHsnId").val();
        if (hsnid != "0" && hsnid != null) {
            $("#txtHsnId").addClass('valid'); cheval();
        }
        else {
            $("#txtHsnId").addClass('required'); cheval();
        }
        var hsndesc = $("#txthsndesc").val();
        if (hsndesc != "" && hsndesc != null) {
            $("#txthsndesc").addClass('valid'); cheval();
        }
        else {
            $("#txthsndesc").addClass('required'); cheval();
        }

        var txtContractFrom = $("#ddlNatureofExpensesto").val();
        if (txtContractFrom != "0" && txtContractFrom != null) {
            $("#ddlNatureofExpensesto").addClass('valid'); cheval();
        }
        else {
            $("#ddlNatureofExpensesto").addClass('required'); cheval();
        }

        $("#ddlAssetCatList").keyup(function () {
            var txtContractFrom111 = $("#ddlAssetCatList").val();
            if (txtContractFrom111 != "0" && txtContractFrom111 != null) {
                $("#ddlAssetCatList").removeClass('required');
                $("#ddlAssetCatList").addClass('valid'); cheval();
            }
            else {
                $("#ddlAssetCatList").removeClass('valid');
                $("#ddlAssetCatList").addClass('required'); cheval();
            }
        });
        $("#ddlAssetCatList").change(function () {
            var txtContractFrom22 = $("#ddlAssetCatList").val();
            if (txtContractFrom22 != "0" && txtContractFrom22 != null) {
                $("#ddlAssetCatList").removeClass('required');
                $("#ddlAssetCatList").addClass('valid'); cheval();
            }
            else {
                $("#ddlAssetCatList").removeClass('valid');
                $("#ddlAssetCatList").addClass('required'); cheval();
            }
        });


        $("#ddlAssetSubCatList").keyup(function () {
            var txtContractFrom1111 = $("#ddlAssetCatList").val();
            if (txtContractFrom1111 != "0" && txtContractFrom1111 != null) {
                $("#ddlAssetSubCatList").removeClass('required');
                $("#ddlAssetSubCatList").addClass('valid'); cheval();
            }
            else {
                $("#ddlAssetSubCatList").removeClass('valid');
                $("#ddlAssetSubCatList").addClass('required'); cheval();
            }
        });
        $("#ddlAssetSubCatList").change(function () {
            var txtContractFrom222 = $("#ddlAssetCatList").val();
            if (txtContractFrom222 != "0" && txtContractFrom222 != null) {
                $("#ddlAssetSubCatList").removeClass('required');
                $("#ddlAssetSubCatList").addClass('valid'); cheval();
            }
            else {
                $("#ddlAssetSubCatList").removeClass('valid');
                $("#ddlAssetSubCatList").addClass('required'); cheval();
            }
        });

        $("#ddlNatureofExpensesto").keyup(function () {
            var txtContractFrom1 = $("#ddlNatureofExpensesto").val();
            if (txtContractFrom1 != "0" && txtContractFrom1 != null) {
                $("#ddlNatureofExpensesto").removeClass('required');
                $("#ddlNatureofExpensesto").addClass('valid'); cheval();
            }
            else {
                $("#ddlNatureofExpensesto").removeClass('valid');
                $("#ddlNatureofExpensesto").addClass('required'); cheval();
            }
        });
        $("#ddlNatureofExpensesto").change(function () {
            var txtContractFrom2 = $("#ddlNatureofExpensesto").val();
            if (txtContractFrom2 != "0" && txtContractFrom2 != null) {
                $("#ddlNatureofExpensesto").removeClass('required');
                $("#ddlNatureofExpensesto").addClass('valid'); cheval();
            }
            else {
                $("#ddlNatureofExpensesto").removeClass('valid');
                $("#ddlNatureofExpensesto").addClass('required'); cheval();
            }
        });
        var txtContractFrom3 = $("#ddlExpenseCategoryto").val();
        if (txtContractFrom3 != "0" && txtContractFrom3 != null) {
            $("#ddlExpenseCategoryto").addClass('valid'); cheval();
        }
        else {
            $("#ddlExpenseCategoryto").addClass('required'); cheval();
        }
        $("#ddlExpenseCategoryto").keyup(function () {
            var txtContractFrom4 = $("#ddlExpenseCategoryto").val();
            if (txtContractFrom4 != "0" && txtContractFrom4 != null) {
                $("#ddlExpenseCategoryto").removeClass('required');
                $("#ddlExpenseCategoryto").addClass('valid'); cheval();
            }
            else {
                $("#ddlExpenseCategoryto").removeClass('valid');
                $("#ddlExpenseCategoryto").addClass('required'); cheval();
            }
        });
        $("#ddlExpenseCategoryto").change(function () {
            var txtContractFrom5 = $("#ddlExpenseCategoryto").val();
            if (txtContractFrom5 != "0" && txtContractFrom5 != null) {
                $("#ddlExpenseCategoryto").removeClass('required');
                $("#ddlExpenseCategoryto").addClass('valid'); cheval();
            }
            else {
                $("#ddlExpenseCategoryto").removeClass('valid');
                $("#ddlExpenseCategoryto").addClass('required'); cheval();
            }
        });
        var txtContractFrom6 = $("#ddlSubCategoryto").val();
        if (txtContractFrom6 != "0" && txtContractFrom6 != null) {
            $("#ddlSubCategoryto").addClass('valid'); cheval();
        }
        else {
            $("#ddlSubCategoryto").addClass('required'); cheval();
        }
        $("#ddlSubCategoryto").keyup(function () {
            var txtContractFrom7 = $("#ddlSubCategoryto").val();
            if (txtContractFrom7 != "0" && txtContractFrom7 != null) {
                $("#ddlSubCategoryto").removeClass('required');
                $("#ddlSubCategoryto").addClass('valid'); cheval();
            }
            else {
                $("#ddlSubCategoryto").removeClass('valid');
                $("#ddlSubCategoryto").addClass('required'); cheval();
            }
        });
        //$("#ddlSubCategoryto").change(function () {
        //    var txtContractFrom8 = $("#ddlSubCategoryto").val();
        //    if (txtContractFrom8 != "0" && txtContractFrom8 != null) {
        //        $("#ddlSubCategoryto").removeClass('required');
        //        $("#ddlSubCategoryto").addClass('valid'); cheval();
        //    }
        //    else {
        //        $("#ddlSubCategoryto").removeClass('valid');
        //        $("#ddlSubCategoryto").addClass('required'); cheval();
        //    }
        //});

        var txtContractFrom9 = $("#txtAmountto").val();
        if (txtContractFrom9 != "" && txtContractFrom9 != null) {
            $("#txtAmountto").addClass('valid'); cheval();
        }
        else {
            $("#txtAmountto").addClass('required'); cheval();
        }
        $("#txtAmountto").keyup(function () {
            var txtContractFrom10 = $("#txtAmountto").val();
            if (txtContractFrom10 != "" && txtContractFrom10 != null) {
                $("#txtAmountto").removeClass('required');
                $("#txtAmountto").addClass('valid'); cheval();
            }
            else {
                $("#txtAmountto").removeClass('valid');
                $("#txtAmountto").addClass('required'); cheval();
            }
        });
        $("#txtAmountto").change(function () {
            var txtContractFrom11 = $("#txtAmountto").val();
            if (txtContractFrom11 != "" && txtContractFrom11 != null) {
                $("#txtAmountto").removeClass('required');
                $("#txtAmountto").addClass('valid'); cheval();
            }
            else {
                $("#txtAmountto").removeClass('valid');
                $("#txtAmountto").addClass('required'); cheval();
            }
        });
        $("#txtProductCodeto").keyup(function () {
            var txtContractFrom12 = $("#txtProductCodeto").val();
            if (txtContractFrom12 != "" && txtContractFrom12 != null) {
                $("#txtProductCodeto").removeClass('required');
                $("#txtProductCodeto").addClass('valid'); cheval();
            }
            else {
                $("#txtProductCodeto").removeClass('valid');
                $("#txtProductCodeto").addClass('required'); cheval();
            }
        });
        $("#txtProductCodeto").change(function () {
            var txtContractFrom13 = $("#txtProductCodeto").val();
            if (txtContractFrom13 != "" && txtContractFrom13 != null) {
                $("#txtProductCodeto").removeClass('required');
                $("#txtProductCodeto").addClass('valid'); cheval();
            }
            else {
                $("#txtProductCodeto").removeClass('valid');
                $("#txtProductCodeto").addClass('required'); cheval();
            }
        });

        $("#txtOUCodeto").keyup(function () {
            var txtContractFrom14 = $("#txtOUCodeto").val();
            if (txtContractFrom14 != "" && txtContractFrom14 != null) {
                $("#txtOUCodeto").removeClass('required');
                $("#txtOUCodeto").addClass('valid'); cheval();
            }
            else {
                $("#txtOUCodeto").removeClass('valid');
                $("#txtOUCodeto").addClass('required'); cheval();
            }
        });
        $("#txtOUCodeto").change(function () {
            var txtContractFrom15 = $("#txtOUCodeto").val();
            if (txtContractFrom15 != "" && txtContractFrom15 != null) {
                $("#txtOUCodeto").removeClass('required');
                $("#txtOUCodeto").addClass('valid'); cheval();
            }
            else {
                $("#txtOUCodeto").removeClass('valid');
                $("#txtOUCodeto").addClass('required'); cheval();
            }
        });

        var ddlAssetSubCatList = $("#ddlAssetSubCatList").val();
        if (ddlAssetSubCatList == null || ddlAssetSubCatList == "") {
            $("#ddlAssetSubCatList").append("<option value='0' >--Select--</option>");
            $('#ddlAssetSubCatList').attr('disabled', true);
            $("#ddlAssetSubCatList").removeClass('valid');
            $("#ddlAssetSubCatList").removeClass('required');
        }
    });
    $('#txtOUCodeto').blur(function () {
        var OucodeBussiness = document.getElementById('txtOUCodeto').value;
        var Student =
       {
           "OUCode": OucodeBussiness
       };
        $.ajax({
            url: '../TravelClaimNew/ChangeBussinessSegment/',
            data: JSON.stringify(Student),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#txtFCto").val(data[0].OUCode);
            },
            error: function (result) {
                jAlert("Error.", "Error");
                return false;
            }
        });
    });
</script>

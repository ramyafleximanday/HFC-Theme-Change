@model  IEM.Areas.EOW.Models.EOW_TravelClaim
@using IEM.Areas.EOW.Models
@{
    EOW_TravelClaim sh = (EOW_TravelClaim)ViewBag.TravelotherClaimheader;
}
@{
    var viewfor = (string)ViewBag.viewfor;
    if (viewfor == "edit")
    {
        <div id="EditExpenseqwer">

            @using (Html.BeginForm())
            {
                <div style="padding:0;margin:0;">
                    <input type="hidden" id="ecfamomtssessiontmt" value="@Session["Ecfamountvaltmeditt"]" />
                    <input type="hidden" id="hdraiserfcc" value="@Session["raiserfcc"]" />
                    <input type="hidden" id="hdraiserccc" value="@Session["raiserccc"]" />

                    <table class="myTableStyleTabNew">
                        <tr>
                            <td colspan="2" style="width:34%">
                                <span>Nature of Expenses</span><br />
                                @Html.DropDownListFor(model => sh.NatureofExpensesId, sh.ExpNatureofExpdata, "--Select--", new { @class = "textboxStyle required", @id = "ddlNatureofExpenseste" })
                            </td>
                            <td style="width:23%">
                                <span>Expense Category</span><br />
                                @Html.DropDownListFor(model => sh.ExpenseCategoryId, sh.ExpCatdata, "--Select--", new { @class = "textboxStyle required", @id = "ddlExpenseCategoryte" })
                            </td>
                            <td style="width:17%">
                                <span>Sub Category</span><br />
                                @Html.DropDownListFor(model => sh.SubCategoryId, sh.ExpSubCatdata, "--Select--", new { @class = "wht textboxStyle required", @id = "ddlSubCategoryte" })
                            </td>
                            <td style="width:5%">
                                <span>&nbsp;</span><br />
                                <input type="button" value="?" style="margin-top: 5px;" id="Getpolicypopupt" onclick="Newpolicypopup()" />
                            </td>
                            <td style="width:25%">
                                <span>Amount</span><br />
                                @Html.TextBoxFor(model => sh.Amount, new { disable = true, @class = "textboxStyle required", @id = "txtAmountte", @onkeypress = "return isAmount(event);", @maxlength = "15" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 17%;">
                                <span>Claim Period From</span><br />
                                @Html.TextBoxFor(model => sh.ClaimPeriodFrom, new { disable = true, @class = "textboxStyle required", @id = "txtClaimPeriodFromte", @maxlength = "10", @placeholder = "dd-mm-yyyy" })
                            </td>
                            <td style="padding-right: 2%;">
                                <span>Claim Period To</span><br />
                                @Html.TextBoxFor(model => sh.ClaimPeriodTo, new { disable = true, @class = "textboxStyle required", @id = "txtClaimPeriodTote", @maxlength = "10", @placeholder = "dd-mm-yyyy" })
                            </td>
                            <td>
                                <span>Service Month</span><br />
                                @Html.TextBoxFor(model => sh.ClaimMonth, new { disable = true, @class = "textboxStyle", @id = "txtClaimMonthte", @maxlength = "10", @placeholder = "dd-mm-yyyy" })
                            </td>
                            <td colspan="2">
                                <span>Place From</span><br />
                                @Html.DropDownListFor(model => sh.PlaceFrom, sh.Citydata, "--Select--", new { @class = "textboxStyle required", @id = "ddlPlaceFromte" })
                            </td>
                            <td>
                                <span>Place To</span><br />
                                @Html.DropDownListFor(model => sh.PlaceTo, sh.Citydatato, "--Select--", new { @class = "textboxStyle required", @id = "ddlPlaceTote" })
                            </td>

                        </tr>
                        <tr id="nontravelmodeq">
                            <td colspan="2">
                                <span>Travel Mode</span><br />
                                @Html.DropDownListFor(model => sh.TravelModeId, sh.TravelModedata, "--Select--", new { @class = "textboxStyle required", @id = "ddlTravelModete" })
                            </td>
                            <td>
                                <span>Travel Class</span><br />
                                @Html.DropDownListFor(model => sh.TravelClassId, sh.TravelClassdata, "--Select--", new { @class = "textboxStyle required", @id = "ddlTravelClasste" })
                            </td>
                            <td colspan="2">
                                <span>Rate</span><br />
                                @Html.TextBoxFor(model => sh.Rate, new { disable = true, @class = "textboxStyle", @id = "txtRatete", @maxlength = "8", @onkeypress = "return isAmount(event);", @disabled = "disabled" })
                            </td>
                            <td>
                                <span>Distance</span><br />
                                @Html.TextBoxFor(model => sh.Distance, new { disable = true, @class = "textboxStyle", @id = "txtDistancete", @maxlength = "8", @onkeypress = "return isNumber(event);", @disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 14%;">
                                <span>Business Segment(BU)</span><br />
                                @Html.DropDownListFor(model => sh.FC, sh.Exp_FCC, new { @class = "textboxStyle ", @id = "txtFCte", @disabled = "disabled" })
                            </td>
                            <td style="padding-right: 2%;">
                                <span>Cost Center(CC)</span><br />
                                @Html.DropDownListFor(model => sh.CC, sh.Exp_CCC, new { @class = "textboxStyle ", @id = "txtCCte" })
                            </td>
                            <td>
                                <span>Product Code</span><br />
                                @Html.TextBoxFor(model => sh.ProductCode, new { disable = true, @class = "textboxStyle", @id = "txtProductCodete", @maxlength = "8" })
                                @Html.TextBoxFor(model => sh.Exp_FCCC, new { disable = true, @class = "textboxStyle disp", @id = "txtFCCC", @maxlength = "58", @disabled = "disabled" })
                            </td>
                            <td colspan="3">
                                <span>Location Code(OUCode)</span><br />
                                @Html.TextBoxFor(model => sh.OUCode, new { disable = true, @class = "textboxStyle withd", @id = "txtOUCodete", @onkeypress = "return isAmount(event);", @maxlength = "15" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" style="width: 14%;">
                                <span>HSN Code</span><br />
                                @Html.DropDownListFor(model => sh.HsnId, sh.HsncodeList, new { @class = "textboxStyle ", @id = "txtHsnId" })
                            </td>
                            <td colspan="4">
                                <span> Hsn Description</span><br />
                                @Html.TextAreaFor(model => sh.HsnDesc, new { disable = true, @class = "textboxStyle", @id = "txthsndesc", @maxlength = "250", @disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="6">
                                <span>Description</span><br />
                                @Html.TextAreaFor(model => sh.travelDescription, new { disable = true, @class = "textboxStyle txtarea", @id = "txttravelDescription", @maxlength = "250" })
                                @if (viewfor == "edit")
                                {
                                    <div>
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                hideProgress();
                                            });
                                        </script>
                                    </div>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td colspan="6">
                                <span>RCM Flag</span><br />
                                @if (sh.RCMFlag == "Y")
                                {
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "Y", new { @id = "rdorcmChargedYes", @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "N", new { @id = "rdorcmChargedNo", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                                else
                                {
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "Y", new { @id = "rdorcmChargedYes", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "N", new { @id = "rdorcmChargedNo", @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td style="padding-top: 10px;" colspan="6" align="center">
                                <center>
                                    <input type="hidden" id="istravels" value="@sh.Traveltypes" />
                                    <input type="hidden" id="isTravelclass" value="@sh.Travelclass" />
                                    <button type="button" title="Save" name="Save" disabled="disabled" id="btnsavexp" class="btn btn-primary" onclick="newSaveTravelmodeedit()"><span style="color:white;" class="glyphicon glyphicon-floppy-disk"></span> Save</button>
                                    <button type="button" id="btncanexp" title="Cancel" name="Cancel" class="btn btn-warning" onclick="GotoIndexExpense()"><span style="color:white;" class="glyphicon glyphicon-remove-sign"></span>Cancel</button>
                                </center>
                            </td>
                        </tr>
                    </table>

                </div>
            }
        </div>
    }
    else if (viewfor == "view")
    {
        <div id="EditExpense">

            @using (Html.BeginForm())
            {
                <div style="padding:0;margin:0;">
                    <input type="hidden" id="ecfamomtssessiontmy" value="@Session["Ecfamountvaltmedit"]" />

                    <table class="myTableStyleTabNew">
                        <tr>
                            <td colspan="2" style="width:34%">
                                <span>Nature of Expenses</span><br />
                                @Html.DropDownListFor(model => sh.NatureofExpensesId, sh.ExpNatureofExpdata, new { @class = "textboxStyle valid", @id = "ddlNatureofExpenseste", @disabled = @ViewBag.viewmode })
                            </td>
                            <td style="width:23%">
                                <span>Expense Category</span><br />
                                @Html.DropDownListFor(model => sh.ExpenseCategoryId, sh.ExpCatdata, new { @class = "textboxStyle valid", @id = "ddlExpenseCategoryte", @disabled = @ViewBag.viewmode })
                            </td>
                            <td style="width:17%">
                                <span>Sub Category</span><br />
                                @Html.DropDownListFor(model => sh.SubCategoryId, sh.ExpSubCatdata, new { @class = "wht textboxStyle valid", @id = "ddlSubCategoryte", @disabled = @ViewBag.viewmode })
                            </td>
                            <td style="width:5%">
                                <span>&nbsp;</span><br />
                                <input type="button" value="?" style="margin-top: 5px;" disabled="disabled" id="Getpolicypopupte" onclick="Newpolicypopup()" />
                            </td>

                            <td style="width:25%">
                                <span>Amount</span><br />
                                @Html.TextBoxFor(model => sh.Amount, new { disable = true, @class = "textboxStyle valid", @id = "txtAmounttet", @disabled = @ViewBag.viewmode, @onkeypress = "return isAmount(event);", @maxlength = "15" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 17%;">
                                <span>Claim Period From</span><br />
                                @Html.TextBoxFor(model => sh.ClaimPeriodFrom, new { disable = true, @class = "textboxStyle valid", @id = "txtClaimPeriodFromte", @disabled = @ViewBag.viewmode, @maxlength = "10", @placeholder = "dd-mm-yyyy" })
                            </td>

                            <td style="padding-right: 2%;">
                                <span>Claim Period To</span><br />
                                @Html.TextBoxFor(model => sh.ClaimPeriodTo, new { disable = true, @class = "textboxStyle valid", @id = "txtClaimPeriodTote", @disabled = @ViewBag.viewmode, @maxlength = "10", @placeholder = "dd-mm-yyyy" })
                            </td>
                            <td>
                                <span>Service Month</span><br />
                                @Html.TextBoxFor(model => sh.ClaimMonth, new { disable = true, @class = "textboxStyle", @id = "txtClaimMonthte", @disabled = @ViewBag.viewmode, @maxlength = "10", @placeholder = "dd-mm-yyyy" })
                            </td>
                            <td colspan="2">
                                <span>Place From</span><br />
                                @Html.DropDownListFor(model => sh.PlaceFrom, sh.Citydata, new { @class = "textboxStyle valid", @id = "ddlPlaceFromte", @disabled = @ViewBag.viewmode })
                            </td>
                            <td>
                                <span>Place To</span><br />
                                @Html.DropDownListFor(model => sh.PlaceTo, sh.Citydatato, new { @class = "textboxStyle valid", @id = "ddlPlaceTote", @disabled = @ViewBag.viewmode })
                            </td>
                        </tr>
                        <tr id="nontravelmodeq">
                            <td colspan="2">
                                <span>Travel Mode</span><br />
                                @Html.DropDownListFor(model => sh.TravelModeId, sh.TravelModedata, new { @class = "textboxStyle valid", @disabled = @ViewBag.viewmode, @id = "ddlTravelModete" })
                            </td>
                            <td>
                                <span>Travel Class</span><br />
                                @Html.DropDownListFor(model => sh.TravelClassId, sh.TravelClassdata, new { @class = "textboxStyle valid", @disabled = @ViewBag.viewmode, @id = "ddlTravelClasste" })
                            </td>
                            <td colspan="2">
                                <span>Rate</span><br />
                                @Html.TextBoxFor(model => sh.Rate, new { disable = true, @class = "textboxStyle", @id = "txtRatete", @disabled = @ViewBag.viewmode, @maxlength = "8", @onkeypress = "return isAmount(event);" })
                            </td>
                            <td>
                                <span>Distance</span><br />
                                @Html.TextBoxFor(model => sh.Distance, new { disable = true, @class = "textboxStyle", @id = "txtDistancete", @disabled = @ViewBag.viewmode, @maxlength = "8", @onkeypress = "return isNumber(event);" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 14%;">
                                <span>Business Segment(BU)</span><br />
                                @Html.DropDownListFor(model => sh.FC, sh.Exp_FCC, new { @class = "textboxStyle ", @id = "txtFCte", @disabled = @ViewBag.viewmode })
                            </td>
                            <td style="padding-right: 2%;">
                                <span>Cost Center(CC)</span><br />
                                @Html.DropDownListFor(model => sh.CC, sh.Exp_CCC, new { @class = "textboxStyle ", @id = "txtCCte", @disabled = @ViewBag.viewmode })
                            </td>
                            <td>
                                <span>Product Code</span><br />
                                @Html.TextBoxFor(model => sh.ProductCode, new { disable = true, @class = "textboxStyle", @disabled = @ViewBag.viewmode, @id = "txtProductCodete", @maxlength = "8" })
                                @Html.TextBoxFor(model => sh.Exp_FCCC, new { disable = true, @class = "textboxStyle disp", @id = "txtFCCC", @disabled = @ViewBag.viewmode, @maxlength = "58" })
                            </td>
                            <td colspan="3">
                                <span>Location Code(OUCode)</span><br />
                                @Html.TextBoxFor(model => sh.OUCode, new { disable = true, @class = "textboxStyle withd", @id = "txtOUCodete", @disabled = @ViewBag.viewmode, @onkeypress = "return isAmount(event);", @maxlength = "15" })

                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" style="width: 14%;">
                                <span>HSN Code</span><br />
                                @Html.DropDownListFor(model => sh.HsnId, sh.HsncodeList, new { @class = "textboxStyle ", @id = "txtHsnId" })

                            </td>
                            <td colspan="4">
                                <span> Hsn Description</span><br />
                                @Html.TextAreaFor(model => sh.HsnDesc, new { disable = true, @class = "textboxStyle", @id = "txthsndesc", @maxlength = "250", @disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="6">
                                <span>Description</span><br />
                                @Html.TextAreaFor(model => sh.travelDescription, new { disable = true, @class = "textboxStyle txtarea", @disabled = @ViewBag.viewmode, @id = "txttravelDescription", @maxlength = "250" })
                                @if (viewfor == "view")
                                {
                                    <div>
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                hideProgress();
                                            });
                                        </script>
                                    </div>
                                }
                            </td>
                        <tr>
                            <td colspan="6">
                                <span>RCM Flag</span><br />
                                @if (sh.RCMFlag == "Y")
                                {
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "Y", new { @id = "ViewrdorcmChargedYes", disable = true, @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "N", new { @id = "ViewrdorcmChargedNo", disable = true, @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                                else
                                {
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "Y", new { @id = "ViewrdorcmChargedYes", disable = true, @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => sh.RCMFlag, "N", new { @id = "ViewrdorcmChargedNo", disable = true, @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                            </td>
                        </tr>
                        </tr>
                        <tr>
                            <td style="padding-top: 10px;" colspan="6" align="center">
                                <center>
                                    <input type="hidden" id="istravels" value="@sh.Traveltypes" />
                                    <input type="hidden" id="isTravelclass" value="@sh.Travelclass" />
                                    <button type="button" id="btncanexp" title="Cancel" name="Cancel" class="btn btn-warning" onclick="GotoIndexExpense()"><span style="color:white;" class="glyphicon glyphicon-remove-sign"></span>Cancel</button>
                                </center>
                            </td>
                        </tr>
                    </table>

                </div>
            }
        </div>
    }

}

<style>
    .wht {
        width: 100%;
    }

    .txtarea {
        width: 97.5%;
        height: 50px;
        resize: none;
    }

    .withd {
        width: 96%;
    }

    .disp {
        display: none;
    }
</style>
<link href="@Url.Content("~/Content/RMchosen/chosen.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/RMScript/chosen.jquery.js")" type="text/javascript"></script>
<script>
    $(document).ready(function () {
        //Ramya Aug
        //var GSTCharged = $("#hdfEditViewGstChargedFlag").val();
        //if (GSTCharged == "Y") {
        //    $("#rdorcmChargedYes").prop("disabled", true);
        //    $("#rdorcmChargedNo").prop("disabled", true);
        //}
        //else {
        //    $("#rdorcmChargedYes").prop("disabled", false);
        //    $("#rdorcmChargedNo").prop("disabled", false);
        //}
        //$("#txtHsnId").chosen({});
        //$("#txtHsnId_chosen").addClass("mychosen").css('width', '100%');
        var HsnArray;
        LoadGSTINCategory();
        function LoadGSTINCategory() {
            var _tmpFilter = {
                ViewType: "5",
                RefId: "0"
            };
            $.ajax({
                type: "post",
                url: UrlHelper + "GetGSTINArray",
                data: JSON.stringify(_tmpFilter),
                async: false,
                contentType: "application/json;",
                success: function (response) {
                    var Data1 = "";
                    if (response.Data1 != null && response.Data1 != "" && JSON.parse(response.Data1) != null)
                        Data1 = JSON.parse(response.Data1);
                    HsnArray = Data1;
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {

                }
            });
        };
        $('#txtHsnId').change(function () {
            if (HsnArray.length > 0) {
                var hsnid = $("#txtHsnId").val();
                $("#rdorcmChargedNo").prop("checked", true);
                if (parseInt(hsnid) != 0 || hsnid != "") {
                    for (var i = 0; i < HsnArray.length; i++) {
                        if (parseInt(hsnid) == parseInt(HsnArray[i].hsnid)) {
                            $("#txthsndesc").val(HsnArray[i].Hsndesc);
                            var GSTCharged = $("#hdfEditViewGstChargedFlag").val();
                            if (GSTCharged == "N") {
                                LoadRCMonHSNChange(hsnid);
                            }
                            break;
                        }
                    }
                }
                else {
                    $("#txthsndesc").val("");
                }
            }
        });

        $("#txtAmountte").keyup(function (event) {
            if (event.which >= 37 && event.which <= 40) {
                event.preventDefault();
            }

            var currentval = $("#txtAmountte").val();
            var testDecimal = testDecimals(currentval);
            if (testDecimal.length > 1) {
                currentval = currentval.slice(0, -1);
            }
            $("#txtAmountte").val(replaceCommas(currentval));

        });

        var brandID = $("#ddlTravelModete").val();

        $("#txtDistancete").removeClass('required');
        $("#txtRatete").removeClass('required');
        $("#txtDistancete").removeClass('valid');
        $("#txtRatete").removeClass('valid');
        $('#txtAmountte').attr('disabled', false);

        var Studentnew =
          {
              "TravelModeId": brandID
          };
        $.ajax({
            url: '../TravelClaimNew/GetTravelClassdataflag/',
            data: JSON.stringify(Studentnew),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "Y") {
                    $('#txtDistancete').attr('disabled', false);
                    $('#txtRatete').attr('disabled', false);
                    $('#txtAmountte').attr('disabled', true);
                    cheval();
                }
                else {
                    $('#txtDistancete').attr('disabled', true);
                    $('#txtRatete').attr('disabled', true);
                    $('#txtAmountte').attr('disabled', false);
                    cheval();
                }
            },
            error: function (result) {
                jAlert("Error.", "Error");
                return false;
            }
        });

        $('#txtFCte').change(function () {
            var txtFC = $(this).val();
            var hdraiserfcc = $("#hdraiserfcc").val();
            if (txtFC != hdraiserfcc) {
                jAlert("To take additional approval", "Message");
                return false;
            }
        });
    });
    $(document).ready(function () {
        $('#txtCCte').change(function () {
            var txtCC = $(this).val();
            var hdraiserccc = $("#hdraiserccc").val();
            if (txtCC != hdraiserccc) {
                jAlert("To take additional approval", "Message");
                return false;
            }
        });
    });
    $(document).ready(function () {
        $("#txtOUCodete").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompleteoucode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.raiserccName, value: item.raiserccName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#txtProductCodete").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompleteproductcode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.raiserccName, value: item.raiserccName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {

        var isTravelclass = $("#isTravelclass").val();
        if (isTravelclass == "Y") {
            $('#txtDistancete').attr('disabled', false);
            //$("#txtDistancete").val('');
            $('#txtRatete').attr('disabled', false);
            //$("#txtRatete").val('');
        }
        else {
            $('#txtDistancete').attr('disabled', true);
            $("#txtDistancete").val('');
            $('#txtRatete').attr('disabled', true);
            $("#txtRatete").val('');
        }

        var istravelf = $("#istravels").val();
        if (istravelf == "T") {
            $("#nontravelmodeq").show();
            //$("#nontravelmodeq").fadeIn();
        }
        else if (istravelf = "O") {
            $("#nontravelmodeq").hide();
            //$("#nontravelmodeq").fadeOut();
        }

        $("#txtClaimPeriodFromte").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd-mm-yy',
            maxDate: '-id',
            numberOfMonths: 1,
            onSelect: function (selected) {
                $("#txtClaimPeriodFromte").addClass('valid');
                $("#txtClaimPeriodTote").datepicker("option", "minDate", selected);
            }
        });
    });
    $(document).ready(function () {
        $("#txtClaimPeriodTote").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd-mm-yy',
            maxDate: '-id',
            numberOfMonths: 1,
            onSelect: function (selected) {
                $("#txtClaimPeriodTote").addClass('valid');
                $("#txtClaimPeriodFromte").datepicker("option", "maxDate", selected);
                var txtContractFrom = $("#txtClaimPeriodTote").val();
                getmonth(txtContractFrom);
            }
        });
        var txtfromdate = $("#txtClaimPeriodFromte").val();
        var txttodate = $("#txtClaimPeriodTote").val();
        $("#txtClaimPeriodTote").datepicker("option", "minDate", txtfromdate);
        $("#txtClaimPeriodFromte").datepicker("option", "maxDate", txttodate);
    });
    function Newpolicypopup() {
        var SubCategory = $("#ddlSubCategoryte").val();
        if (SubCategory != "0") {
            var url = '@Url.Action("_Emppolicypopup", "TravelClaimNew")?id=' + SubCategory + '&' + new Date().getTime();
            objDialogpolicypopup.load(url);
            objDialogpolicypopup.dialog({
                autoOpen: false,
                cache: false,
                modal: true,
                show: 'fade-in',
                close: 'fade-out',
                title: 'Policy Help',
                width: 860,
                height: 400,
            });
            objDialogpolicypopup.dialog("open");
        }
    }


    $(document).ready(function () {
        window.parent.jQuery('#ForPartialViewpolicypopup').dialog('close');
        //window.parent.jQuery('#ForPartialViewpolicypopup').dialog('close');
        var stylesSelect = $('#txtClaimMonthte');
        stylesSelect.attr('disabled', true);
    });
    function GotoIndexExpense() {
        //objDialogTravelmodenew.remove();
        objDialogTravelmodenew.dialog("close");
        window.parent.jQuery('#ForPartialViewTravelmodenew').dialog('close');
    }

    function newSaveTravelmodeedit() {
        var ecfamomtssession = $("#ecfamomtssessiontmt").val();
        if (ecfamomtssession == null || ecfamomtssession == "0") {
            jAlert("The ECF Amount is Zero....", "Message");
            return false;
        }
        var NatureofExpenses = $("#ddlNatureofExpenseste").val();
        var ExpenseCategory = $("#ddlExpenseCategoryte").val();
        var SubCategory = $("#ddlSubCategoryte").val();
        var PlaceFrom1 = $("#ddlPlaceFromte").val();
        var PlaceFrom = $("#ddlPlaceFromte option:selected").text();
        var PlaceTo1 = $("#ddlPlaceTote").val();
        var PlaceTo = $("#ddlPlaceTote option:selected").text();
        var ClaimPeriodFrom = $("#txtClaimPeriodFromte").val();
        var ClaimPeriodTo = $("#txtClaimPeriodTote").val();
        var ClaimMonth = $("#txtClaimMonthte").val();
        var TravelMode = $("#ddlTravelModete").val();
        var TravelClass = $("#ddlTravelClasste").val();
        var Rate = $("#txtRatete").val();
        var Distance = $("#txtDistancete").val();
        var FC = $("#txtFCte").val();
        var CC = $("#txtCCte").val();
        var ProductCode = $("#txtProductCodete").val();
        var OUCode = $("#txtOUCodete").val();
        //var Amount = $("#txtAmountte").val();Please select The Expense Category
        var Amount = $("#txtAmountte").val().replace(/,/g, "");
        var travelDescription = $("#txttravelDescription").val();
        var istravels = $("#istravels").val();
        var ecfclaimmon = $("#txtclaimmontht").val();
        var Hsnid = $("#txtHsnId").val();
        var RCMFlag = "";
        if ($("input[id=rdorcmChargedYes]:radio[checked=checked]").attr("value")) {
            RCMFlag = "Y";
        }
        else {
            RCMFlag = "N";
        }

        if (NatureofExpenses == null || NatureofExpenses == "" || NatureofExpenses == "0") {
            jAlert("Please select the Nature of Expenses.", "Message");
            //$("#_CustomerName").focus();
            return false;
        }
        if (ExpenseCategory == null || ExpenseCategory == "0") {
            jAlert("Please select The Expense Category", "Message");
            return false;
        }
        if (SubCategory == null || SubCategory == "0") {
            jAlert("Please select the Sub Category", "Message");
            return false;
        }
        //if ($("input[name=rdogstChargedFlag]:radio[checked=checked]").attr("value") == "Y") {
        if (Hsnid == null || Hsnid == "" || Hsnid == "0") {
            jAlert("Please select the HSN Code.", "Message");
            $("#ddlNatureofExpenseste").focus();
            return false;
        }

        //}
        //else {
        //    Hsnid = "0";
        //}
        if (PlaceFrom == null || PlaceFrom == "0") {
            jAlert("Please Select 'PLACE FROM' field", "Message");
            return false;
        }
        if (PlaceTo == null || PlaceTo == "0") {
            jAlert("Please Select 'PLACE TO' field", "Message");
            return false;
        }
        if (ClaimPeriodFrom == null || ClaimPeriodFrom == "") {
            jAlert("Enter 'CLAIM PERIOD FROM' date", "Message");
            return false;
        }
        if (ClaimPeriodTo == null || ClaimPeriodTo == "") {
            jAlert("Enter 'CLAIM PERIOD TO' date", "Message");
            return false;
        }
        if (ClaimMonth == null || ClaimMonth == "") {
            jAlert("Please enter the 'SERVICE MONTH' ", "Message");
            return false;
        }
        if (ecfclaimmon != ClaimMonth) {
            jAlert("Month mismatch between 'SERVICE MONTH' & 'CLAIM PERIOD TO' fields", "Message");
            return false;
        }
        if (istravels == "T") {
            if (TravelMode == null || TravelMode == "0") {
                jAlert(" Please select the Travel Mode", "Message");
                return false;
            }
            if (TravelClass == null || TravelClass == "0") {
                jAlert("Please Select the Travel Class", "Message");
                return false;
            }
        }
        else {
            TravelMode = "0";
            TravelClass = "0";
        }
        if (FC == null || FC == "") {
            jAlert("Please Enter FC.", "Message");
            return false;
        }
        if (CC == null || CC == "") {
            jAlert("Please Enter the Cost Center(CC)", "Message");
            return false;
        }
        if (ProductCode == null || ProductCode == "") {
            jAlert("Please Enter the Product Code", "Message");
            return false;
        }
        if (OUCode == null || OUCode == "") {
            jAlert("Please Enter OUCode.", "Message");
            return false;
        }
        if (PlaceFrom == PlaceTo) {
            jAlert("PlaceFrom and PlaceTo cann't be the same.", "Message");
            return false;
        }
        if (Amount == null || Amount == "") {
            jAlert("Please Enter Amount.", "Message");
            return false;
        }
        if (Amount == "NAN" || Amount == "0.00" || Amount == "0") {
            jAlert("Please Enter Rate or Distance.", "Message");
            return false;
        }
        var val1 = parseFloat(ecfamomtssession);
        var val2 = parseFloat(Amount);
        if (parseFloat(val1) < parseFloat(val2)) {
            jAlert("The debit lines Amount must be equal to ECF Amount ", "Message");
            return false;
        }
        else {

            var NewExpensemodel = {
                "NatureofExpensesName": NatureofExpenses,
                "ExpenseCategoryName": ExpenseCategory,
                "SubCategoryName": SubCategory,
                "PlaceFrom": PlaceFrom,
                "PlaceTo": PlaceTo,
                "ClaimPeriodFrom": ClaimPeriodFrom,
                "ClaimPeriodTo": ClaimPeriodTo,
                "ClaimMonth": ClaimMonth,
                "TravelModeName": TravelMode,
                "TravelClassName": TravelClass,
                "Rate": Rate,
                "Distance": Distance,
                "FC": FC,
                "CC": CC,
                "ProductCode": ProductCode,
                "OUCode": OUCode,
                "travelDescription": travelDescription,
                "Traveltypes": istravels,
                "Amount": Amount,
                "TravelHsnid": Hsnid,
                "RCMFlag": RCMFlag
            };
            $.post('../TravelClaimNew/_TravelModeEdit', NewExpensemodel,
            function (data) {
                if (data == "Success") {
                    jAlert("Updated Successfully.", "Message");
                    //alert('edit1')
                    var url = '@Url.Action("_TravelModeDetails", "TravelClaimNew")?' + new Date().getTime();
                    $("#wgTravelmodett").load(url);
                    var url1 = '@Url.Action("_LoadGstDetails", "TravelClaimNew")?' + new Date().getTime();
                    $("#Grdgstdetls").load(url1);
                    var url2 = '@Url.Action("_LoadRCMDetails", "TravelClaimNew")?' + new Date().getTime();
                    $("#GrdRCMdetls").load(url2);


                    //selva 19-02-2021 Old travel Claim Expense Edit RCM TO GST Reflect in split amount Payment tab
                    var url3 = '@Url.Action("_EmpPaymentDetails", "TravelClaimNew")?' + new Date().getTime();
                    $("#wgempPaymentt").load(url3);

                    window.parent.jQuery('#ForPartialViewTravelmodenew').dialog('close');
                    GotoIndexExpense();
                }
                else if (data == "duplicate") {
                    jAlert("Duplicate Data: Data Already Exits.", "Message");
                    return false;
                }
                else {
                    jAlert(data, "Message");
                    return false;
                }

            }, 'json');
        }
    }

    $(document).ready(function () {
        var HsnArray;
        $('#ddlNatureofExpenseste').change(function () {
            var brandID = $(this).val();
            var Student =
           {
               "NatureofExpensesId": brandID
           };
            $.ajax({
                url: '../TravelClaimNew/GetExpenseCategory/',
                data: JSON.stringify(Student),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    cheval();
                    $("#ddlExpenseCategoryte").empty();
                    $("#ddlSubCategoryte").empty();
                    if (data.length > 0) {
                        $("#ddlSubCategoryte").append("<option value='0' >--Select--</option>");
                        $("#ddlExpenseCategoryte").append("<option value='0' >--Select--</option>");
                        for (var i = 0; i < data.length; i++) {
                            var stylesSelect = $('#ddlExpenseCategoryte');
                            stylesSelect.attr('disabled', false);
                            $("#ddlExpenseCategoryte").append("<option value=" + data[i].ExpenseCategoryId + " >" + data[i].ExpenseCategoryName + "</option>");
                        }

                        var Studentnew =
                          {
                              "NatureofExpensesId": brandID
                          };
                        $.ajax({
                            url: '../TravelClaimNew/GetExpenseCategoryflag/',
                            data: JSON.stringify(Studentnew),
                            type: 'POST',
                            contentType: 'application/json; charset=utf-8',
                            success: function (data) {
                                if (data == "T") {
                                    $("#istravels").val(data);
                                    $("#nontravelmodeq").show();
                                    cheval();
                                }
                                else {
                                    $("#istravels").val(data);
                                    $("#nontravelmodeq").hide();
                                    cheval();
                                }
                            },
                            error: function (result) {
                                jAlert("Error.", "Error");
                                return false;
                            }
                        });
                    }

                    if (data.length == 0) {
                        $("#ddlSubCategoryte").append("<option value='0' >--Select--</option>");
                        $("#ddlExpenseCategoryte").append("<option value='0' >--Select--</option>");
                        var stylesSelect = $('#ddlExpenseCategoryte');
                        stylesSelect.attr('disabled', true);
                        var stylesSelect = $('#ddlSubCategoryte');
                        stylesSelect.attr('disabled', true);
                    }
                },
                error: function (result) {
                    jAlert("Error.", "Error");
                    return false;
                }
            });
        });

        $('#ddlExpenseCategoryte').change(function () {
            var brandID = $(this).val();
            var Student =
           {
               "ExpenseCategoryId": brandID
           };
            $.ajax({
                url: '../TravelClaimNew/GetSubCategory/',
                data: JSON.stringify(Student),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    cheval();
                    $("#ddlSubCategoryte").empty();
                    var data1 = JSON.parse(data.Data1);
                    if (data1.length > 0) {
                        debugger;
                        $("#ddlSubCategoryte").append("<option value='0' >--Select--</option>");
                        for (var i = 0; i < data1.length; i++) {
                            //var stylesSelect = $('#ddlSubCategory');
                            //stylesSelect.attr('disabled', false);
                            $("#ddlSubCategoryte").append("<option value=" + data1[i].expsubcat_gid + " >" + data1[i].expsubcat_name + "</option>");
                        }
                    }
                    debugger;
                    if (data1.length == 0) {
                        var stylesSelect = $('#ddlSubCategoryte');
                        stylesSelect.attr('disabled', true);
                        $('#btnsavexpNN').attr('disabled', true);
                    }
                },
                error: function (result) {
                    jAlert("Error.", "Error");
                    return false;
                }
            });
        });
        $('#ddlSubCategoryte').change(function () {
            debugger;
            var brandID = $(this).val();
            if (brandID != "0") {
                var Student =
               {
                   "ExpenseCategoryId": brandID
               };
                $.ajax({
                    url: '../TravelClaimNew/GetSubCategorypolicy/',
                    data: JSON.stringify(Student),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        cheval();
                        if (data.policy != "") {
                            var stylesSelect = $('#Getpolicypopup');
                            stylesSelect.attr('disabled', false);
                        }

                        $("#txtHsnId").empty();
                        debugger;
                        if (data.Data2 != "" && data.Data2 != null) {
                            debugger;
                            HsnArray = JSON.parse(data.Data2);
                            //$("#txtHsnId").empty();
                            if (HsnArray.length > 0) {
                                debugger;
                                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                                for (var i = 0; i < HsnArray.length; i++) {
                                    debugger;
                                    var stylesSelect1 = $('#txtHsnId');
                                    stylesSelect1.attr('disabled', false);
                                    $("#txtHsnId").append("<option value=" + HsnArray[i].hsnid + " >" + HsnArray[i].hsncode + "</option>");
                                }
                            }
                            else {
                                debugger;
                                $("#txtHsnId").empty();
                                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                                var stylesSelect1 = $('#txtHsnId');
                                stylesSelect1.attr('disabled', true);
                            }
                        }


                        else {
                            var stylesSelect = $('#Getpolicypopupt');
                            stylesSelect.attr('disabled', true);
                            $("#txtHsnId").empty();
                            $("#txtHsnId").append("<option value='0' >--Select--</option>");
                            var stylesSelect1 = $('#txtHsnId');
                            stylesSelect1.attr('disabled', true);
                            $("#txtHsnId").removeClass('valid');
                            $("#txtHsnId").addClass('required');
                            cheval();
                        }
                    },
                    error: function (result) {
                        jAlert("Error.", "Error");
                        return false;
                    }
                });
            }
            else {
                var stylesSelect = $('#Getpolicypopup');
                stylesSelect.attr('disabled', true);
            }
        });
        function LoadRCMonHSNChange(txtHsnID) {
            //hsn+provider location state
            var DebitlineGId = 0;
            var ECFId = 0;
            var invid = 0;
            var ProviderLocation = 0;
            var GstinVendor = 0;
            var hsngid = txtHsnID;

            var rcmflagparam = {
                DebitlineGId: DebitlineGId,
                ECFId: ECFId,
                invid: invid,
                hsngid: hsngid,
                ProviderLocation: ProviderLocation,
                action: 'single'
            };
            $.ajax({
                type: "post",
                url: "../TravelClaimNew/CheckrcmExists",
                data: JSON.stringify(rcmflagparam),
                contentType: "application/json;",
                success: function (response) {
                    var Data1 = "";
                    if (response.Data1 != null && response.Data1 != "" && JSON.parse(response.Data1) != null) {
                        Data1 = JSON.parse(response.Data1);
                        if (Data1[0].STATUS == 'EXISTS')
                            $("#rdorcmChargedYes").prop("checked", true);
                        else {
                            $("#rdorcmChargedNo").prop("checked", true);
                        }
                    }


                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });

        };
        $('#ddlTravelModete').change(function () {
            var brandID = $(this).val();
            var Student =
           {
               "TravelModeId": brandID
           };
            $.ajax({
                url: '../TravelClaimNew/GetTravelClassdata/',
                data: JSON.stringify(Student),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    cheval();
                    $("#ddlTravelClasste").empty();
                    if (data.length > 0) {
                        $("#ddlTravelClasste").append("<option value='0' >--Select--</option>");
                        for (var i = 0; i < data.length; i++) {
                            var stylesSelect = $('#ddlTravelClasste');
                            stylesSelect.attr('disabled', false);
                            $("#ddlTravelClasste").append("<option value=" + data[i].TravelClassId + " >" + data[i].TravelClassName + "</option>");
                        }

                        $("#txtDistancete").removeClass('required');
                        $("#txtRatete").removeClass('required');
                        $("#txtDistancete").removeClass('valid');
                        $("#txtRatete").removeClass('valid');
                        $('#txtAmountte').attr('disabled', false);
                        //$('#txtAmountte').attr('disabled', false);
                        //$("#txtAmountte").val('');
                        //$("#txtAmountte").addClass('required');

                        var Studentnew =
                          {
                              "TravelModeId": brandID
                          };
                        $.ajax({
                            url: '../TravelClaimNew/GetTravelClassdataflag/',
                            data: JSON.stringify(Studentnew),
                            type: 'POST',
                            contentType: 'application/json; charset=utf-8',
                            success: function (data) {
                                if (data == "Y") {
                                    $('#txtDistancete').attr('disabled', false);
                                    $("#txtDistancete").val('');
                                    $('#txtRatete').attr('disabled', false);
                                    $("#txtRatete").val('');

                                    $("#txtDistancete").removeClass('valid');
                                    $("#txtDistancete").addClass('required');
                                    $("#txtRatete").removeClass('valid');
                                    $("#txtRatete").addClass('required');

                                    cheval();
                                }
                                else {
                                    $('#txtDistancete').attr('disabled', true);
                                    $("#txtDistancete").val('');
                                    $('#txtRatete').attr('disabled', true);
                                    $("#txtRatete").val('');
                                    cheval();
                                    $("#txtAmountte").removeClass('required');
                                }
                            },
                            error: function (result) {
                                jAlert("Error.", "Error");
                                return false;
                            }
                        });

                    }
                    if (data.length == 0) {
                        var stylesSelect = $('#ddlTravelClasste');
                        stylesSelect.attr('disabled', true);
                        $("#ddlTravelClasste").append("<option value='0' >--Select--</option>");
                    }
                },
                error: function (result) {
                    jAlert("Error.", "Error");
                    return false;
                }
            });
        });

        $('#ddlPlaceFromte').change(function () {
            concatfilds();
        });
        $('#ddlPlaceTote').change(function () {
            concatfilds();
        });
        $('#txtClaimPeriodFromte').change(function () {
            concatfilds();
        });
        $('#txtClaimPeriodTote').change(function () {
            concatfilds();
        });
        function concatfilds() {
            var SubCategoryt = $("#ddlSubCategoryte option:selected").text();
            if (SubCategoryt != "--Select--") {
                SubCategoryt = SubCategoryt.split('-');

                var Beneficiary = $("#txtraisernamet").text();

                var placefroms = $("#ddlPlaceFromte option:selected").text();
                var placetos = $("#ddlPlaceTote option:selected").text();

                var ClaimPeriodFroms = $("#txtClaimPeriodFromte").val();
                var ClaimPeriodTos = $("#txtClaimPeriodTote").val();

                if (placefroms == "--Select--" && placetos == "--Select--" && ClaimPeriodFroms == "" && ClaimPeriodTos == "") {
                    $("#txttravelDescription").val(SubCategoryt[0] + '-' + Beneficiary);
                }
                else if (placefroms == "--Select--" && placetos == "--Select--" && ClaimPeriodFroms != "" && ClaimPeriodTos == "") {
                    $("#txttravelDescription").val(SubCategoryt[0] + '-' + '-' + ClaimPeriodFroms + Beneficiary);
                }
                else if (placefroms == "--Select--" && placetos == "--Select--" && ClaimPeriodFroms != "" && ClaimPeriodTos != "") {
                    $("#txttravelDescription").val(SubCategoryt[0] + '-' + '-' + ClaimPeriodFroms + '-' + ClaimPeriodTos + '-' + Beneficiary);
                }
                else if (placefroms != "--Select--" && placetos == "--Select--" && ClaimPeriodFroms == "" && ClaimPeriodTos == "") {
                    $("#txttravelDescription").val(SubCategoryt[0] + '-' + placefroms + '-' + Beneficiary);
                }
                else if (placefroms != "--Select--" && placetos != "--Select--" && ClaimPeriodFroms == "" && ClaimPeriodTos == "") {
                    $("#txttravelDescription").val(SubCategoryt[0] + '-' + placefroms + '-' + placetos + '-' + Beneficiary);
                }
                else if (placefroms != "--Select--" && placetos != "--Select--" && ClaimPeriodFroms != "" && ClaimPeriodTos == "") {
                    $("#txttravelDescription").val(SubCategoryt[0] + '-' + placefroms + '-' + placetos + '-' + ClaimPeriodFroms + '-' + Beneficiary);
                }
                else if (placefroms != "--Select--" && placetos != "--Select--" && ClaimPeriodFroms != "" && ClaimPeriodTos != "") {
                    $("#txttravelDescription").val(SubCategoryt[0] + '-' + placefroms + '-' + placetos + '-' + ClaimPeriodFroms + '-' + ClaimPeriodTos + '-' + Beneficiary);
                }
            }
            else {
                $("#txttravelDescription").val('');
            }
        }

        $('#ddlSubCategoryt').change(function () {
            var brandID = $(this).val();
            if (brandID != "0") {
                concatfilds();
                var Student =
               {
                   "ExpenseCategoryId": brandID
               };
                $.ajax({
                    url: '../TravelClaimnew/GetSubCategorypolicy/',
                    data: JSON.stringify(Student),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        cheval();
                        if (data.policy != "") {
                            var stylesSelect = $('#Getpolicypopupt');
                            stylesSelect.attr('disabled', false);
                        }
                        $("#txtHsnId").empty();

                        if (data.Data2 != "" && data.Data2 != null) {
                            HsnArray = JSON.parse(data.Data2);
                            var data2 = JSON.parse(data.Data2);
                            $("#txtHsnId").empty();
                            if (data2.length > 0) {
                                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                                for (var i = 0; i < data2.length; i++) {
                                    var stylesSelect1 = $('#txtHsnId');
                                    stylesSelect1.attr('disabled', false);
                                    $("#txtHsnId").append("<option value=" + data2[i].hsnid + " >" + data2[i].hsncode + "</option>");
                                }
                            }
                            else {

                                $("#txtHsnId").empty();
                                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                                var stylesSelect1 = $('#txtHsnId');
                                stylesSelect1.attr('disabled', true);
                            }
                        }


                        else {

                            var stylesSelect = $('#Getpolicypopupt');
                            stylesSelect.attr('disabled', true);
                            $("#txtHsnId").empty();
                            $("#txtHsnId").append("<option value='0' >--Select--</option>");
                            var stylesSelect1 = $('#txtHsnId');
                            stylesSelect1.attr('disabled', true);
                            $("#txtHsnId").removeClass('valid');
                            $("#txtHsnId").addClass('required');
                            cheval();

                        }
                    },
                    error: function (result) {

                        $("#txtHsnId").empty();
                        $("#txtHsnId").append("<option value='0' >--Select--</option>");
                        var stylesSelect1 = $('#txtHsnId');
                        stylesSelect1.attr('disabled', true);

                        jAlert("Error.", "Error");
                        return false;
                    }
                });
            }
            else {
                //var stylesSelect = $('#Getpolicypopupt');
                //stylesSelect.attr('disabled', true);
                $("#txtHsnId").empty();
                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                var stylesSelect1 = $('#txtHsnId');
                stylesSelect1.attr('disabled', true);
            }
        });

        $('#txtCCte').change(function () {
            var ccs = $("#txtCCte option:selected").text();
            var fcs = $("#txtFCte option:selected").text();
            concode(fcs, ccs);
        });
        $('#txtFCte').change(function () {
            var ccs = $("#txtCCte option:selected").text();
            var fcs = $("#txtFCte option:selected").text();
            concode(fcs, ccs);
        });
    });
    function concode(fcs, ccs) {
        var fc = fcs.split('-');
        var cc = ccs.split('-');
        $("#txtFCCC").val(fc[1] + "-" + cc[1]);
    }


    $(document).ready(function () {

        $("#txtDistancete").keyup(function () {
            var txtContractFrom = $("#txtDistancete").val();
            if (txtContractFrom != "") {
                $("#txtDistancete").removeClass('required');
                $("#txtDistancete").addClass('valid'); cheval();
            }
            else {
                $("#txtDistancete").removeClass('valid');
                $("#txtDistancete").addClass('required'); cheval();
            }
        });
        $("#txtDistancete").change(function () {
            var txtContractFrom = $("#txtDistancete").val();
            if (txtContractFrom != "") {
                $("#txtDistancete").removeClass('required');
                $("#txtDistancete").addClass('valid'); cheval();
            }
            else {
                $("#txtDistancete").removeClass('valid');
                $("#txtDistancete").addClass('required'); cheval();
            }
        });

        $("#txtRatete").keyup(function () {
            var txtContractFrom = $("#txtRatete").val();
            if (txtContractFrom != "") {
                $("#txtRatete").removeClass('required');
                $("#txtRatete").addClass('valid'); cheval();
            }
            else {
                $("#txtRatete").removeClass('valid');
                $("#txtRatete").addClass('required'); cheval();
            }
        });
        $("#txtRatete").change(function () {
            var txtContractFrom = $("#txtRatete").val();
            if (txtContractFrom != "") {
                $("#txtRatete").removeClass('required');
                $("#txtRatete").addClass('valid'); cheval();
            }
            else {
                $("#txtRatete").removeClass('valid');
                $("#txtRatete").addClass('required'); cheval();
            }
        });

        $("#ddlPlaceTote").keyup(function () {
            var txtContractFrom = $("#ddlPlaceTote option:selected").text();
            if (txtContractFrom != "--Select--") {
                $("#ddlPlaceTote").removeClass('required');
                $("#ddlPlaceTote").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceTote").removeClass('valid');
                $("#ddlPlaceTote").addClass('required'); cheval();
            }
        });
        $("#ddlPlaceTote").change(function () {
            var txtContractFrom = $("#ddlPlaceTote option:selected").text();
            if (txtContractFrom != "--Select--") {
                $("#ddlPlaceTote").removeClass('required');
                $("#ddlPlaceTote").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceTote").removeClass('valid');
                $("#ddlPlaceTote").addClass('required'); cheval();
            }
        });
        var txtContractFrom = $("#ddlPlaceTote option:selected").text();
        if (txtContractFrom != "--Select--") {
            $("#ddlPlaceTote").addClass('valid'); cheval();
        }
        else {
            $("#ddlPlaceTote").addClass('required'); cheval();
        }
        $("#ddlPlaceFromte").keyup(function () {
            var txtContractFrom = $("#ddlPlaceFromte option:selected").text();
            if (txtContractFrom != "--Select--") {
                $("#ddlPlaceFromte").removeClass('required');
                $("#ddlPlaceFromte").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceFromte").removeClass('valid');
                $("#ddlPlaceFromte").addClass('required'); cheval();
            }
        });
        $("#ddlPlaceFromte").change(function () {
            var txtContractFrom = $("#ddlPlaceFromte option:selected").text();
            if (txtContractFrom != "--Select--") {
                $("#ddlPlaceFromte").removeClass('required');
                $("#ddlPlaceFromte").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceFromte").removeClass('valid');
                $("#ddlPlaceFromte").addClass('required'); cheval();
            }
        });
        var txtContractFrom = $("#ddlPlaceFromte option:selected").text();
        if (txtContractFrom != "--Select--") {
            $("#ddlPlaceFromte").addClass('valid');
        }
        else {
            $("#ddlPlaceFromte").addClass('required');
        }

        $("#txtDistancete").keyup(function () {
            var txtContractFrom = $("#txtDistancete").val();
            var txtRatet = $("#txtRatete").val();
            if (txtContractFrom != "" || txtRatet != "") {
                cheval();
                $("#txtAmountte").removeClass('required');
                $("#txtAmountte").removeClass('valid');
                $('#txtAmountte').attr('disabled', true);

                //var tol = $('#txtDistancete').val() * ($('#txtRatete').val());
                //$('#txtAmountte').val(tol.toFixed(2)); cheval();
                var currentvalnew = $('#txtDistancete').val() * ($('#txtRatete').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmountte').val(tolnew);
                cheval();

            }
            else {
                cheval();
                $("#txtAmountte").addClass('required');
                $("#txtAmountte").removeClass('valid');
                $('#txtAmountte').attr('disabled', false);
                $("#txtAmountte").val(''); cheval();
            }
        });
        $("#txtDistancete").change(function () {
            var txtContractFrom = $("#txtDistancete").val();
            var txtRatet = $("#txtRatete").val();
            if (txtContractFrom != "" || txtRatet != "") {
                cheval();
                $("#txtAmountt").removeClass('required');
                $("#txtAmountte").removeClass('valid');
                $('#txtAmountte').attr('disabled', true);

                //var tol = $('#txtDistancete').val() * ($('#txtRatete').val());
                //$('#txtAmountte').val(tol.toFixed(2)); cheval();
                var currentvalnew = $('#txtDistancete').val() * ($('#txtRatete').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmountte').val(tolnew);
                cheval();
            }
            else {
                cheval();
                $("#txtAmountte").addClass('required');
                $("#txtAmountte").removeClass('valid');
                $('#txtAmountte').attr('disabled', false);
                $("#txtAmountte").val(''); cheval();
            }
        });

        $("#txtRatete").keyup(function () {
            var txtContractFrom = $("#txtRatete").val();
            var txtDistancet = $("#txtDistancete").val();
            if (txtContractFrom != "" || txtDistancet != "") {
                cheval();
                $("#txtAmountte").removeClass('required');
                $("#txtAmountte").removeClass('valid');
                $('#txtAmountte').attr('disabled', true);

                //var tol = $('#txtDistancete').val() * ($('#txtRatete').val());
                //$('#txtAmountte').val(tol.toFixed(2)); cheval();
                var currentvalnew = $('#txtDistancete').val() * ($('#txtRatete').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmountte').val(tolnew);
                cheval();
            }
            else {
                cheval();
                $("#txtAmountte").addClass('required');
                $("#txtAmountte").removeClass('valid');
                $('#txtAmountte').attr('disabled', false);
                $("#txtAmountte").val(''); cheval();
            }
        });
        $("#txtRatete").change(function () {

            var txtContractFrom = $("#txtRatete").val();
            var txtDistancet = $("#txtDistancete").val();
            if (txtContractFrom != "" || txtDistancet != "") {
                cheval();
                $("#txtAmountte").removeClass('required');
                $("#txtAmountte").removeClass('valid');
                $('#txtAmountte').attr('disabled', true);

                //var tol = $('#txtDistancete').val() * ($('#txtRatete').val());
                //$('#txtAmountte').val(tol.toFixed(2)); cheval();
                var currentvalnew = $('#txtDistancete').val() * ($('#txtRatete').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmountte').val(tolnew);
                cheval();
            }
            else {
                cheval();
                $("#txtAmountte").addClass('required');
                $("#txtAmountte").removeClass('valid');
                $('#txtAmountte').attr('disabled', false);
                $("#txtAmountte").val(''); cheval();
            }
        });
        $("#ddlTravelClasste").keyup(function () {
            var txtContractFrom = $("#ddlTravelClasste").val();
            if (txtContractFrom != "0") {
                $("#ddlTravelClasste").removeClass('required');
                $("#ddlTravelClasste").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelClasste").removeClass('valid');
                $("#ddlTravelClasste").addClass('required'); cheval();
            }
        });
        $("#ddlTravelClasste").change(function () {
            var txtContractFrom = $("#ddlTravelClasste").val();
            if (txtContractFrom != "0") {
                $("#ddlTravelClasste").removeClass('required');
                $("#ddlTravelClasste").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelClasste").removeClass('valid');
                $("#ddlTravelClasste").addClass('required'); cheval();
            }
        });
        var txtContractFrom = $("#ddlTravelClasste").val();
        if (txtContractFrom != "0") {
            $("#ddlTravelClasste").addClass('valid'); cheval();
        }
        else {
            $("#ddlTravelClasste").addClass('required'); cheval();
        }
        $("#ddlTravelModete").keyup(function () {
            var txtContractFrom = $("#ddlTravelModete").val();
            if (txtContractFrom != "0") {
                $("#ddlTravelModete").removeClass('required');
                $("#ddlTravelModete").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelModete").removeClass('valid');
                $("#ddlTravelModete").addClass('required'); cheval();
            }
        });
        $("#ddlTravelModete").change(function () {
            var txtContractFrom = $("#ddlTravelModete").val();
            if (txtContractFrom != "0") {
                $("#ddlTravelModete").removeClass('required');
                $("#ddlTravelModete").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelModete").removeClass('valid');
                $("#ddlTravelModete").addClass('required'); cheval();
            }
        });
        var txtContractFrom = $("#ddlTravelModete").val();
        if (txtContractFrom != "0") {
            $("#ddlTravelModete").addClass('valid'); cheval();
        }
        else {
            $("#ddlTravelModete").addClass('required'); cheval();
        }
        $("#ddlNatureofExpenseste").keyup(function () {
            var txtContractFrom = $("#ddlNatureofExpenseste").val();
            if (txtContractFrom != "0") {
                $("#ddlNatureofExpenseste").removeClass('required');
                $("#ddlNatureofExpenseste").addClass('valid'); cheval();
            }
            else {
                $("#ddlNatureofExpenseste").removeClass('valid');
                $("#ddlNatureofExpenseste").addClass('required'); cheval();
            }
        });
        $("#ddlNatureofExpenseste").change(function () {
            var txtContractFrom = $("#ddlNatureofExpenseste").val();
            if (txtContractFrom != "0") {
                $("#ddlNatureofExpenseste").removeClass('required');
                $("#ddlNatureofExpenseste").addClass('valid'); cheval();
            }
            else {
                $("#ddlNatureofExpenseste").removeClass('valid');
                $("#ddlNatureofExpenseste").addClass('required'); cheval();
            }
        });
        var txtContractFrom = $("#ddlNatureofExpenseste").val();
        if (txtContractFrom != "0") {
            $("#ddlNatureofExpenseste").addClass('valid'); cheval();
        }
        else {
            $("#ddlNatureofExpenseste").addClass('required'); cheval();
        }
        $("#ddlExpenseCategoryte").keyup(function () {
            var txtContractFrom = $("#ddlExpenseCategoryte").val();
            if (txtContractFrom != "0") {
                $("#ddlExpenseCategoryte").removeClass('required');
                $("#ddlExpenseCategoryte").addClass('valid'); cheval();
            }
            else {
                $("#ddlExpenseCategoryte").removeClass('valid');
                $("#ddlExpenseCategoryte").addClass('required'); cheval();
            }
        });
        $("#ddlExpenseCategoryte").change(function () {
            var txtContractFrom = $("#ddlExpenseCategoryte").val();
            if (txtContractFrom != "0") {
                $("#ddlExpenseCategoryte").removeClass('required');
                $("#ddlExpenseCategoryte").addClass('valid'); cheval();
            }
            else {
                $("#ddlExpenseCategoryte").removeClass('valid'); cheval();
                $("#ddlExpenseCategoryte").addClass('required');
            }
        });
        var txtContractFrom = $("#ddlExpenseCategoryte").val();
        if (txtContractFrom != "0") {
            $("#ddlExpenseCategoryte").addClass('valid'); cheval();
        }
        else {
            $("#ddlExpenseCategoryte").addClass('required'); cheval();
        }
        $("#ddlSubCategoryte").keyup(function () {
            var txtContractFrom = $("#ddlSubCategoryte").val();
            if (txtContractFrom != "0") {
                $("#ddlSubCategoryte").removeClass('required');
                $("#ddlSubCategoryte").addClass('valid'); cheval();
            }
            else {
                $("#ddlSubCategoryte").removeClass('valid');
                $("#ddlSubCategoryte").addClass('required'); cheval();
            }
        });
        $("#ddlSubCategoryte").change(function () {
            var txtContractFrom = $("#ddlSubCategoryte").val();
            if (txtContractFrom != "0") {
                $("#ddlSubCategoryte").removeClass('required');
                $("#ddlSubCategoryte").addClass('valid'); cheval();
            }
            else {
                $("#ddlSubCategoryte").removeClass('valid');
                $("#ddlSubCategoryte").addClass('required');
            }
        });
        var txtContractFrom = $("#ddlSubCategoryte").val();
        if (txtContractFrom != "0") {
            $("#ddlSubCategoryte").addClass('valid'); cheval();
        }
        else {
            $("#ddlSubCategoryte").addClass('required'); cheval();
        }

        $("#txtAmountte").keyup(function () {
            var txtContractFrom = $("#txtAmountte").val();
            if (txtContractFrom != "") {
                $("#txtAmountte").removeClass('required');
                $("#txtAmountte").addClass('valid'); cheval();
            }
            else {
                $("#txtAmountte").removeClass('valid');
                $("#txtAmountte").addClass('required'); cheval();
            }
        });
        $("#txtAmountte").change(function () {
            var txtContractFrom = $("#txtAmountte").val();
            if (txtContractFrom != "") {
                $("#txtAmountte").removeClass('required');
                $("#txtAmountte").addClass('valid'); cheval();
            }
            else {
                $("#txtAmountte").removeClass('valid');
                $("#txtAmountte").addClass('required'); cheval();
            }
        });
        var txtContractFrom = $("#txtAmountte").val();
        if (txtContractFrom != "") {
            $("#txtAmountte").addClass('valid'); cheval();
        }
        else {
            $("#txtAmountt").addClass('required'); cheval();
        }
        $("#txtClaimPeriodFromte").keyup(function () {
            var txtContractFrom = $("#txtClaimPeriodFromte").val();
            if (txtContractFrom != "") {
                $("#txtClaimPeriodFromte").removeClass('required');
                $("#txtClaimPeriodFromte").addClass('valid'); cheval();
            }
            else {
                $("#txtClaimPeriodFromte").removeClass('valid');
                $("#txtClaimPeriodFromte").addClass('required'); cheval();
            }
        });
        $("#txtClaimPeriodFromte").change(function () {
            var txtContractFrom = $("#txtClaimPeriodFromte").val();
            if (txtContractFrom != "") {
                $("#txtClaimPeriodFromte").removeClass('required');
                $("#txtClaimPeriodFromte").addClass('valid'); cheval();
            }
            else {
                $("#txtClaimPeriodFromte").removeClass('valid');
                $("#txtClaimPeriodFromte").addClass('required'); cheval();
            }
        });

        var txtContractFrom = $("#txtClaimPeriodFromte").val();
        if (txtContractFrom != "") {
            $("#txtClaimPeriodFromte").addClass('valid'); cheval();
        }
        else {
            $("#txtClaimPeriodFromte").addClass('required'); cheval();
        }

        $("#txtClaimPeriodTote").keyup(function () {
            var txtContractFrom = $("#txtClaimPeriodTote").val();
            if (txtContractFrom != "") {
                $("#txtClaimPeriodTote").removeClass('required');
                $("#txtClaimPeriodTote").addClass('valid');
                getmonth(txtContractFrom); cheval();
            }
            else {
                $("#txtClaimPeriodTote").removeClass('valid');
                $("#txtClaimPeriodTote").addClass('required'); cheval();
            }
        });
        $("#txtClaimPeriodTote").change(function () {
            var txtContractFrom = $("#txtClaimPeriodTote").val();
            if (txtContractFrom != "") {
                $("#txtClaimPeriodTote").removeClass('required');
                $("#txtClaimPeriodTote").addClass('valid');
                getmonth(txtContractFrom); cheval();
            }
            else {
                $("#txtClaimPeriodTote").removeClass('valid');
                $("#txtClaimPeriodTote").addClass('required'); cheval();
            }
        });
        var txtContractFrom = $("#txtClaimPeriodTote").val();
        if (txtContractFrom != "") {
            $("#txtClaimPeriodTote").addClass('valid');
            getmonth(txtContractFrom); cheval();
        }
        else {
            $("#txtClaimPeriodTote").addClass('required'); cheval();
        }

        $("#txtProductCodete").keyup(function () {
            var txtContractFrom = $("#txtProductCodete").val();
            if (txtContractFrom != "") {
                $("#txtProductCodete").removeClass('required');
                $("#txtProductCodete").addClass('valid');
                cheval();
            }
            else {
                $("#txtProductCodete").removeClass('valid');
                $("#txtProductCodete").addClass('required');
                cheval();
            }
        });
        $("#txtProductCodete").change(function () {
            var txtContractFrom = $("#txtProductCodete").val();
            if (txtContractFrom != "") {
                $("#txtProductCodete").removeClass('required');
                $("#txtProductCodete").addClass('valid');
                cheval();
            }
            else {
                $("#txtProductCodete").removeClass('valid');
                $("#txtProductCodete").addClass('required');
                cheval();
            }
        });
        $("#txtOUCodete").keyup(function () {
            var txtContractFrom = $("#txtOUCodete").val();
            if (txtContractFrom != "") {
                $("#txtOUCodete").removeClass('required');
                $("#txtOUCodete").addClass('valid');
                cheval();
            }
            else {
                $("#txtOUCodete").removeClass('valid');
                $("#txtOUCodete").addClass('required');
                cheval();
            }
        });
        $("#txtOUCodete").change(function () {
            var txtContractFrom = $("#txtOUCodete").val();
            if (txtContractFrom != "") {
                $("#txtOUCodete").removeClass('required');
                $("#txtOUCodete").addClass('valid');
                cheval();
            }
            else {
                $("#txtOUCodete").removeClass('valid');
                $("#txtOUCodete").addClass('required');
                cheval();
            }
        });
        cheval();
    });
    function getmonth(date) {
        if (date.length == 10) {
            var ddd = isgetmonthyear(date);
            if (ddd == "Error") {
                $("#txtClaimMonthte").val('')
            }
            else {
                $("#txtClaimMonthte").val(ddd)
            }
        }
        else {
            $("#txtClaimMonthte").val('')
        }
    }
    function isgetmonthyear(evt) {
        var retnval;
        var str = evt;
        var array = str.split('-');

        if (array[1] == "01") {
            retnval = "January-" + array[2];
            return retnval;
        }
        if (array[1] == "02") {
            retnval = "February-" + array[2]; return retnval;
        }
        if (array[1] == "03") {
            retnval = "March-" + array[2]; return retnval;
        }
        if (array[1] == "04") {
            retnval = "April-" + array[2]; return retnval;
        }
        if (array[1] == "05") {
            retnval = "May-" + array[2]; return retnval;
        }
        if (array[1] == "06") {
            retnval = "June-" + array[2]; return retnval;
        }
        if (array[1] == "07") {
            retnval = "July-" + array[2]; return retnval;
        }
        if (array[1] == "08") {
            retnval = "August-" + array[2]; return retnval;
        }
        if (array[1] == "09") {
            retnval = "September-" + array[2]; return retnval;
        }
        if (array[1] == "10") {
            retnval = "October-" + array[2]; return retnval;
        }
        if (array[1] == "11") {
            retnval = "November-" + array[2]; return retnval;
        }
        if (array[1] == "12") {
            retnval = "December-" + array[2]; return retnval;
        }
        else {
            retnval = "Error"; return retnval;
        }
        return retnval;
    }

    function cheval() {

        var Rate = $("#txtRatete").val();
        var Distance = $("#txtDistancete").val();
        var ProductCode = $("#txtProductCodete").val();
        var OUCode = $("#txtOUCodete").val();

        var ddlNatureofExpenses1 = $("#ddlNatureofExpenseste").val();
        var ddlExpenseCategory1 = $("#ddlExpenseCategoryte").val();
        var ddlSubCategory1 = $("#ddlSubCategoryte").val();
        var PlaceFrom1 = $("#ddlPlaceFromte").val();
        var PlaceTo1 = $("#ddlPlaceTote").val();

        var TravelMode1 = $("#ddlTravelModete").val();
        var TravelClass1 = $("#ddlTravelClasste").val();

        var ddlNatureofExpenses = $("#ddlNatureofExpenseste option:selected").text();
        var ddlExpenseCategory = $("#ddlExpenseCategoryte option:selected").text();
        var ddlSubCategory = $("#ddlSubCategoryte option:selected").text();
        var PlaceFrom = $("#ddlPlaceFromte option:selected").text();
        var PlaceTo = $("#ddlPlaceTote option:selected").text();

        var TravelMode = $("#ddlTravelModete option:selected").text();
        var TravelClass = $("#ddlTravelClasste option:selected").text();

        var txtClaimPeriodFrom = $("#txtClaimPeriodFromte").val();
        var txtClaimPeriodTo = $("#txtClaimPeriodTote").val();
        var txtAmount = $("#txtAmountte").val();
        var istravel = $("#istravels").val();

        if (istravel == "T") {
            if (txtAmount != "0.00" && ddlNatureofExpenses1 != null && ddlExpenseCategory1 != null && ddlSubCategory1 != null &&
                ddlNatureofExpenses1 != "0" && ddlNatureofExpenses1 != "0" && ddlNatureofExpenses1 != "0" &&
                ddlNatureofExpenses != "--Select--" && ddlExpenseCategory != "--Select--" && ddlSubCategory != "--Select--" &&
                PlaceFrom1 != null && TravelClass1 != null &&
                PlaceFrom1 != "0" && TravelClass1 != "0" &&
                PlaceFrom != "--Select--" && PlaceTo != "--Select--" &&
                TravelMode1 != null && PlaceTo1 != null &&
                TravelMode1 != "0" && PlaceTo1 != "0" &&
                TravelMode != "--Select--" && TravelClass != "--Select--" &&
                //Rate != "" && Distance != "" &&
                ProductCode != "" && OUCode != "" &&
                txtClaimPeriodFrom != "" && txtClaimPeriodTo != "" && txtAmount != "") {
                $('#btnsavexp').attr('disabled', false);
            }
            else {
                $('#btnsavexp').attr('disabled', true);
            }
        }
        else if (istravel == "O") {
            if (txtAmount != "0.00" && ddlNatureofExpenses1 != null && ddlExpenseCategory1 != null && ddlSubCategory1 != null &&
               ddlNatureofExpenses1 != "0" && ddlNatureofExpenses1 != "0" && ddlNatureofExpenses1 != "0" &&
               ddlNatureofExpenses != "--Select--" && ddlExpenseCategory != "--Select--" && ddlSubCategory != "--Select--" &&
               PlaceFrom1 != null &&
               PlaceFrom1 != "0" &&
               PlaceFrom != "--Select--" && PlaceTo != "--Select--" &&
               PlaceTo1 != null &&
               PlaceTo1 != "0" &&
               ProductCode != "" && OUCode != "" &&
               txtClaimPeriodFrom != "" && txtClaimPeriodTo != "" && txtAmount != "") {
                $('#btnsavexp').attr('disabled', false);
            }
            else {
                $('#btnsavexp').attr('disabled', true);
            }
        }
        else {
            $('#btnsavexp').attr('disabled', true);
        }
    }

    //$(document).ready(function () {

    //    var istravelf = $("#istravels").val();
    //    if (istravelf = "T") {
    //        $("#nontravelmodeq").show();
    //        //$("#nontravelmodeq").fadeIn();
    //    }
    //    else if (istravelf = "O") {
    //        $("#nontravelmodeq").hide();
    //        //$("#nontravelmodeq").fadeOut();
    //    }
    //});
</script>

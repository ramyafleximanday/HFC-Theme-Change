@using IEM.Areas.EOW.Models;
@using IEM.Common;
@model IEnumerable<IEM.Areas.EOW.Models.EOW_RCMEntries>
@{
    EOW_DataModel objd = new EOW_DataModel();
    List<EOW_RCMEntries> lst = new List<EOW_RCMEntries>();
    lst = (List<EOW_RCMEntries>)TempData["SearchItems"];
    if (lst == null)
    {
        ViewBag.IsSearched = "no";
        lst = objd.GetRCMdetls(Convert.ToString(Session["invoiceGid"])).ToList();
    }
    if (lst.Count == 0)
    {
        ViewBag.NoRecordse = "no";
        ViewBag.NoRecords = "NoRecords";
        ViewBag.NoRecordsFound = "No Records Found";
    }
}
@{
    CmnFunctions objCmnFunctions = new CmnFunctions();
    var GridRCMDtl = new WebGrid(lst, canSort: true, canPage: false, rowsPerPage: 5, ajaxUpdateContainerId: "RCMDtl", ajaxUpdateCallback: "DummyFunction()");
    int rowValExpense = 0;
}
<style>
    .tableSmall thead td {
        font-size: 12px;
        white-space: nowrap;
    }

    .tableSmall tbody td {
        font-size: 12px;
        padding: 0px;
    }

    .ce {
        width: 15% !important;
        padding-left: 5px !important;
        min-width: 30px;
        word-wrap: break-word;
        white-space: nowrap;
    }

    .ae {
        width: 15% !important;
        padding-left: 5px !important;
        min-width: 350px;
        word-wrap: break-word;
        white-space: nowrap;
    }

    .de {
        width: 15% !important;
        padding-left: 5px !important;
        min-width: 75px;
        word-wrap: break-word;
        white-space: nowrap;
    }

    .ee {
        width: 15% !important;
        padding-left: 5px !important;
        min-width: 120px;
        word-wrap: break-word;
        white-space: nowrap;
    }
</style>
<div style="width:100%; overflow:auto;" id="RCMDtl">
    <div class="table-responsive" style="max-height: 350px;">
        @GridRCMDtl.GetHtml(
        htmlAttributes: new { id = "GrdRCMdetls" },
                 tableStyle: "tableSmall table-bordered",
        mode: WebGridPagerModes.All,
        columns:
        GridRCMDtl.Columns(
                           GridRCMDtl.Column("#", canSort: false, style: "ce", format: item => rowValExpense = rowValExpense + 1),
                                                               GridRCMDtl.Column("Expsubcat_Name", objCmnFunctions.Sorter("Expsubcat_Name", "Expsubcat Name", GridRCMDtl), canSort: false, style: "ae"),
                                                               GridRCMDtl.Column("HsnCode", objCmnFunctions.Sorter("HsnCode", "Hsn Code", GridRCMDtl), canSort: false, style: "de"),
                                                      GridRCMDtl.Column("DebitRCM_Type", objCmnFunctions.Sorter("DebitRCM_Type", "RCM Type", GridRCMDtl), canSort: false, style: "de"),
                                                                GridRCMDtl.Column("Taxable_Amount", objCmnFunctions.Sorter("Taxable_Amount", "Taxable Amount", GridRCMDtl), canSort: false, style: "de"),
                                                      GridRCMDtl.Column("debitrcm_rate", objCmnFunctions.Sorter("debitrcm_rate", "RCM Rate%", GridRCMDtl), canSort: false, style: "de"),
                                                               GridRCMDtl.Column("debitrcm_amount", objCmnFunctions.Sorter("debitrcm_amount", "RCM amount", GridRCMDtl), canSort: false, style: "de"),
                                                                       GridRCMDtl.Column("debitrcm_reversechargegl", objCmnFunctions.Sorter("debitrcm_reversechargegl", "Reversecharge GL", GridRCMDtl), canSort: false, style: "ee"),
                                                                                                   GridRCMDtl.Column("debitInputcreditRate", objCmnFunctions.Sorter("debitInputcreditRate", "InputCredit Rate%", GridRCMDtl), canSort: false, style: "ce"),
                                                                                                                     GridRCMDtl.Column("debitInputcreditAmt", objCmnFunctions.Sorter("debitInputcreditAmt", "InputCredit Amount", GridRCMDtl), canSort: false, style: "de"),
                                                                        GridRCMDtl.Column("debitrcm_inputcreditgl", objCmnFunctions.Sorter("debitrcm_inputcreditgl", "Inputcredit GL", GridRCMDtl), canSort: false, style: "ee")
                                     ))

    </div>

</div>
@model IEM.Areas.EOW.Models.EOW_DeclarationNote
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>
@{
    var viewfor = (string)ViewBag.viewfor;
    if (viewfor == "edit")
    {
        ViewBag.viewmode = "";
    }
    else if (viewfor == "view")
    {
        ViewBag.viewmode = "disabled";
    }
    else if (viewfor == "delete")
    {
        ViewBag.viewmode = "disabled";
        ViewBag.deletemode = "disabled";
    }
    if(Model.declnote_active=="Y")
    {
        ViewBag.yes = "checked";
    }
    else
    {
        ViewBag.no = "checked";
    }

}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)  

 
     <div class="row">
        <div class="col-sm-6">
    <table class="myTableStyleTabNew" align="left">
        <tr>
            <td colspan="2" style="display:none;">
                <input name="DocNameID" id="txtdecnotegid" type="text" placeholder="DocName ID" data-val="true" style="width:209;height:35px" value="@Model.declnote_gid" />

            </td>
        </tr>
        <tr>
            <td>

                <span>Declaration Note Name</span>
                <br />

                <input type="text"
                       id="txteditdecnote"
                       name="decnotename"
                       value="@Model.declnote_name"
                       class="textboxStyle valid"
                       style="width: 450px;"
                       @ViewBag.viewmode />

            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <span>Doc Type</span>
                    <br/>
                   
                    <select name="depat_gid" id="doctype_gid" class="textboxStyle valid" style="width: 203px; height:35px;" @ViewBag.viewmode>
                        <option value="0">Select</option>
                        @foreach (var pitem in Model.GetDoctype)
                        {
                            var childitemfilter = Model.GetDoctype.Where(m => m.Value == pitem.Value);
                            if (childitemfilter != null)
                            {
                                foreach (var citem in childitemfilter)
                                {
                                    string selectedValueddel = "";
                                    if (Model.selecteddoctype_gid.ToString() == citem.Value)
                                    {
                                        selectedValueddel = "selected='selected'";
                                    }
                                    <option value="@citem.Value" @selectedValueddel>@citem.Text</option>
                                }
                            }
                        }
                    </select>
                </div>
            </td>

            <td>
                <div>
                    <span style="margin: 0px 0px 0px -234px;">Doc SubType</span>
                    <br />
                   
                    <select name="depat_gid" id="ddldocsubtype" class="textboxStyle valid" style="display: block;width: 235px;height:35px;margin: 6px -14px -12px -243px;;" @ViewBag.viewmode>
                        <option value="0">Select</option>
                        @foreach (var pitem in Model.GetDocsubtype)
                        {
                            var childitemfilter = Model.GetDocsubtype.Where(m => m.Value == pitem.Value);
                            if (childitemfilter != null)
                            {
                                foreach (var citem in childitemfilter)
                                {
                                    string selectedValueddel = "";
                                    if (Model.selecteddocsubtype_gid.ToString() == citem.Value)
                                    {
                                        selectedValueddel = "selected='selected'";
                                    }
                                    <option value="@citem.Value" @selectedValueddel>@citem.Text</option>
                                }
                            }
                        }
                    </select>
                </div>
            </td>
        </tr>
        <tr>
            <td>

                <span>On Submission</span>
                <br />

                <input type="text"
                       id="txteditsubmission"
                       name="decnotename"
                       value="@Model.declnote_onsubmission"
                       class="textboxStyle valid"
                       style="width: 450px;"
                       @ViewBag.viewmode />

            </td>
        </tr>
        <tr>
            <td>

                <span>On Approval</span>
                <br />

                <input type="text"
                       id="txteditapproval"
                       name="decnotename"
                       value="@Model.declnote_approval"
                       class="textboxStyle valid"
                       style="width: 450px;"
                       @ViewBag.viewmode />

            </td>
        </tr>       
        <tr>
            <td>
                <div>
                    <span> On Conditional Approval</span>
                    <br />
                    <textarea name="DocNameName" id="txteditdecnotedescription" @ViewBag.viewmode data-val="true" maxlength="64" class="textboxStyle valid" style="  width:450px;height:60px; block;">@Model.declnote_desc</textarea>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <span> Period From </span>
                    <input name="DocNameName" id="txteditperiodfrom" type="text" @ViewBag.viewmode onchange="checkdecperiodfrom()" data-val="true" maxlength="10" value="@Model.declnote_periodfrom " class="textboxStyle valid" style="  width:154px;height:30px;display: block;" />
                </div>
            </td>


            <td>
                <div>
                    <span style="margin: 0px 0px 0px -285px;"> Period To </span>
                    <br />
                    <input name="DocNameName" id="txtedidperiodto" type="text" @ViewBag.viewmode onchange="checkdecperiodto()" data-val="true" maxlength="10" class="textboxStyle valid" value="@Model.declnote_periodto " style="  width:154px;height:30px;margin: 6px -14px -12px -291px; block;" />
                </div>
            </td>
        </tr>
        <tr>
            <td>
               
                <div id="txtTypeName">
                    <span> Active</span>
                    <br />
                    <input type="radio" id="Yes" value="Y" checked="@ViewBag.yes" name="Radiotypename" @ViewBag.viewmode>
                    Yes &nbsp;
                    <input type="radio" id="No" value="N" checked="@ViewBag.no" name="Radiotypename" @ViewBag.viewmode>
                    No
                </div>
            </td>
        </tr>
    </table>
            </div>
         </div>
    <table class="myTableStyleTabNew" align="center">
        <tr>
            <td style="padding-top:20px;">
                <div>
                    @if (@ViewBag.viewmode == "")
                    {
                        <button type="button" id="_save" value="Save" class="btn btn-primary" onclick="Update()"><span class="glyphicon glyphicon-floppy-disk" style="color:white;"></span> Save</button>
                    }
                    @if (@ViewBag.deletemode == "disabled")
                    {
                        <button type="button" value="Delete" class="btn btn-danger" onclick="DeleteType()"><span style="color:white;" class="glyphicon glyphicon-trash"></span> Delete</button>
                    }
                </div>
            </td>
            <td style="padding-top:20px;">
                <div>
                    @if (@ViewBag.viewmode == "" || @ViewBag.deletemode == "disabled")
                    {
                        <button type="button" value="Cancel" class="btn btn-warning" onclick="goToIndex()"><span style="color:white;" class="glyphicon glyphicon-remove-sign"></span> Cancel</button>
                    }
                    else if (@ViewBag.viewmode == "disabled")
                    {
                        <button type="button" value="Cancel" class="btn btn-warning" onclick="goToIndex()"><span style="color:white;" class="glyphicon glyphicon-remove-sign"></span> Close</button>
                    }
                </div>
            </td>
        </tr>
    </table>
}
<script type="text/javascript">

    $(".ui-icon-closethick").click(function () {
        $('#griddecnote').find('tr').css('background', 'none');
    });
    function goToIndex() {
      
        $('#griddecnote').find('tr').css('background', 'none');
        window.parent.jQuery('#ForPartialViewfordeclartionnote').dialog('close');
    }
    $("#doctype_gid").change(function () {
        var titlegid = $("#doctype_gid").val();
        CheckFieldsHeader();
        $.ajax({
            url: "../DeclarationNote/GetValue",
            type: "POST",
            dataType: "json",
            data: { "doctype_gid": titlegid },
            success: function (data) {
                $("#ddldocsubtype").empty();
                if (data.length > 0) {
                    $("#ddldocsubtype").append("<option value='0' >--Select--</option>");
                    for (var i = 0; i < data.length; i++) {
                        var stylesSelect = $('#ddldocsubtype');
                        stylesSelect.attr('disabled', false);
                        $("#ddldocsubtype").append("<option value=" + data[i].docsubtypegid + " >" + data[i].docsubtypename + "</option>");
                    }
                }
                if (data.length == 0) {

                    var stylesSelect = $('#ddldocsubtype');
                    stylesSelect.attr('disabled', true);
                }
            }
        });

    });
    $(document).ready(function () {
        $("#txteditperiodfrom").datepicker({
            changeMonth: true,
            changeYear: true,           
            dateFormat: 'dd-mm-yy',
            autoOpen: false,
            autoClose: true,
            onSelect: function (selected) {
                $("#txtedidperiodto").datepicker("option", "minDate", selected)
        }
        });
        $("#txtedidperiodto").datepicker({
            changeMonth: true,
            changeYear: true,       
            dateFormat: 'dd-mm-yy',
            autoOpen: false,
            autoClose: true

        });
    });
    $('#txteditperiodfrom').change(function () {
        CheckFieldsHeader();
       
    });
    $('#txtedidperiodto').change(function () {
        CheckFieldsHeader();
       
    });
    $("#txteditdecnote").keyup(function () {
        var txtSupplierName = $("#txteditdecnote").val();
        if (txtSupplierName.trim() != "") {
            $("#txteditdecnote").removeClass('required');
            $("#txteditdecnote").addClass('valid');
            CheckFieldsHeader();
        }
        else {
            $("#txteditdecnote").removeClass('valid');
            $("#txteditdecnote").addClass('required');
            CheckFieldsHeader();
        }
    });
    $("#txteditsubmission").keyup(function () {
        var txtSupplierName = $("#txteditsubmission").val();
        if (txtSupplierName.trim() != "") {
            $("#txteditsubmission").removeClass('required');
            $("#txteditsubmission").addClass('valid');
            CheckFieldsHeader();
        }
        else {
            $("#txteditsubmission").removeClass('valid');
            $("#txteditsubmission").addClass('required');
            CheckFieldsHeader();
        }
    });
    $("#txteditapproval").keyup(function () {
        var txtSupplierName = $("#txteditapproval").val();
        if (txtSupplierName.trim() != "") {
            $("#txteditapproval").removeClass('required');
            $("#txteditapproval").addClass('valid');
            CheckFieldsHeader();
        }
        else {
            $("#txteditapproval").removeClass('valid');
            $("#txteditapproval").addClass('required');
            CheckFieldsHeader();
        }
    });
    $("#txteditdecnotedescription").keyup(function () {
        var txtSupplierName = $("#txteditdecnotedescription").val();
        if (txtSupplierName.trim() != "") {
            $("#txteditdecnotedescription").removeClass('required');
            $("#txteditdecnotedescription").addClass('valid');
            CheckFieldsHeader();
        }
        else {
            $("#txteditdecnotedescription").removeClass('valid');
            $("#txteditdecnotedescription").addClass('required');
            CheckFieldsHeader();
        }
    });
    $("#txteditperiodfrom").change(function () {
        var txtSupplierName = $("#txteditperiodfrom").val();
        if (txtSupplierName.trim() != "") {
            $("#txteditperiodfrom").removeClass('required');
            $("#txteditperiodfrom").addClass('valid');
            CheckFieldsHeader();
        }
        else {
            $("#txteditperiodfrom").removeClass('valid');
            $("#txteditperiodfrom").addClass('required');
            CheckFieldsHeader();
        }
    });
    $("#txtedidperiodto").change(function () {
        var txtSupplierName = $("#txtedidperiodto").val();
        if (txtSupplierName.trim() != "") {
            $("#txtedidperiodto").removeClass('required');
            $("#txtedidperiodto").addClass('valid');
            CheckFieldsHeader();
        }
        else {
            $("#txtedidperiodto").removeClass('valid');
            $("#txtedidperiodto").addClass('required');
            CheckFieldsHeader();
        }
    });
    function Update() {
        var decnotegid = $('#txtdecnotegid').val();
        var doctypegid = $('#doctype_gid').val();
        var decnotename = $("#txteditdecnote").val();
        var dosctypegid = $("#ddldocsubtype").val();
        var submission = $("#txteditsubmission").val();
        var approval = $("#txteditapproval").val();
        var notedescription = $("#txteditdecnotedescription").val();
        var active = $('input[name=Radiotypename]:checked').val();
        var periodfrom = $("#txteditperiodfrom").val().trim();
        var periodto = $("#txtedidperiodto").val().trim();       
        var decnotedetails = {
            "declnote_name": decnotename, "docsubtype_gid": dosctypegid,
            "declnote_onsubmission": submission, "declnote_desc": notedescription, "declnote_active": active,
            "declnote_periodfrom": periodfrom, "declnote_periodto": periodto, "declnote_gid": decnotegid, "doctype_gid": doctypegid, "declnote_approval": approval
        };       
        $.post('../DeclarationNote/UpdateDecnotedetails', decnotedetails,
            function (data) {
                if (data != "success") {
                    jAlert("Duplicate Recorrd", "Information", function (r) {
                        if (r = true) { return false; }
                    });
                }
                else {
                    jAlert("Record Updated Successfully!!!", "Information", function (r) {
                        $("#txteditperiodfrom").datepicker("destroy");
                        $("#txtedidperiodto").datepicker("destroy");
                        if (r = true) { location = '../DeclarationNote/Index'; }
                    });
                }
            }
        , 'json');
    }

    function DeleteType() {
        var currencyrategid = $("#txtdecnotegid").val();
        jConfirm("Do you want to delete this Declaration Note ? ", "Delete Declaration Note", function (j) {
            if (j == true) {
                var model = { "declnote_gid": currencyrategid }
                $.post('../DeclarationNote/DeleteDeclartionnote', model,
                     function (data) {
                         if (data == "Sucess") {
                             jAlert("Record Deleted Successfully!!!", "Information", function (r) {
                                 if (r = true) {
                                     $("#txteditperiodfrom").datepicker("destroy");
                                     $("#txtedidperiodto").datepicker("destroy");
                                     location = '../DeclarationNote/Index';
                                 }
                             });
                         }

                     }, 'json');
            }
        });
    }
    function CheckFieldsHeader() {
        //var periodto = $('#txtinsperiodto').val();
        var periodfrom = $('#txteditperiodfrom').val();
        var periodto = $('#txtedidperiodto').val();
        var currratevalue = $('#txteditdecnote').val();
        var gid = $('#doctype_gid').val();
        var docsubtypegid = $('#ddldocsubtype').val();
        var submission = $('#txteditsubmission').val();
        var approval = $('#txteditapproval').val();
        var ErrCount = 0;

        if ($("#doctype_gid").val() == "--Select docType--" || $("#doctype_gid").val() == 0) {
            ErrCount = 1;
        }
        if ($("#ddldocsubtype").val() == "--select--" || $("#ddldocsubtype").val() == 0) {
            ErrCount = 2;
        }
        else if ($("#txteditperiodfrom").val() == "" || $("#txteditperiodfrom").val() == null) {
            ErrCount = 3;
        }
        else if ($("#txtedidperiodto").val() == "" || $("#txtedidperiodto").val() == null) {
            ErrCount = 4;

        }
        else if ($("#txteditdecnote").val() == "" || $("#txteditdecnote").val() == null) {
            ErrCount = 5;
        }
        else if ($("#txteditsubmission").val() == "" || $("#txteditsubmission").val() == null) {
            ErrCount = 6;
        }
        else if ($("#txteditapproval").val() == "" || $("#txteditapproval").val() == null) {
            ErrCount = 7;
        }
        if (ErrCount == 0) {
            $("#_save").removeAttr('disabled');
        }
        else {
            $("#_save").attr('disabled', 'disabled');
        }
    }
</script>




@model IEM.Areas.EOW.Models.EOW_EmployeeeExpense

@{
    var viewfor = (string)ViewBag.viewfor;
    if (viewfor == "edit")
    {
        <div id="EditExpenseqwer">

            @using (Html.BeginForm())
            {
                <div style="padding:0;margin:0;">
                    <input type="hidden" id="ecfamomtssessionedit" value="@Session["Ecfamountvalforedit"]" />
                    <input type="hidden" id="hdraiserfcc" value="@Session["raiserfcc"]" />
                    <input type="hidden" id="hdraiserccc" value="@Session["raiserccc"]" />
                    <table class="myTableStyleTabNew" style="width: 100%;">
                        <tr>
                            <td style="width: 33%;">
                                <span>Nature of Expenses</span><br />
                                <select name="ddlNatureofExpenses" id="ddlNatureofExpenses" class="textboxStyle required">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.ExpNatureofExpdata)
                                    {
                                        var childitemfilter = Model.ExpNatureofExpdata.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.NatureofExpensesId == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td style="width: 33%;">
                                <span>Expense Category</span><br />
                                <select name="ddlExpenseCategory" id="ddlExpenseCategory" class="textboxStyle required">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.ExpCatdata)
                                    {
                                        var childitemfilter = Model.ExpCatdata.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.ExpenseCategoryId == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td style="width: 35%;">
                                <span>Sub Category</span><br />
                                <select name="ddlSubCategory" id="ddlSubCategory" class="wht textboxStyle required">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.ExpSubCatdata)
                                    {
                                        var childitemfilter = Model.ExpSubCatdata.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.SubCategoryId == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td style="width:10%">
                                <span>&nbsp;</span><br />
                                <input type="button" value="?" style="margin-top: 5px;" id="Getpolicypopupe" onclick="Newpolicypopupe()" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span>Claim Period From</span><br />
                                @Html.TextBoxFor(model => model.Exp_ClaimPeriodFrom, new { disable = true, @class = "textboxStyle required", @id = "txtClaimPeriodFrom", @maxlength = "10", @placeholder = "dd-mm-yyyy" })
                            </td>

                            <td>
                                <span>Claim Period To</span><br />
                                @Html.TextBoxFor(model => model.Exp_ClaimPeriodTo, new { disable = true, @class = "textboxStyle required", @id = "txtClaimPeriodTo", @maxlength = "10", @placeholder = "dd-mm-yyyy" })
                            </td>
                            <td colspan="2">
                                <span>Service Month</span><br />
                                @Html.TextBoxFor(model => model.Exp_ClaimMonth, new { disable = true, @class = "textboxStyle", @id = "txtClaimMonth", @maxlength = "10", @placeholder = "dd-mm-yyyy" })
                            </td>
                        </tr>
                        <tr id="lopcalhide1">
                            <td>
                                <span>Place From</span><br />
                                @Html.TextBoxFor(model => model.PlaceFrom, new { disable = true, @class = "textboxStyle", @id = "ddlPlaceFromt", @maxlength = "100" })
                                @*<select name="ddlPlaceFromt" id="ddlPlaceFromt" class="textboxStyle required">
                                        <option value="0">Select</option>
                                        @foreach (var pitem in Model.Citydata)
                                        {
                                            var childitemfilter = Model.Citydata.Where(m => m.Value == pitem.Value);
                                            if (childitemfilter != null)
                                            {
                                                foreach (var citem in childitemfilter)
                                                {
                                                    string selectedValue = "";
                                                    if (Model.PlaceFrom == Convert.ToString(citem.Value))
                                                    {
                                                        selectedValue = "selected='selected'";
                                                    }

                                                    <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                                }
                                            }
                                        }
                                    </select>*@
                            </td>
                            <td>
                                <span>Place To</span><br />
                                @Html.TextBoxFor(model => model.PlaceTo, new { disable = true, @class = "textboxStyle", @id = "ddlPlaceTot", @maxlength = "100" })
                                @*<select name="ddlPlaceTot" id="ddlPlaceTot" class="textboxStyle required">
                                        <option value="0">Select</option>
                                        @foreach (var pitem in Model.Citydatato)
                                        {
                                            var childitemfilter = Model.Citydatato.Where(m => m.Value == pitem.Value);
                                            if (childitemfilter != null)
                                            {
                                                foreach (var citem in childitemfilter)
                                                {
                                                    string selectedValue = "";
                                                    if (Model.PlaceTo == Convert.ToString(citem.Value))
                                                    {
                                                        selectedValue = "selected='selected'";
                                                    }

                                                    <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                                }
                                            }
                                        }
                                    </select>*@
                            </td>
                            <td colspan="2">
                                <span>Travel Mode</span><br />
                                <select name="ddlTravelModet" id="ddlTravelModet" class="textboxStyle required">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.TravelModedata)
                                    {
                                        var childitemfilter = Model.TravelModedata.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.TravelModeId == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                        <tr id="lopcalhide2">
                            <td>
                                <span>Travel Class</span><br />
                                <select name="ddlTravelClasst" id="ddlTravelClasst" class="textboxStyle required">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.TravelClassdata)
                                    {
                                        var childitemfilter = Model.TravelClassdata.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.TravelClassId == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td>
                                <span>Rate</span><br />
                                @Html.TextBoxFor(model => model.Rate, new { disable = true, @class = "textboxStyle", @id = "txtRatet", @maxlength = "8", @onkeypress = "return isAmount(event);", @disabled = "disabled" })
                            </td>
                            <td colspan="2">
                                <span>Distance</span><br />
                                @Html.TextBoxFor(model => model.Distance, new { disable = true, @class = "textboxStyle", @id = "txtDistancet", @maxlength = "8", @onkeypress = "return isNumber(event);", @disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span>Business Segment(BU)</span><br />
                                @Html.DropDownListFor(model => model.Exp_FC, Model.Exp_FCC, new { @class = "textboxStyle ", @id = "txtFC", @disabled = "disabled" })
                            </td>
                            <td>
                                <span>Cost Center(CC)</span><br />
                                @Html.DropDownListFor(model => model.Exp_CC, Model.Exp_CCC, new { @class = "textboxStyle ", @id = "txtCC" })
                            </td>
                            <td colspan="2">
                                <span>Product Code</span><br />
                                @Html.TextBoxFor(model => model.Exp_ProductCode, new { disable = true, @class = "textboxStyle with", @id = "txtProductCode", @maxlength = "8" })
                                @Html.TextBoxFor(model => model.Exp_FCCC, new { disable = true, @class = "textboxStyle disp", @id = "txtFCCC", @maxlength = "58", @disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <span>Location Code(OUCode)</span><br />
                                @Html.TextBoxFor(model => model.Exp_OUCode, new { disable = true, @class = "textboxStyle withs", @id = "txtOUCode", @maxlength = "8" })

                            </td>
                            <td colspan="2">
                                <span>Amount</span><br />
                                @Html.TextBoxFor(model => model.Exp_Amount, new { disable = true, @class = "textboxStyle required", @id = "txtAmount", @onkeypress = "return isAmount(event);", @maxlength = "15" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" style="width: 14%;">
                                <span>HSN Code</span><br />
                                @* @Html.DropDownListFor(model => model.Hsnid, Model.HsncodeList, "--Select--", new { @class = "wht textboxStyle required", @id = "txtHsnId" })
                                    <select name="txtHsnId" id="txtHsnId" class="textboxStyle required" disabled="disabled">
                                        <option value="0">--Select--</option>
                                        @foreach (var pitem in Model.HsncodeList)
                                        {
                                            var childitemfilter = Model.HsncodeList.Where(m => m.Value == pitem.Value);
                                            if (childitemfilter != null)
                                            {
                                                foreach (var citem in childitemfilter)
                                                {
                                                    string selectedValue = "";
                                                    if (Model.Hsnid == Convert.ToInt32(citem.Value))
                                                    {
                                                        selectedValue = "selected='selected'";
                                                    }

                                                    <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                                }
                                            }
                                        }
                                    </select*@
                                <select name="txtHsnId" id="txtHsnId" class="wht textboxStyle required">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.HsncodeList)
                                    {
                                        var childitemfilter = Model.HsncodeList.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.Hsnid == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td colspan="4">
                                <span> Hsn Description</span><br />
                                @Html.TextAreaFor(model => model.HsnDescription, new { disable = true, @class = "textboxStyle", @id = "txthsndesc", @maxlength = "250", @disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <span>Description</span><br />
                                @Html.TextAreaFor(model => model.travelDescription, new { disable = true, @class = "textboxStyle txtarea", @id = "txttravelDescription", @maxlength = "250" })
                                @if (viewfor == "edit")
                                {
                                    <div>
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                hideProgress();
                                            });
                                        </script>
                                    </div>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td colspan="6">
                                <span>RCM Flag</span><br />
                                @if (Model.RCMFlag == "Y")
                                {
                                    @Html.RadioButtonFor(model => model.RCMFlag, "Y", new { @id = "rdorcmChargedYes", @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => model.RCMFlag, "N", new { @id = "rdorcmChargedNo", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                                else
                                {
                                    @Html.RadioButtonFor(model => model.RCMFlag, "Y", new { @id = "rdorcmChargedYes", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => model.RCMFlag, "N", new { @id = "rdorcmChargedNo", @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td style="padding-top: 10px;" colspan="4" align="center">
                                <center>
                                    <button type="button" title="Save" disabled="disabled" name="Save" id="btnsavexpedit" class="btn btn-primary" onclick="SaveExpenseedit()"><span style="color:white;" class="glyphicon glyphicon-floppy-disk"></span> Save</button>
                                    <button type="button" id="btncanexpcanc" title="Cancel" name="Cancel" class="btn btn-warning" onclick="GotoIndexExpense()"><span style="color:white;" class="glyphicon glyphicon-remove-sign"></span>Cancel</button>
                                </center>
                            </td>
                        </tr>
                    </table>
                </div>
            }
        </div>
    }
    else if (viewfor == "view")
    {
        <div id="EditExpense">

            @using (Html.BeginForm())
            {
                <div style="padding:0;margin:0;">
                    <input type="hidden" id="ecfamomtssessionedit" value="@Session["Ecfamountvalforedit"]" />
                    <table class="myTableStyleTabNew" style="width: 100%;">
                        <tr>
                            <td style="width: 33%;">
                                <span>Nature of Expenses</span><br />
                                <select name="ddlNatureofExpenses" disabled="disabled" id="ddlNatureofExpenses" class="textboxStyle required">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.ExpNatureofExpdata)
                                    {
                                        var childitemfilter = Model.ExpNatureofExpdata.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.NatureofExpensesId == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td style="width: 33%;">
                                <span>Expense Category</span><br />
                                <select name="ddlExpenseCategory" id="ddlExpenseCategory" disabled="disabled" class="textboxStyle required">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.ExpCatdata)
                                    {
                                        var childitemfilter = Model.ExpCatdata.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.ExpenseCategoryId == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td style="width: 35%;">
                                <span>Sub Category</span><br />
                                <select name="ddlSubCategory" id="ddlSubCategory" disabled="disabled" class="wht textboxStyle required">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.ExpSubCatdata)
                                    {
                                        var childitemfilter = Model.ExpSubCatdata.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.SubCategoryId == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td style="width:10%">
                                <span>&nbsp;</span><br />
                                <input type="button" value="?" style="margin-top: 5px;" disabled="disabled" id="Getpolicypopup2" onclick="Newpolicypopup()" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span>Claim Period From</span><br />
                                @Html.TextBoxFor(model => model.Exp_ClaimPeriodFrom, new { disable = true, @class = "textboxStyle", @id = "txtClaimPeriodFrom", @disabled = @ViewBag.viewmode })
                            </td>

                            <td>
                                <span>Claim Period To</span><br />
                                @Html.TextBoxFor(model => model.Exp_ClaimPeriodTo, new { disable = true, @class = "textboxStyle", @id = "txtClaimPeriodTo", @disabled = @ViewBag.viewmode })
                            </td>
                            <td colspan="2">
                                <span>Service Month</span><br />
                                @Html.TextBoxFor(model => model.Exp_ClaimMonth, new { disable = true, @class = "textboxStyle", @id = "txtClaimMonth", @disabled = @ViewBag.viewmode })
                            </td>
                        </tr>
                        <tr id="lopcalhide1">
                            <td>
                                <span>Place From</span><br />
                                <select name="ddlPlaceFromt" id="ddlPlaceFromt" class="textboxStyle required" disabled="disabled">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.Citydata)
                                    {
                                        var childitemfilter = Model.Citydata.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.PlaceFrom == Convert.ToString(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @*<select name="ddlPlaceFromt" id="ddlPlaceFromt" class="textboxStyle required" disabled="disabled">
                                        <option value="0">Select</option>
                                        @foreach (var pitem in Model.Citydata)
                                        {
                                            var childitemfilter = Model.Citydata.Where(m => m.Value == pitem.Value);
                                            if (childitemfilter != null)
                                            {
                                                foreach (var citem in childitemfilter)
                                                {
                                                    string selectedValue = "";
                                                    if (Model.PlaceFrom == Convert.ToString(citem.Value))
                                                    {
                                                        selectedValue = "selected='selected'";
                                                    }

                                                    <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                                }
                                            }
                                        }
                                    </select>*@
                            </td>
                            <td>
                                <span>Place To</span><br />
                                @Html.TextBoxFor(model => model.PlaceTo, new { disable = true, @class = "textboxStyle", @id = "ddlPlaceTot", @maxlength = "100", @disabled = @ViewBag.viewmode })
                                @*<select name="ddlPlaceTot" id="ddlPlaceTot" class="textboxStyle required" disabled="disabled">
                                        <option value="0">Select</option>
                                        @foreach (var pitem in Model.Citydatato)
                                        {
                                            var childitemfilter = Model.Citydatato.Where(m => m.Value == pitem.Value);
                                            if (childitemfilter != null)
                                            {
                                                foreach (var citem in childitemfilter)
                                                {
                                                    string selectedValue = "";
                                                    if (Model.PlaceTo == Convert.ToString(citem.Value))
                                                    {
                                                        selectedValue = "selected='selected'";
                                                    }

                                                    <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                                }
                                            }
                                        }
                                    </select>*@
                            </td>
                            <td colspan="2">
                                <span>Travel Mode</span><br />
                                <select name="ddlTravelModet" id="ddlTravelModet" class="textboxStyle required" disabled="disabled">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.TravelModedata)
                                    {
                                        var childitemfilter = Model.TravelModedata.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.TravelModeId == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                        <tr id="lopcalhide2">
                            <td>
                                <span>Travel Class</span><br />
                                <select name="ddlTravelClasst" id="ddlTravelClasst" class="textboxStyle required" disabled="disabled">
                                    <option value="0">Select</option>
                                    @foreach (var pitem in Model.TravelClassdata)
                                    {
                                        var childitemfilter = Model.TravelClassdata.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.TravelClassId == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td>
                                <span>Rate</span><br />
                                @Html.TextBoxFor(model => model.Rate, new { disable = true, @class = "textboxStyle", @id = "txtRatett", @maxlength = "8", @onkeypress = "return isAmount(event);", @disabled = @ViewBag.viewmode })
                            </td>
                            <td colspan="2">
                                <span>Distance</span><br />
                                @Html.TextBoxFor(model => model.Distance, new { disable = true, @class = "textboxStyle", @id = "txtDistancett", @maxlength = "8", @onkeypress = "return isNumber(event);", @disabled = @ViewBag.viewmode })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span>Business Segment(BU)</span><br />
                                @Html.DropDownListFor(model => model.Exp_FC, Model.Exp_FCC, new { @class = "textboxStyle ", @id = "txtFC", @disabled = @ViewBag.viewmode })
                            </td>
                            <td>
                                <span>Cost Center(CC)</span><br />
                                @Html.DropDownListFor(model => model.Exp_CC, Model.Exp_CCC, new { @class = "textboxStyle ", @id = "txtCC", @disabled = @ViewBag.viewmode })
                            </td>
                            <td colspan="2">
                                <span>Product Code</span><br />
                                @Html.TextBoxFor(model => model.Exp_ProductCode, new { disable = true, @class = "textboxStyle with", @id = "txtProductCode", @disabled = @ViewBag.viewmode })
                                @Html.TextBoxFor(model => model.Exp_FCCC, new { disable = true, @class = "textboxStyle disp", @id = "txtFCCC", @maxlength = "58", @disabled = @ViewBag.viewmode })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <span>Location Code(OUCode)</span><br />
                                @Html.TextBoxFor(model => model.Exp_OUCode, new { disable = true, @class = "textboxStyle withs", @id = "txtOUCode", @disabled = @ViewBag.viewmode })

                            </td>
                            <td colspan="2">
                                <span>Amount</span><br />
                                @Html.TextBoxFor(model => model.Exp_Amount, new { disable = true, @class = "textboxStyle", @id = "txtAmount", @disabled = @ViewBag.viewmode })

                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" style="width: 14%;">
                                <span>HSN Code</span><br />
                                @*@Html.DropDownListFor(model => model.Hsnid, Model.HsncodeList, "--Select--", new { @class = "wht textboxStyle required", @id = "txtHsnId" })*@
                                <select name="txtHsnId" id="txtHsnId" class="textboxStyle required" disabled="disabled">
                                    <option value="0">--Select--</option>
                                    @foreach (var pitem in Model.HsncodeList)
                                    {
                                        var childitemfilter = Model.HsncodeList.Where(m => m.Value == pitem.Value);
                                        if (childitemfilter != null)
                                        {
                                            foreach (var citem in childitemfilter)
                                            {
                                                string selectedValue = "";
                                                if (Model.Hsnid == Convert.ToInt32(citem.Value))
                                                {
                                                    selectedValue = "selected='selected'";
                                                }

                                                <option value="@citem.Value" @selectedValue>@citem.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td colspan="4">
                                <span> Hsn Description</span><br />
                                @Html.TextAreaFor(model => model.HsnDescription, new { disable = true, @class = "textboxStyle", @id = "txthsndesc", @maxlength = "250", @disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <span>Description</span><br />
                                @Html.TextAreaFor(model => model.travelDescription, new { disable = true, @class = "textboxStyle txtarea", @id = "txttravelDescription", @maxlength = "250", @disabled = @ViewBag.viewmode })
                                @if (viewfor == "view")
                                {
                                    <div>
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                hideProgress();
                                            });
                                        </script>
                                    </div>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <span>RCM Flag</span><br />
                                @if (Model.RCMFlag == "Y")
                                {
                                    @Html.RadioButtonFor(model => model.RCMFlag, "Y", new { @id = "ViewrdorcmChargedYes", @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => model.RCMFlag, "N", new { @id = "ViewrdorcmChargedNo", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                                else
                                {
                                    @Html.RadioButtonFor(model => model.RCMFlag, "Y", new { @id = "ViewrdorcmChargedYes", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>Yes</span>
                                    @Html.RadioButtonFor(model => model.RCMFlag, "N", new { @id = "ViewrdorcmChargedNo", @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td style="padding-top: 10px;" colspan="4" align="center">
                                <center>
                                    <button type="button" id="btncanexp" title="Cancel" name="Cancel" class="btn btn-warning" onclick="GotoIndexExpense()"><span style="color:white;" class="glyphicon glyphicon-remove-sign"></span>Cancel</button>
                                </center>
                            </td>
                        </tr>
                    </table>
                </div>
            }
        </div>
    }

}

<style>
    .wht {
        width: 100%;
    }

    .with {
        width: 90%;
    }

    .txtarea {
        width: 96%;
        height: 50px;
        resize: none;
    }

    .withs {
        width: 95%;
    }

    .disp {
        display: none;
    }
</style>
<script>
    $(document).ready(function () {
        $("#ddlPlaceFromt").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompletecitycode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.citysName, value: item.citysName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#ddlPlaceTot").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompletecitycode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.citysName, value: item.citysName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#txtAmount").keyup(function (event) {
            if (event.which >= 37 && event.which <= 40) {
                event.preventDefault();
            }

            var currentval = $("#txtAmount").val();
            var testDecimal = testDecimals(currentval);
            if (testDecimal.length > 1) {
                currentval = currentval.slice(0, -1);
            }
            $("#txtAmount").val(replaceCommas(currentval));

        });

        var brandID = $("#ddlTravelModet").val();
        $("#txtDistancet").removeClass('required');
        $("#txtRatet").removeClass('required');
        $("#txtDistancet").removeClass('valid');
        $("#txtRatet").removeClass('valid');
        $('#txtAmountt').attr('disabled', false);

        var Studentnew =
          {
              "TravelModeId": brandID
          };
        $.ajax({
            url: '../TravelClaimNew/GetTravelClassdataflag/',
            data: JSON.stringify(Studentnew),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "Y") {
                    $('#txtDistancet').attr('disabled', false);
                    $('#txtRatet').attr('disabled', false);
                    $('#txtAmountt').attr('disabled', true);
                    cheval();
                }
                else {
                    $('#txtDistancet').attr('disabled', true);
                    $('#txtRatet').attr('disabled', true);
                    $('#txtAmountt').attr('disabled', false);
                    cheval();
                }
            },
            error: function (result) {
                jAlert("Error.", "Error");
                return false;
            }
        });

        var ddlNaturelocal = $("#ddlNatureofExpenses option:selected").text();
        if (ddlNaturelocal == "Local Conveyance") {
            $("#lopcalhide1").show();
            $("#lopcalhide2").show();
        }
        else {
            $("#lopcalhide1").hide();
            $("#lopcalhide2").hide();
        }

        $('#txtFC').change(function () {
            var txtFC = $(this).val();
            var hdraiserfcc = $("#hdraiserfcc").val();
            if (txtFC != hdraiserfcc) {
                jAlert("Additional Approval to be attached", "Message");
                return false;
            }
        });
    });
    $(document).ready(function () {
        $('#txtCC').change(function () {
            var txtCC = $(this).val();
            var hdraiserccc = $("#hdraiserccc").val();
            if (txtCC != hdraiserccc) {
                jAlert("Additional Approval to be attached", "Message");
                return false;
            }
        });
    });
    $(document).ready(function () {
        $("#txtOUCode").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompleteoucode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.raiserccName, value: item.raiserccName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#txtProductCode").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompleteproductcode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.raiserccName, value: item.raiserccName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#txtClaimPeriodFrom").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd-mm-yy',
            maxDate: '-id',
            numberOfMonths: 1,
            onSelect: function (selected) {
                $("#txtClaimPeriodFrom").addClass('valid');
                $("#txtClaimPeriodTo").datepicker("option", "minDate", selected)
            }
        });
        $("#txtClaimPeriodTo").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd-mm-yy',
            maxDate: '-id',
            numberOfMonths: 1,
            onSelect: function (selected) {
                $("#txtClaimPeriodTo").addClass('valid');
                $("#txtClaimPeriodFrom").datepicker("option", "maxDate", selected);
                var txtContractFrom = $("#txtClaimPeriodTo").val();
                getmonth(txtContractFrom);
            }
        });
        var txtfromdate = $("#txtClaimPeriodFrom").val();
        var txttodate = $("#txtClaimPeriodTo").val();
        $("#txtClaimPeriodTo").datepicker("option", "minDate", txtfromdate);
        $("#txtClaimPeriodFrom").datepicker("option", "maxDate", txttodate);
    });
    //Ramya Added
    function LoadRCMonHSNChange(txtHsnID) {
        //hsn+provider location state
        var DebitlineGId = 0;
        var ECFId = 0;
        var invid = 0;
        var ProviderLocation = 0;
        var GstinVendor = 0;
        var hsngid = txtHsnID;
        //if ((parseInt(ProviderLocation) == 0 || $.trim(ProviderLocation) == "")) {
        //    jAlert("Ensure Provider Location!", "Message");
        //    return false;
        //}

        //if ($("input[name=rdogstChargedFlag]:radio[checked=checked]").attr("value") == "Y") {
        //    if (hsngid == "0") {
        //        jAlert("Ensure hsn details", "Error");
        //        return false;
        //    }
        //}
        var rcmflagparam = {
            DebitlineGId: DebitlineGId,
            ECFId: ECFId,
            invid: invid,
            hsngid: hsngid,
            ProviderLocation: ProviderLocation,
            action: 'single'

        };
        $.ajax({
            type: "post",

            url: "../TravelClaimNew/CheckrcmExists",
            data: JSON.stringify(rcmflagparam),
            contentType: "application/json;",
            success: function (response) {
                var Data1 = "";
                if (response.Data1 != null && response.Data1 != "" && JSON.parse(response.Data1) != null) {
                    Data1 = JSON.parse(response.Data1);
                    if (Data1[0].STATUS == 'EXISTS')
                        $("#rdorcmChargedYes").prop("checked", true);
                    else {
                        $("#rdorcmChargedNo").prop("checked", true);
                    }
                }


            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert(errorThrown);
            }
        });

    };
    function Newpolicypopupe() {
        var SubCategory = $("#ddlSubCategory").val();
        var url = '@Url.Action("_Emppolicypopup", "EmployeeClaimNewPetty")?id=' + SubCategory + '&' + new Date().getTime();
        objDialogpolicypopup.load(url);
        objDialogpolicypopup.dialog({
            autoOpen: false,
            cache: false,
            modal: true,
            show: 'fade-in',
            close: 'fade-out',
            title: 'Policy Help',
            width: 860,
            height: 400
        });
        objDialogpolicypopup.dialog("open");
    }


    $(document).ready(function () {
        var stylesSelect = $('#txtClaimMonth');
        stylesSelect.attr('disabled', true);
    });

    function GotoIndexExpense() {
        objDialogExpense.dialog("close");
        objDialogExpense.dialog("close");
        window.parent.jQuery('#ForPartialViewExpensenew').dialog('close');
    }

    function SaveExpenseedit() {
        var ecfamomtssession = $("#ecfamomtssessionedit").val();
        if (ecfamomtssession == null || ecfamomtssession == "0") {
            jAlert("Please Enter ECF Amount", "Message");
            return false;
        }
        var ecfclaimmond = $("#txtclaimmonthtr").val();
        var NatureofExpenses = $("#ddlNatureofExpenses").val();
        var ExpenseCategory = $("#ddlExpenseCategory").val();
        var SubCategory = $("#ddlSubCategory").val();
        var ClaimPeriodFrom = $("#txtClaimPeriodFrom").val();
        var ClaimPeriodTo = $("#txtClaimPeriodTo").val();
        var ClaimMonth = $("#txtClaimMonth").val();
        var FC = $("#txtFC").val();
        var CC = $("#txtCC").val();
        var ProductCode = $("#txtProductCode").val();
        var OUCode = $("#txtOUCode").val();
        //var Amount = $("#txtAmount").val();
        var Amount = $("#txtAmount").val().replace(/,/g, "");
        var travelDescription = $("#txttravelDescription").val();
        var PlaceFrom1 = $("#ddlPlaceFromt").val();
        //var PlaceFrom = $("#ddlPlaceFromt option:selected").text();
        var PlaceTo1 = $("#ddlPlaceTot").val();
        //var PlaceTo = $("#ddlPlaceTot option:selected").text();
        var TravelMode = $("#ddlTravelModet").val();
        var TravelClass = $("#ddlTravelClasst").val();
        var Rate = $("#txtRatet").val();
        var Distance = $("#txtDistancet").val();
        var HsnId = $("#txtHsnId").val();
        var hsndesc = $("#txthsndesc").val();
        var RCMFlag = "";
        if ($("input[id=rdorcmChargedYes]:radio[checked=checked]").attr("value")) {
            RCMFlag = "Y";
        }
        else {
            RCMFlag = "N";
        }
        if (NatureofExpenses == null || NatureofExpenses == "" || NatureofExpenses == "0") {
            jAlert("Please select the Nature of Expenses.", "Message");
            $("#ddlNatureofExpenses").focus();
            return false;
        }
        if (ExpenseCategory == null || ExpenseCategory == "0") {
            jAlert("Please select the Expense Category.", "Message");
            $("#ddlExpenseCategory").focus();
            return false;
        }
        if (SubCategory == null || SubCategory == "0") {
            jAlert("Please select the Sub Category.", "Message");
            $("#ddlSubCategory").focus();
            return false;
        }
        //if ($("input[name=rdogstChargedFlag]:radio[checked=checked]").attr("value") == "Y") {
        if (HsnId == null || HsnId == "" || HsnId == "0") {
            jAlert("Please select hsn code.", "Message");
            $("#ddlNatureofExpenses").focus();
            return false;
        }
        //}
        //else {
        //    HsnId = "";
        //}
        if (ClaimPeriodFrom == null || ClaimPeriodFrom == "") {
            jAlert("Enter 'CLAIM PERIOD FROM' date", "Message");
            $("#txtClaimPeriodFrom").focus();
            return false;
        }
        if (ClaimPeriodTo == null || ClaimPeriodTo == "") {
            jAlert("Enter 'CLAIM PERIOD TO' date", "Message");
            $("#txtClaimPeriodTo").focus();
            return false;
        }
        if (ClaimMonth == null || ClaimMonth == "") {
            jAlert("Please enter the 'SERVICE MONTH' ", "Message");
            $("#txtClaimMonth").focus();
            return false;
        }
        if (ecfclaimmond != ClaimMonth) {

            jAlert("Month mismatch between 'SERVICE MONTH' & 'CLAIM PERIOD TO' fields", "Message");
            return false;
        }
        var ddlNaturelocal = $("#ddlNatureofExpenses option:selected").text();
        if (ddlNaturelocal == "Local Conveyance") {
            if (PlaceFrom1 == null || PlaceFrom1 == "") {
                jAlert("Please Enter Place From.", "Message");
                return false;
            }
            if (PlaceTo1 == null || PlaceTo1 == "") {
                jAlert("Please Enter Place To.", "Message");
                return false;
            }
            if (TravelMode == null || TravelMode == "0") {
                jAlert("Please select the Travel Mode", "Message");
                return false;
            }
            if (TravelClass == null || TravelClass == "0") {
                jAlert("Please Select the Travel Class", "Message");
                return false;
            }
        }
        if (FC == null || FC == "") {
            jAlert("Please Enter FC.", "Message");
            $("#txtFC").focus();
            return false;
        }
        if (CC == null || CC == "") {
            jAlert("Please Enter the Cost Center(CC)", "Message");
            $("#txtCC").focus();
            return false;
        }
        if (ProductCode == null || ProductCode == "") {
            jAlert("Please Enter the Product Code.", "Message");
            $("#txtProductCode").focus();
            return false;
        }
        if (OUCode == null || OUCode == "") {
            jAlert("Please Enter Location (OU Code)", "Message");
            $("#txtOUCode").focus();
            return false;
        }
        if (Amount == null || Amount == "") {
            jAlert("Please enter the Amount", "Message");
            $("#txtAmount").focus();
            return false;
        }
        if (Amount == "NAN" || Amount == "0.00" || Amount == "0") {
            jAlert("Please Enter Rate or Distance.", "Message");
            return false;
        }
        var val1 = parseFloat(ecfamomtssession);
        var val2 = parseFloat(Amount);
        if (parseFloat(val1) < parseFloat(val2)) {
            jAlert("The debit lines Amount must be equal to ECF Amount", "Message");
            return false;
        }
        else {

            var NewExpensemodel = {
                "NatureofExpensesName": NatureofExpenses,
                "ExpenseCategoryName": ExpenseCategory,
                "SubCategoryName": SubCategory,
                "Exp_ClaimPeriodFrom": ClaimPeriodFrom,
                "Exp_ClaimPeriodTo": ClaimPeriodTo,
                "Exp_ClaimMonth": ClaimMonth,

                "travelDescription": travelDescription,
                "NatureofExpenseslocal": ddlNaturelocal,
                "PlaceFrom": PlaceFrom1,
                "PlaceTo": PlaceTo1,
                "TravelModeName": TravelMode,
                "TravelClassName": TravelClass,
                "Rate": Rate,
                "Distance": Distance,

                "Exp_FC": FC,
                "Exp_CC": CC,
                "Exp_ProductCode": ProductCode,
                "Exp_OUCode": OUCode,
                "Exp_Amount": Amount,
                "Hsnid": HsnId,
                "HsnDescription": hsndesc,
                "RCMFlag": RCMFlag
            };
            $.post('../EmployeeClaimNewPetty/_EmpExpenseEdit', NewExpensemodel,
            function (data) {
                if (data == "Success") {
                    jAlert("Updated Successfully.", "Message");
                    var url = '@Url.Action("_EmpExpenseDetails", "EmployeeClaimNewPetty")?' + new Date().getTime();
                    $("#wgExpense").load(url);
                    var url2 = '@Url.Action("_LoadGstDetails", "EmployeeClaimNewPetty")?' + new Date().getTime();
                    $("#Grdgstdetls").load(url2);
                    var url3 = '@Url.Action("_LoadRCMDetails", "EmployeeClaimNewPetty")?' + new Date().getTime();
                    $("#GrdRCMdetls").load(url3);


                    //selva 19-02-2021 Old travel Claim Expense Edit RCM TO GST Reflect in split amount Payment tab
                    var url1 = '@Url.Action("_EmpPaymentDetails", "EmployeeClaimNewPetty")?' + new Date().getTime();
                    $("#wgriPayment").load(url1);


                    objDialogExpense.dialog("close");
                    objDialogExpense.dialog("close"); window.parent.jQuery('#ForPartialViewExpensenew').dialog('close');
                }
                else {
                    jAlert(data, "Message");
                    return false;
                }
            }, 'json');
        }
    }

    $(document).ready(function () {
        var HsnArray;
        $('#ddlNatureofExpenses').change(function () {
            var brandID = $(this).val();
            var Student =
           {
               "NatureofExpensesId": brandID
           };
            $.ajax({
                url: '../EmployeeClaimNewPetty/GetExpenseCategory/',
                data: JSON.stringify(Student),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $("#ddlExpenseCategory").empty();
                    $("#ddlSubCategory").empty();
                    if (data.length > 0) {
                        $("#ddlSubCategory").append("<option value='0' >--Select--</option>");
                        $("#ddlExpenseCategory").append("<option value='0' >--Select--</option>");
                        for (var i = 0; i < data.length; i++) {
                            var stylesSelect = $('#ddlExpenseCategory');
                            stylesSelect.attr('disabled', false);
                            $("#ddlExpenseCategory").append("<option value=" + data[i].ExpenseCategoryId + " >" + data[i].ExpenseCategoryName + "</option>");
                        }
                        var ddlNaturelocal = $("#ddlNatureofExpenses option:selected").text();
                        if (ddlNaturelocal == "Local Conveyance") {
                            $("#lopcalhide1").show();
                            $("#lopcalhide2").show();
                        }
                        else {
                            $("#lopcalhide1").hide();
                            $("#lopcalhide2").hide();
                        }
                    }

                    if (data.length == 0) {
                        var stylesSelect = $('#ddlExpenseCategory');
                        stylesSelect.attr('disabled', true);
                        var stylesSelect = $('#ddlSubCategory');
                        stylesSelect.attr('disabled', true);
                        $('#btnsavexpNN').attr('disabled', true);
                    }
                },
                error: function (result) {
                    jAlert("Error.", "Error");
                    return false;
                }
            });
        });

        $('#ddlExpenseCategory').change(function () {
            var brandID = $(this).val();
            var Student =
           {
               "ExpenseCategoryId": brandID
           };
            $.ajax({
                url: '../EmployeeClaimNewPetty/GetSubCategory/',
                data: JSON.stringify(Student),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $("#ddlSubCategory").empty();
                    if (data.length > 0) {
                        $("#ddlSubCategory").append("<option value='0' >--Select--</option>");
                        for (var i = 0; i < data.length; i++) {
                            var stylesSelect = $('#ddlSubCategory');
                            stylesSelect.attr('disabled', false);
                            $("#ddlSubCategory").append("<option value=" + data[i].SubCategoryId + " >" + data[i].SubCategoryName + "</option>");
                        }
                    }
                    if (data.length == 0) {
                        var stylesSelect = $('#ddlSubCategory');
                        stylesSelect.attr('disabled', true);
                        $('#btnsavexpNN').attr('disabled', true);
                    }
                },
                error: function (result) {
                    jAlert("Error.", "Error");
                    return false;
                }
            });
        });

        $('#ddlSubCategory').change(function () {
            var brandID = $(this).val();
            if (brandID != "0") {
                var Student =
               {
                   "ExpenseCategoryId": brandID
               };
                $.ajax({
                    url: '../EmployeeClaimNewPetty/GetSubCategorypolicy/',
                    data: JSON.stringify(Student),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        cheval();
                        if (data.policy != "") {
                            var stylesSelect = $('#Getpolicypopup');
                            stylesSelect.attr('disabled', false);
                        }
                        else {
                            var stylesSelect = $('#Getpolicypopup');
                            stylesSelect.attr('disabled', true);
                        }

                        if (data.Data2 != "" && data.Data2 != null) {
                            HsnArray = JSON.parse(data.Data2);
                            var data2 = JSON.parse(data.Data2);
                            $("#txtHsnId").empty();
                            if (data2.length > 0) {
                                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                                for (var i = 0; i < data2.length; i++) {
                                    var stylesSelect1 = $('#txtHsnId');
                                    stylesSelect1.attr('disabled', false);
                                    $("#txtHsnId").append("<option value=" + data2[i].hsnid + " >" + data2[i].hsncode + "</option>");
                                }
                            }
                            else {

                                $("#txtHsnId").empty();
                                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                                var stylesSelect1 = $('#txtHsnId');
                                stylesSelect1.attr('disabled', true);
                            }
                        }

                        else {
                            var stylesSelect = $('#Getpolicypopupt');
                            stylesSelect.attr('disabled', true);
                            $("#txtHsnId").empty();
                            $("#txtHsnId").append("<option value='0' >--Select--</option>");
                            var stylesSelect1 = $('#txtHsnId');
                            stylesSelect1.attr('disabled', true);
                            $("#txtHsnId").removeClass('valid');
                            $("#txtHsnId").addClass('required');
                            cheval();
                        }

                    },
                    error: function (result) {
                        jAlert("Error.", "Error");
                        return false;
                    }
                });
            }
        });

        $('#txtHsnId').change(function () {
            if (HsnArray.length > 0) {
                var hsnid = $("#txtHsnId").val();
                $("#rdorcmChargedNo").prop("checked", true);
                if (parseInt(hsnid) != 0) {
                    for (var i = 0; i < HsnArray.length; i++) {
                        if (parseInt(hsnid) == parseInt(HsnArray[i].hsnid)) {
                            $("#txthsndesc").val(HsnArray[i].Hsndesc);
                            //Ramya Aug
                            var GSTCharged = $("#hdfEditViewGstChargedFlag").val();
                            if (GSTCharged == "N") {
                                LoadRCMonHSNChange(hsnid);
                            }
                            break;
                        }
                    }
                }
                else {
                    $("#txthsndesc").val("");
                }
            }
        });

        $('#ddlTravelModet').change(function () {
            var brandID = $(this).val();
            var Student =
           {
               "TravelModeId": brandID
           };
            $.ajax({
                url: '../TravelClaimNew/GetTravelClassdata/',
                data: JSON.stringify(Student),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    cheval();
                    $("#ddlTravelClasst").empty();
                    if (data.length > 0) {
                        $("#ddlTravelClasst").append("<option value='0' >--Select--</option>");
                        for (var i = 0; i < data.length; i++) {
                            var stylesSelect = $('#ddlTravelClasst');
                            stylesSelect.attr('disabled', false);
                            $("#ddlTravelClasst").append("<option value=" + data[i].TravelClassId + " >" + data[i].TravelClassName + "</option>");
                        }

                        $("#txtDistancet").removeClass('required');
                        $("#txtRatet").removeClass('required');
                        $("#txtDistancet").removeClass('valid');
                        $("#txtRatet").removeClass('valid');

                        $('#txtAmount').attr('disabled', false);
                        $("#txtAmount").val('');
                        $("#txtAmount").addClass('required');

                        var Studentnew =
                          {
                              "TravelModeId": brandID
                          };
                        $.ajax({
                            url: '../TravelClaimNew/GetTravelClassdataflag/',
                            data: JSON.stringify(Studentnew),
                            type: 'POST',
                            contentType: 'application/json; charset=utf-8',
                            success: function (data) {
                                if (data == "Y") {
                                    $('#txtDistancet').attr('disabled', false);
                                    $("#txtDistancet").val('');
                                    $('#txtRatet').attr('disabled', false);
                                    $("#txtRatet").val('');

                                    $("#txtDistancet").removeClass('valid');
                                    $("#txtDistancet").addClass('required');
                                    $("#txtRatet").removeClass('valid');
                                    $("#txtRatet").addClass('required');
                                    cheval();
                                }
                                else {
                                    $('#txtDistancet').attr('disabled', true);
                                    $("#txtDistancet").val('');
                                    $('#txtRatet').attr('disabled', true);
                                    $("#txtRatet").val('');

                                    cheval();
                                }
                            },
                            error: function (result) {
                                jAlert("Error.", "Error");
                                return false;
                            }
                        });
                    }
                    if (data.length == 0) {
                        var stylesSelect = $('#ddlTravelClasst');
                        stylesSelect.attr('disabled', true);
                        $("#ddlTravelClasst").append("<option value='0' >--Select--</option>");
                    }
                },
                error: function (result) {
                    jAlert("Error.", "Error");
                    return false;
                }
            });
        });

        $('#txtCC').change(function () {
            var ccs = $("#txtCC option:selected").text();
            var fcs = $("#txtFC option:selected").text();
            concode(fcs, ccs);
        });
        $('#txtFC').change(function () {
            var ccs = $("#txtCC option:selected").text();
            var fcs = $("#txtFC option:selected").text();
            concode(fcs, ccs);
        });
    });
    function concode(fcs, ccs) {
        var fc = fcs.split('-');
        var cc = ccs.split('-');
        $("#txtFCCC").val(fc[1] + "-" + cc[1]);
    }
    function cheval() {
        var ddlNatureofExpenses1 = $("#ddlNatureofExpenses").val();
        var ddlExpenseCategory1 = $("#ddlExpenseCategory").val();
        var ddlSubCategory1 = $("#ddlSubCategory").val();

        var ddlNatureofExpenses = $("#ddlNatureofExpenses option:selected").text();
        var ddlExpenseCategory = $("#ddlExpenseCategory option:selected").text();
        var ddlSubCategory = $("#ddlSubCategory option:selected").text();

        var txtClaimPeriodFrom = $("#txtClaimPeriodFrom").val();
        var txtClaimPeriodTo = $("#txtClaimPeriodTo").val();
        var txtAmount = $("#txtAmount").val();

        var txtProductCode = $("#txtProductCode").val();
        var txtOUCode = $("#txtOUCode").val();


        var TravelMode = $("#ddlTravelModet option:selected").text();
        var TravelClass = $("#ddlTravelClasst option:selected").text();
        var TravelMode1 = $("#ddlTravelModet").val();
        var TravelClass1 = $("#ddlTravelClasst").val();

        var PlaceFrom1 = $("#ddlPlaceFromt").val();
        var PlaceTo1 = $("#ddlPlaceTot").val();
        //var PlaceFrom = $("#ddlPlaceFromt option:selected").text();
        //var PlaceTo = $("#ddlPlaceTot option:selected").text();

        //if (txtAmount != "0.00" && txtProductCode != "" && txtOUCode != "" && ddlNatureofExpenses1 != null && ddlExpenseCategory1 != null && ddlSubCategory1 != null && ddlNatureofExpenses1 != "0" && ddlExpenseCategory1 != "0" && ddlSubCategory1 != "0" && ddlNatureofExpenses != "--Select--" && ddlExpenseCategory != "--Select--" && ddlSubCategory != "--Select--" && txtClaimPeriodFrom != "" && txtClaimPeriodTo != "" && txtAmount != "") {
        //    $('#btnsavexpedit').attr('disabled', false);
        //}
        //else {
        //    $('#btnsavexpedit').attr('disabled', true);
        //}

        if (txtAmount != "0.00" && txtProductCode != "" && txtOUCode != "" && ddlNatureofExpenses1 != null && ddlExpenseCategory1 != null && ddlSubCategory1 != null && ddlNatureofExpenses1 != "0" && ddlExpenseCategory1 != "0" && ddlSubCategory1 != "0" && ddlNatureofExpenses != "--Select--" && ddlExpenseCategory != "--Select--" && ddlSubCategory != "--Select--" && txtClaimPeriodFrom != "" && txtClaimPeriodTo != "" && txtAmount != "") {

            var ddlNaturelocal = $("#ddlNatureofExpenses option:selected").text();
            if (ddlNaturelocal == "Local Conveyance") {
                if (txtAmount != "0.00" &&
                    PlaceFrom1 != null && TravelClass1 != null &&
               PlaceFrom1 != "" && TravelClass1 != "0" &&
               TravelMode1 != null && PlaceTo1 != null &&
               TravelMode1 != "0" && PlaceTo1 != "" &&
               TravelMode != "--Select--" && TravelClass != "--Select--" && txtProductCode != "" && txtOUCode != "" && ddlNatureofExpenses1 != null && ddlExpenseCategory1 != null && ddlSubCategory1 != null && ddlNatureofExpenses1 != "0" && ddlExpenseCategory1 != "0" && ddlSubCategory1 != "0" && ddlNatureofExpenses != "--Select--" && ddlExpenseCategory != "--Select--" && ddlSubCategory != "--Select--" && txtClaimPeriodFrom != "" && txtClaimPeriodTo != "" && txtAmount != "") {
                    $('#btnsavexpedit').attr('disabled', false);
                }
                else {
                    $('#btnsavexpedit').attr('disabled', true);
                }
            }
            else {
                $('#btnsavexpedit').attr('disabled', false);
            }
        }
        else {
            $('#btnsavexpedit').attr('disabled', true);
        }

    }
    $(document).ready(function () {
        cheval();


        $("#txtDistancet").keyup(function () {
            var txtContractFrom = $("#txtDistancet").val();
            var txtRatet = $("#txtRatet").val();
            if (txtContractFrom.trim() != "" || txtRatet.trim() != "") {
                //$("#txtDistancet").removeClass('required');
                //$("#txtDistancet").addClass('valid');
                cheval();
                $("#txtAmount").removeClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', true);

                //var tol = $('#txtDistancet').val() * ($('#txtRatet').val());
                //$('#txtAmount').val(tol.toFixed(2)); cheval()
                //cheval();
                var currentvalnew = $('#txtDistancet').val() * ($('#txtRatet').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmount').val(tolnew);
                cheval();
            }
            else {
                //$("#txtDistancet").removeClass('valid');
                //$("#txtDistancet").addClass('required');
                cheval();
                $("#txtAmount").addClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', false);
                $("#txtAmount").val(''); cheval();
            }
        });
        $("#txtDistancet").change(function () {
            var txtContractFrom = $("#txtDistancet").val();
            var txtRatet = $("#txtRatet").val();
            if (txtContractFrom.trim() != "" || txtRatet.trim() != "") {
                //$("#txtDistancet").removeClass('required');
                //$("#txtDistancet").addClass('valid');
                cheval();
                $("#txtAmount").removeClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', true);

                //var tol = $('#txtDistancet').val() * ($('#txtRatet').val());
                //$('#txtAmount').val(tol.toFixed(2)); cheval();
                var currentvalnew = $('#txtDistancet').val() * ($('#txtRatet').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmount').val(tolnew);
                cheval();
            }
            else {
                //$("#txtDistancet").removeClass('valid');
                //$("#txtDistancet").addClass('required');
                cheval();
                $("#txtAmount").addClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', false);
                $("#txtAmount").val(''); cheval();
            }
        });

        $("#txtRatet").keyup(function () {
            var txtContractFrom = $("#txtRatet").val();
            var txtDistancet = $("#txtDistancet").val();
            if (txtContractFrom.trim() != "" || txtDistancet.trim() != "") {
                //$("#txtRatet").removeClass('required');
                //$("#txtRatet").addClass('valid');
                cheval();
                $("#txtAmount").removeClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', true);

                //var tol = $('#txtDistancet').val() * ($('#txtRatet').val());
                //$('#txtAmount').val(tol.toFixed(2)); cheval();
                var currentvalnew = $('#txtDistancet').val() * ($('#txtRatet').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmount').val(tolnew);
                cheval();
            }
            else {
                //$("#txtRatet").removeClass('valid');
                //$("#txtRatet").addClass('required');
                cheval();
                $("#txtAmount").addClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', false);
                $("#txtAmount").val(''); cheval();
            }
        });
        $("#txtRatet").change(function () {

            var txtContractFrom = $("#txtRatet").val();
            var txtDistancet = $("#txtDistancet").val();
            if (txtContractFrom.trim() != "" || txtDistancet.trim() != "") {
                cheval();
                $("#txtAmount").removeClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', true);

                //var tol = $('#txtDistancet').val() * ($('#txtRatet').val());
                //$('#txtAmount').val(tol.toFixed(2)); cheval();
                var currentvalnew = $('#txtDistancet').val() * ($('#txtRatet').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmount').val(tolnew);
                cheval();
            }
            else {
                //$("#txtRatet").removeClass('valid');
                //$("#txtRatet").addClass('required');
                cheval();
                $("#txtAmount").addClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', false);
                $("#txtAmount").val(''); cheval();
            }
        });

        $("#ddlTravelClasst").keyup(function () {
            var txtContractFrom = $("#ddlTravelClasst").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlTravelClasst").removeClass('required');
                $("#ddlTravelClasst").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelClasst").removeClass('valid');
                $("#ddlTravelClasst").addClass('required'); cheval();
            }
        });
        $("#ddlTravelClasst").change(function () {
            var txtContractFrom = $("#ddlTravelClasst").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlTravelClasst").removeClass('required');
                $("#ddlTravelClasst").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelClasst").removeClass('valid');
                $("#ddlTravelClasst").addClass('required'); cheval();
            }
        });
        var txtContractFrom = $("#ddlTravelClasst option:selected").text();
        if (txtContractFrom.trim() != "--Select--") {
            $("#ddlTravelClasst").addClass('valid'); cheval();
        }
        else {
            $("#ddlTravelClasst").addClass('required'); cheval();
        }
        $("#ddlTravelModet").keyup(function () {
            var txtContractFrom = $("#ddlTravelModet").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlTravelModet").removeClass('required');
                $("#ddlTravelModet").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelModet").removeClass('valid');
                $("#ddlTravelModet").addClass('required'); cheval();
            }
        });
        $("#ddlTravelModet").change(function () {
            var txtContractFrom = $("#ddlTravelModet").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlTravelModet").removeClass('required');
                $("#ddlTravelModet").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelModet").removeClass('valid');
                $("#ddlTravelModet").addClass('required'); cheval();
            }
        });
        var txtContractFrom = $("#ddlTravelModet option:selected").text();
        if (txtContractFrom.trim() != "--Select--") {
            $("#ddlTravelModet").addClass('valid'); cheval();
        }
        else {
            $("#ddlTravelModet").addClass('required'); cheval();
        }
        $("#txtDistancet").keyup(function () {
            var txtContractFrom = $("#txtDistancet").val();
            if (txtContractFrom.trim() != "") {
                $("#txtDistancet").removeClass('required');
                $("#txtDistancet").addClass('valid'); cheval();
            }
            else {
                $("#txtDistancet").removeClass('valid');
                $("#txtDistancet").addClass('required'); cheval();
            }
        });
        $("#txtDistancet").change(function () {
            var txtContractFrom = $("#txtDistancet").val();
            if (txtContractFrom.trim() != "") {
                $("#txtDistancet").removeClass('required');
                $("#txtDistancet").addClass('valid'); cheval();
            }
            else {
                $("#txtDistancet").removeClass('valid');
                $("#txtDistancet").addClass('required'); cheval();
            }
        });

        $("#txtRatet").keyup(function () {
            var txtContractFrom = $("#txtRatet").val();
            if (txtContractFrom.trim() != "") {
                $("#txtRatet").removeClass('required');
                $("#txtRatet").addClass('valid'); cheval();
            }
            else {
                $("#txtRatet").removeClass('valid');
                $("#txtRatet").addClass('required'); cheval();
            }
        });
        $("#txtRatet").change(function () {
            var txtContractFrom = $("#txtRatet").val();
            if (txtContractFrom.trim() != "") {
                $("#txtRatet").removeClass('required');
                $("#txtRatet").addClass('valid'); cheval();
            }
            else {
                $("#txtRatet").removeClass('valid');
                $("#txtRatet").addClass('required'); cheval();
            }
        });

        $("#ddlPlaceTot").keyup(function () {
            var txtContractFrom = $("#ddlPlaceTot").val();
            if (txtContractFrom.trim() != "") {
                $("#ddlPlaceTot").removeClass('required');
                $("#ddlPlaceTot").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceTot").removeClass('valid');
                $("#ddlPlaceTot").addClass('required'); cheval();
            }
        });
        $("#ddlPlaceTot").change(function () {
            var txtContractFrom = $("#ddlPlaceTot").val();
            if (txtContractFrom.trim() != "") {
                $("#ddlPlaceTot").removeClass('required');
                $("#ddlPlaceTot").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceTot").removeClass('valid');
                $("#ddlPlaceTot").addClass('required'); cheval();
            }
        });
        var txtContractFrom = $("#ddlPlaceTot").val();
        if (txtContractFrom.trim() != "") {
            $("#ddlPlaceTot").addClass('valid'); cheval();
        }
        else {
            $("#ddlPlaceTot").addClass('required'); cheval();
        }
        $("#ddlPlaceFromt").keyup(function () {
            var txtContractFrom = $("#ddlPlaceFromt").val();
            if (txtContractFrom.trim() != "") {
                $("#ddlPlaceFromt").removeClass('required');
                $("#ddlPlaceFromt").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceFromt").removeClass('valid');
                $("#ddlPlaceFromt").addClass('required'); cheval();
            }
        });
        $("#ddlPlaceFromt").change(function () {
            var txtContractFrom = $("#ddlPlaceFromt").val();
            if (txtContractFrom.trim() != "") {
                $("#ddlPlaceFromt").removeClass('required');
                $("#ddlPlaceFromt").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceFromt").removeClass('valid');
                $("#ddlPlaceFromt").addClass('required'); cheval();
            }
        });
        var txtContractFrom = $("#ddlPlaceFromt").val();
        if (txtContractFrom.trim() != "") {
            $("#ddlPlaceFromt").addClass('valid'); cheval();
        }
        else {
            $("#ddlPlaceFromt").addClass('required'); cheval();
        }
        $("#ddlNatureofExpenses").keyup(function () {
            var txtContractFrom = $("#ddlNatureofExpenses").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlNatureofExpenses").removeClass('required');
                $("#ddlNatureofExpenses").addClass('valid'); cheval();
            }
            else {
                $("#ddlNatureofExpenses").removeClass('valid');
                $("#ddlNatureofExpenses").addClass('required'); cheval();
            }
        });
        $("#ddlNatureofExpenses").change(function () {
            var txtContractFrom = $("#ddlNatureofExpenses").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlNatureofExpenses").removeClass('required');
                $("#ddlNatureofExpenses").addClass('valid'); cheval();
            }
            else {
                $("#ddlNatureofExpenses").removeClass('valid');
                $("#ddlNatureofExpenses").addClass('required'); cheval();
            }
        });

        $("#ddlExpenseCategory").keyup(function () {
            var txtContractFrom = $("#ddlExpenseCategory").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlExpenseCategory").removeClass('required');
                $("#ddlExpenseCategory").addClass('valid'); cheval();
            }
            else {
                $("#ddlExpenseCategory").removeClass('valid');
                $("#ddlExpenseCategory").addClass('required'); cheval();
            }
        });
        $("#ddlExpenseCategory").change(function () {
            var txtContractFrom = $("#ddlExpenseCategory").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlExpenseCategory").removeClass('required');
                $("#ddlExpenseCategory").addClass('valid'); cheval();
            }
            else {
                $("#ddlExpenseCategory").removeClass('valid');
                $("#ddlExpenseCategory").addClass('required'); cheval();
            }
        });

        $("#ddlSubCategory").keyup(function () {
            var txtContractFrom = $("#ddlSubCategory").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlSubCategory").removeClass('required');
                $("#ddlSubCategory").addClass('valid'); cheval();
            }
            else {
                $("#ddlSubCategory").removeClass('valid');
                $("#ddlSubCategory").addClass('required'); cheval();
            }
        });
        $("#ddlSubCategory").change(function () {
            var txtContractFrom = $("#ddlSubCategory").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlSubCategory").removeClass('required');
                $("#ddlSubCategory").addClass('valid'); cheval();
            }
            else {
                $("#ddlSubCategory").removeClass('valid');
                $("#ddlSubCategory").addClass('required'); cheval();
            }
        });

        $("#txtClaimPeriodFrom").keyup(function () {
            var txtContractFrom = $("#txtClaimPeriodFrom").val();
            if (txtContractFrom.trim() != "") {
                $("#txtClaimPeriodFrom").removeClass('required');
                $("#txtClaimPeriodFrom").addClass('valid'); cheval();
            }
            else {
                $("#txtClaimPeriodFrom").removeClass('valid');
                $("#txtClaimPeriodFrom").addClass('required'); cheval();
            }
        });
        $("#txtClaimPeriodFrom").change(function () {
            var txtContractFrom = $("#txtClaimPeriodFrom").val();
            if (txtContractFrom.trim() != "") {
                $("#txtClaimPeriodFrom").removeClass('required');
                $("#txtClaimPeriodFrom").addClass('valid'); cheval();
            }
            else {
                $("#txtClaimPeriodFrom").removeClass('valid');
                $("#txtClaimPeriodFrom").addClass('required'); cheval();
            }
        });

        $("#txtClaimPeriodTo").keyup(function () {
            var txtContractFrom = $("#txtClaimPeriodTo").val();
            if (txtContractFrom.trim() != "") {
                $("#txtClaimPeriodTo").removeClass('required');
                $("#txtClaimPeriodTo").addClass('valid');
                getmonth(txtContractFrom);
                cheval();
            }
            else {
                $("#txtClaimPeriodTo").removeClass('valid');
                $("#txtClaimPeriodTo").addClass('required'); cheval();
            }
        });
        $("#txtClaimPeriodTo").change(function () {
            var txtContractFrom = $("#txtClaimPeriodTo").val();
            if (txtContractFrom.trim() != "") {
                $("#txtClaimPeriodTo").removeClass('required');
                $("#txtClaimPeriodTo").addClass('valid');
                getmonth(txtContractFrom);
                cheval();
            }
            else {
                $("#txtClaimPeriodTo").removeClass('valid');
                $("#txtClaimPeriodTo").addClass('required'); cheval();
            }
        });

        $("#txtAmount").keyup(function () {
            var txtContractFrom = $("#txtAmount").val();
            if (txtContractFrom.trim() != "") {
                $("#txtAmount").removeClass('required');
                $("#txtAmount").addClass('valid');
                cheval();
            }
            else {
                $("#txtAmount").removeClass('valid');
                $("#txtAmount").addClass('required');
                cheval();
            }
        });
        $("#txtAmount").change(function () {
            var txtContractFrom = $("#txtAmount").val();
            if (txtContractFrom.trim() != "") {
                $("#txtAmount").removeClass('required');
                $("#txtAmount").addClass('valid');
                cheval();
            }
            else {
                $("#txtAmount").removeClass('valid');
                $("#txtAmount").addClass('required');
                cheval();
            }
        });

        $("#txtProductCode").keyup(function () {
            var txtContractFrom = $("#txtProductCode").val();
            if (txtContractFrom.trim() != "") {
                $("#txtProductCode").removeClass('required');
                $("#txtProductCode").addClass('valid');
                cheval();
            }
            else {
                $("#txtProductCode").removeClass('valid');
                $("#txtProductCode").addClass('required');
                cheval();
            }
        });
        $("#txtProductCode").change(function () {
            var txtContractFrom = $("#txtProductCode").val();
            if (txtContractFrom.trim() != "") {
                $("#txtProductCode").removeClass('required');
                $("#txtProductCode").addClass('valid');
                cheval();
            }
            else {
                $("#txtProductCode").removeClass('valid');
                $("#txtProductCode").addClass('required');
                cheval();
            }
        });
        $("#txtOUCode").keyup(function () {
            var txtContractFrom = $("#txtOUCode").val();
            if (txtContractFrom.trim() != "") {
                $("#txtOUCode").removeClass('required');
                $("#txtOUCode").addClass('valid');
                cheval();
            }
            else {
                $("#txtOUCode").removeClass('valid');
                $("#txtOUCode").addClass('required');
                cheval();
            }
        });
        $("#txtOUCode").change(function () {
            var txtContractFrom = $("#txtOUCode").val();
            if (txtContractFrom.trim() != "") {
                $("#txtOUCode").removeClass('required');
                $("#txtOUCode").addClass('valid');
                cheval();
            }
            else {
                $("#txtOUCode").removeClass('valid');
                $("#txtOUCode").addClass('required');
                cheval();
            }
        });

        var txtContractFrom = $("#txtProductCode").val();
        if (txtContractFrom.trim() != "") {
            $("#txtProductCode").addClass('valid');
        }
        else {
            $("#txtProductCode").addClass('required');
        }
        var txtContractFrom = $("#txtOUCode").val();
        if (txtContractFrom.trim() != "") {
            $("#txtOUCode").addClass('valid');
        }
        else {
            $("#txtOUCode").addClass('required');
        }


        var txtContractFrom = $("#txtAmount").val();
        if (txtContractFrom.trim() != "") {
            $("#txtAmount").addClass('valid');
        }
        else {
            $("#txtAmount").addClass('required');
        }

        var txtContractFrom = $("#txtClaimPeriodTo").val();
        if (txtContractFrom.trim() != "") {
            $("#txtClaimPeriodTo").addClass('valid');
            getmonth(txtContractFrom);
        }
        else {
            $("#txtClaimPeriodTo").addClass('required');
        }
        var txtContractFrom = $("#txtClaimPeriodFrom").val();
        if (txtContractFrom.trim() != "") {
            $("#txtClaimPeriodFrom").addClass('valid');
        }
        else {
            $("#txtClaimPeriodFrom").addClass('required');
        }

        var txtContractFrom = $("#ddlNatureofExpenses").val();
        if (txtContractFrom.trim() != "0") {
            $("#ddlNatureofExpenses").addClass('valid');
        }
        else {
            $("#ddlNatureofExpenses").addClass('required');
        }
        var txtContractFrom = $("#ddlExpenseCategory").val();
        if (txtContractFrom.trim() != "0") {
            $("#ddlExpenseCategory").addClass('valid');
        }
        else {
            $("#ddlExpenseCategory").addClass('required');
        }
        var txtContractFrom = $("#ddlSubCategory").val();
        if (txtContractFrom.trim() != "0") {
            $("#ddlSubCategory").addClass('valid');
        }
        else {
            $("#ddlSubCategory").addClass('required');
        }
    });

    function getmonth(date) {
        if (date.length == 10) {
            var ddd = isgetmonthyear(date);
            if (ddd == "Error") {
                $("#txtClaimMonth").val('')
            }
            else {
                $("#txtClaimMonth").val(ddd)
            }
        }
        else {
            $("#txtClaimMonth").val('')
        }
    }
    function isgetmonthyear(evt) {
        var retnval;
        var str = evt;
        var array = str.split('-');

        if (array[1] == "01") {
            retnval = "January-" + array[2];
            return retnval;
        }
        if (array[1] == "02") {
            retnval = "February-" + array[2]; return retnval;
        }
        if (array[1].trim() == "03") {
            retnval = "March-" + array[2]; return retnval;
        }
        if (array[1].trim() == "04") {
            retnval = "April-" + array[2]; return retnval;
        }
        if (array[1].trim() == "05") {
            retnval = "May-" + array[2]; return retnval;
        }
        if (array[1].trim() == "06") {
            retnval = "June-" + array[2]; return retnval;
        }
        if (array[1].trim() == "07") {
            retnval = "July-" + array[2]; return retnval;
        }
        if (array[1].trim() == "08") {
            retnval = "August-" + array[2]; return retnval;
        }
        if (array[1].trim() == "09") {
            retnval = "September-" + array[2]; return retnval;
        }
        if (array[1].trim() == "10") {
            retnval = "October-" + array[2]; return retnval;
        }
        if (array[1].trim() == "11") {
            retnval = "November-" + array[2]; return retnval;
        }
        if (array[1].trim() == "12") {
            retnval = "December-" + array[2]; return retnval;
        }
        else {
            retnval = "Error"; return retnval;
        }
        return retnval;
    }
    $('#txtOUCode').blur(function () {
        var OucodeBussiness = document.getElementById('txtOUCode').value;
        var Student =
       {
           "OUCode": OucodeBussiness
       };
        $.ajax({
            url: '../TravelClaimNew/ChangeBussinessSegment/',
            data: JSON.stringify(Student),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#txtFC").val(data[0].OUCode);
            },
            error: function (result) {
                jAlert("Error.", "Error");
                return false;
            }
        });
    });
</script>
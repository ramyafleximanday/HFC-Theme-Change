@model IEM.Areas.FLEXIBUY.Models.poraiser
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

@{
    ViewBag.Title = "Delmetapprovalforpo";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var viewfor = (string)Session["viewfor"];
    if (viewfor == "edit" || viewfor == "amend")
    {
        ViewBag.viewmode = "";
    }
    else if (viewfor == "view" || viewfor == "cancel" || viewfor == "delete" || viewfor == "checkercancel" || viewfor == "checker" || viewfor == "closure" || viewfor == "closurechecker")
    {
        ViewBag.viewmode = "disabled";
    }
}

<input type="hidden" id="hid_poheadgid" value="@Model.poheadGid" />
<input type="hidden" id="hid_tempcontent" value="@Model.tempName" />
<input type="hidden" id="hid_tempname" value="@Model.templname" />
<input type="hidden" id="hid_tempaddcontent" value="@Model.additionTemplate" />
<input type="hidden" id="hid_itType" value="@Model.itType">
<input type="hidden" id="hid_mak_remarks" value="@Model.remarks" />
<input type="hidden" id="hid_pocancelgid" value="@Model.poCancelGid" />
<input type="hidden" id="hid_poclosuregid" value="@Model.poClosureGid" />
<input type="hidden" id="hid_dept" value="@Model.department" />
<input type="hidden" id="hid_cbfamount" value="@Model.cbfheadAmount" />
<input type="hidden" id="hid_podetailcount" value="@Model.count" />
<input type="hidden" id="shippedqty" />

@if (viewfor == "edit")
{
    <h2>PO Edit</h2>
}
@if (viewfor == "amend")
{
    <h2>PO Amendment</h2>
}
@if (viewfor == "cancel")
{
    <h2>PO Cancellation</h2>
}
@if (viewfor == "delete")
{
    <h2>Po Deletion</h2>
}

@if (viewfor == "checkercancel")
{
    <h2>Po Cancellation Checker </h2>
}

@if (viewfor == "checker")
{
    <h2>Po Checker </h2>
}
@if (viewfor == "closure")
{
    <h2>Po Closure Maker</h2>
}
@if (viewfor == "closurechecker")
{
    <h2>Po Closure Checker</h2>
}

<div class="well">
    <h4>Delmetapprovalforpo</h4>
    @using (Html.BeginForm())
    {
        <div class="borderStyle panel panel-default ">
            <table class="myTableStyleTabNew" align="center">
                <tr>
                    <td>
                        <span>PO Ref No</span>
                        <br />
                        <input type="text"
                               name="txtporefno"
                               id="txtporefno"
                               disabled="disabled"
                               value="@Model.porefno"
                               class="textboxStyle valid" />
                    </td>
                    <td>
                        <span>PO Date </span>
                        <br />
                        <input type="text"
                               id="txtpodate"
                               maxlength="10"
                               disabled="disabled"
                               value="@Model.podate"
                               class="textboxStyle valid" @ViewBag.viewmode />
                    </td>
                    <td>
                        <span>PO End Date </span>
                        <br />
                        <input type="text"
                               id="txtpoendDate"
                               maxlength="10"
                               value="@Model.poenddate"
                               class="textboxStyle valid" @ViewBag.viewmode />
                    </td>
                    <td>
                        <span>Raised By</span>
                        <br />
                        <input type="text"
                               name="txtraisedby"
                               id="txtraisedby"
                               disabled="d"
                               value="@Model.raisedby"
                               class="textboxStyle valid" @ViewBag.viewmode />
                    </td>
                    <td>
                        <span>Project Manager </span>
                        <br />
                        @if (viewfor == "edit")
                        {
                            @Html.DropDownList("projmanagergid", Model.projmanagerList, "--Select--", new { @class = "textboxStyle valid" })
                        }
                        else
                        {
                            @Html.DropDownList("projmanagergid", Model.projmanagerList, "--Select--", new { @class = "textboxStyle valid", @disabled = "disabled" })
                        }

                    </td>
                </tr>
                @*<tr>
                        <td></td>
                    </tr>*@
                <tr>
                    <td>
                        <span>Department</span>
                        <br />
                        <input type="text"
                               name="txtdepartment"
                               id="txtdepartment"
                               disabled="disabled"
                               value="@Model.department"
                               class="textboxStyle valid" />
                    </td>
                    <td>
                        <span>Vendor Name</span>
                        <br />
                        <input type="text"
                               name="txtvendorname"
                               id="txtvendorname"
                               disabled="disabled"
                               value="@Model.vendorName"
                               class="textboxStyle valid" />
                    </td>
                    <td>
                        <span>Type</span>
                        <br />
                        <div style="margin-top:5px;">
                            <input type="radio" id="id_rdapp" name="it" value="Application" @ViewBag.viewmode />
                            Application
                            <input type="radio" id="id_rdinfar" name="it" value="Infrastructure" @ViewBag.viewmode />
                            Infrastructure
                        </div>
                    </td>
                    <td nowrap="nowrap" colspan="3">
                        <span>Vendor Note</span>
                        <br />
                        <input type="text"
                               name="txt_vendornote"
                               class="textboxStyleBig valid"
                               id="txtvendornote"
                               value="@Model.vendorNote" @ViewBag.viewmode />
                    </td>
                </tr>
            </table>
        </div>

        <h4>PO details</h4>
        <div id="podetailsgrid">
            @if (@ViewBag.podetails != "Second")
            {
                <div>

                    @Html.Partial("DelmetPoEditDetails");
                </div>
            }
            else
            {
                <div id="pogrid">

                </div>
            }
        </div>
    }
    <h4>PO Template</h4>
    <table class="myTableStyleTabNew">
        <tr>
            @if (viewfor == "edit" || viewfor == "amend")
            {
                <td>

                    <span>Select Template</span>
                    <br />
                    <div style="width:225px;">

                        @Html.DropDownList("templateGid", Model.templateList, "--Select--", new { @class = "textboxStyle valid" })

                    </div>
                </td>
            }
            @if (viewfor == "edit" || viewfor == "amend")
            {
                <td>
                    <div style="margin-top: 22px;margin-left: -970px;">
                        <span class="btn btn-link" onclick="CreatePoTemplate()">Create Template</span>
                    </div>
                </td>
            }
        </tr>
        <tr>
            <td></td>
        </tr>
        <tr>
            <td>
                <span>Terms and Condtions</span>
                <br />
                @if (viewfor == "closurechecker" || viewfor == "closure" || viewfor == "cancel")
                {
                    <table>
                        <tr>
                            <td>
                                <div style="margin-left: 492px;">
                                    <span>Template</span>
                                </div>
                            </td>
                            <td>
                                &nbsp;
                            </td>
                            <td>
                                <div>
                                    <b id="temp_name"></b>
                                </div>
                            </td>
                        </tr>
                    </table>
                }
                <div>
                    <textarea style="width:1193px;height:344px;resize:none"
                              draggable="false" id="txtTempContent" class="textareaStyle" @ViewBag.viewmode></textarea>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                <span>Additional Terms and Conditions</span>
                <div>
                    <textarea style="width:1193px;height:200px;resize:none" draggable="false" id="txtTemplateArea1" class="textareaStyle" @ViewBag.viewmode></textarea>
                </div>
            </td>
        </tr>
    </table>
    @if (viewfor == "cancel")
    {
        <h4>Po Cancellation Checker</h4>
    }
    @if (viewfor == "closure")
    {
        <h4>Po Closure Maker Details</h4>
    }
    @if (viewfor == "closurechecker")
    {
        <h4>Po Closure Checker Details</h4>
    }
    @if (viewfor == "cancel" || viewfor == "closure")
    {
        <table>
            <tr>
                @if (viewfor == "closure")
                {
                    <td>
                        <div style="margin-left:145px">
                            <input type="checkbox" checked="checked" disabled="disabled" id="chk_closure" />Closed
                        </div>
                    </td>
                }
                @if (viewfor == "cancel")
                {
                    <td>
                        <div style="margin-left: 276px;">
                            <input type="checkbox" checked="checked" id="chk_closure" disabled="disabled" />Cancel
                        </div>
                    </td>
                }
                <td>
                    &nbsp; &nbsp; &nbsp; &nbsp;
                </td>
                @if (viewfor == "closure")
                {
                    <td>
                        <div>
                            <span>Closed Date</span>
                            <input type="text" id="txtmak_date" value="@DateTime.Now.ToString("dd/MM/yyyy")" disabled="disabled" />
                        </div>
                    </td>
                }
                <td>
                    &nbsp; &nbsp; &nbsp; &nbsp;
                </td>
                <td>
                    <div>
                        <span>Remarks</span>
                        <br />
                        <textarea name="txt_remarks"
                                  class="textboxStyleBig"
                                  style="display:block;width:437px;height:89px;resize:none"
                                  maxlength="264"
                                  id="desc_id"></textarea>
                    </div>
                </td>
            </tr>
        </table>
    }
    else if (viewfor == "checkercancel" || viewfor == "closurechecker")
    {
        <table>
            <tr>
                <td>
                    <div style="margin-left:399px;">
                        <span>Maker Remarks</span>
                        <br />
                        <textarea name="txt_remarks"
                                  class="textboxStyleBig"
                                  style="display:block;width:437px;height:89px;resize:none"
                                  maxlength="264"
                                  id="desc_maker_id"></textarea>
                    </div>
                </td>
            </tr>
        </table>
        <br />
        <table>
            <tr>
                @if (viewfor == "closurechecker")
                {
                    <td>
                        <div style="margin-left:153px">
                            <input type="checkbox" checked="checked" id="chk_closure" disabled="disabled" />Closed
                        </div>
                    </td>
                }
                @if (viewfor == "checkercancel")
                {
                    <td>
                        <div style="margin-left:309px">
                            <input type="checkbox" checked="checked" id="chk_closure" disabled="disabled" />Cancel
                        </div>
                    </td>
                }
                <td>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                </td>
                @if (viewfor == "closurechecker")
                {
                    <td>
                        <div>
                            <span>Closed Date</span>
                            <span>@DateTime.Now.ToString("dd/MM/yyyy")</span>
                            @*<input type="text" id="txtmak_date" value="@DateTime.Now.ToString("dd/MM/yyyy")" disabled="disabled" />*@
                        </div>
                    </td>
                }
                <td>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                </td>
                <td>
                    <div>
                        <span>Remarks</span>
                        <br />
                        <textarea name="txt_remarks"
                                  class="textboxStyleBig"
                                  style="display:block;width:437px;height:89px;resize:none"
                                  maxlength="264"
                                  id="desc_check_id"></textarea>
                    </div>
                </td>
            </tr>
        </table>
    }
    else if (viewfor == "checker")
    {
        <table>
            <tr>
                <td>
                    <div style="margin-left:372px;">
                        <span>Remarks</span>
                        <br />
                        <textarea name="txt_remarks"
                                  class="textboxStyleBig"
                                  style="display:block;width:437px;height:89px;resize:none"
                                  maxlength="264"
                                  id="desc_check_id"></textarea>
                    </div>
                </td>
            </tr>
        </table>
    }
    <table>
        <tr>
            <td>
                &nbsp;
            </td>
        </tr>
    </table>
    <table class="myTableStyleTabNew">
        <tr>
            <td>
                <div style="margin-left: 515px;">
                    @if (viewfor == "edit")
                    {
                        <div>
                            <button type="button" id="btnsave" name="command" class="btn btn-primary" onclick="SavePodetails()" value="Save">
                                <span class="glyphicon glyphicon-floppy-disk" style="color:white;"></span> Save
                            </button>
                            &nbsp;
                            @*<input type="button" value="Save" class="btn btn-success" id="btn_save" onclick="SavePodetails()" />*@
                            <button type="button" id="btn_submit" name="command" class="btn btn-success" onclick="SavePo()" value="Submit">
                                <span class="glyphicon glyphicon-floppy-saved" style="color:white;"></span> Submit
                            </button>
                            &nbsp;
                            @*// <input type="button" value="Submit" class="btn btn-success" id="btn_submit" onclick="SavePo()" />*@
                            <button type="button" id="btncancel" class="btn btn-warning" value="Back" onclick="BacktoPoSummary()">
                                <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span> Cancel
                            </button>
                        </div>
                        @*<input type="button" class="btn btn-warning " value="Back" onclick="BacktoPoSummary()" />*@
                    }
                    else if (viewfor == "delete")
                    {

                        <div>
                            <button type="button" id="btnDelete" class="btn btn-danger" value="Delete" onclick="DeletePoSummary()"><span style="color:white;" class="glyphicon glyphicon-trash"></span>Delete</button>
                            &nbsp;
                            <button type="button" id="btncancel" class="btn btn-warning" value="Back" onclick="BacktoPoSummary()"><span style="color:white;" class="glyphicon glyphicon-eye-close"></span> Back</button>
                        </div>

                        @*<input type="button" class="btn btn-warning " value="Back" onclick="BacktoPoSummary()" />*@
                    }
                    else if (viewfor == "view")
                    {
                        <div style="margin-left: 25px;">
                            <button type="button" id="btncancel" class="btn btn-warning" value="Back" onclick="BacktoPoSummary()">
                                <span style="color:white;" class="glyphicon glyphicon-eye-close"></span> Back
                            </button>
                        </div>
                    }
                    else if (viewfor == "cancel")
                    {
                        <div>
                            <button type="button" id="btncancel" class="btn btn-success" value="Submit" onclick="CancelPoSummary()">
                                <span style="color:white;" class="glyphicon glyphicon-saved"></span> Submit
                            </button>
                            &nbsp;
                            <button type="button" id="btncancel" class="btn btn-warning" value="Cancel" onclick="BacktoPoSummary()">
                                <span style="color:white;" class="glyphicon glyphicon-eye-close"></span> Cancel
                            </button>
                        </div>
                    }
                    else if (viewfor == "checkercancel")
                    {
                        <div style="margin-left: -45px;">
                            <button type="button" id="btnapprove" name="command" class="btn btn-success" onclick="ApproveForCancel()" value="Submit">
                                <span class="glyphicon glyphicon-hand-up" style="color:white;"></span> Approve
                            </button>
                            &nbsp;
                            <button type="button" id="btnreject" class="btn btn-danger" value="Delete" onclick="RejectForCancel()">
                                <span style="color:white;" class="glyphicon glyphicon-hand-down"></span> Reject
                            </button>
                            &nbsp;
                            <button type="button" id="btncancel" class="btn btn-warning" value="Cancel" onclick="BacktoPoCancelSummary()">
                                <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span> Cancel
                            </button>
                        </div>
                    }
                    else if (viewfor == "checker")
                    {
                        <div style="margin-left: -45px;">
                            <button type="button" id="btnapprove" name="command" class="btn btn-success" onclick="ApproveForChecker()" value="Submit">
                                <span class="glyphicon glyphicon-hand-up" style="color:white;"></span> Approve
                            </button>
                            &nbsp;
                            <button type="button" id="btnreject" class="btn btn-danger" value="Delete" onclick="RejectForChecker()">
                                <span style="color:white;" class="glyphicon glyphicon-hand-down"></span> Reject
                            </button>
                            &nbsp;
                            <button type="button" id="btncancel" class="btn btn-warning" value="Cancel" onclick="BacktoCheckSummary()">
                                <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span> Cancel
                            </button>
                        </div>
                    }
                    else if (viewfor == "closure")
                    {
                        <div style="margin-left: 8px;">
                            <button type="button" id="btnapprove" name="command" class="btn btn-success" onclick="MakerClosure()" value="Submit">
                                <span class="glyphicon glyphicon-floppy-saved" style="color:white;"></span> Submit
                            </button>
                            &nbsp;
                            <button type="button" id="btnreject" class="btn btn-warning" value="Cancel" onclick="BacktoClosureSummary()">
                                <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span> Cancel
                            </button>
                        </div>
                    }
                    else if (viewfor == "closurechecker")
                    {
                        <div style="margin-left: -45px;">
                            <button type="button" id="btnapprove" name="command" class="btn btn-success" onclick="CheckerAppClosure()" value="Submit">
                                <span class="glyphicon glyphicon-hand-up" style="color:white;"></span> Approve
                            </button>
                            &nbsp;
                            <button type="button" id="btnreject" class="btn btn-danger" value="Reject" onclick="RejectForClosureChecker()">
                                <span style="color:white;" class="glyphicon glyphicon-hand-down"></span> Reject
                            </button>
                            &nbsp;
                            <button type="button" id="btncancel" class="btn btn-warning" value="Cancel" onclick="BacktoClosureCheckSummary()">
                                <span style="color:white;" class="glyphicon glyphicon-eye-close"></span> Cancel
                            </button>
                        </div>
                    }
                    else if (viewfor == "amend")
                    {
                        <div style="margin-left: -7px;">
                            <button type="button" id="btnapprove" name="command" class="btn btn-success" onclick="SubmitAmendPo()" value="Submit">
                                <span class="glyphicon glyphicon-floppy-saved" style="color:white;"></span> Submit
                            </button>
                            &nbsp;
                            <button type="button" id="btnreject" class="btn btn-warning" value="Cancel" onclick="BacktoPoSummary()">
                                <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span>Cancel
                            </button>
                        </div>
                    }
                </div>
            </td>
        </tr>
    </table>

    <input hidden="hidden" id="ss" value="" />
    <input hidden="hidden" id="potemplate" value="" />
    <input hidden="hidden" id="hid_branch" value="" />
    <input hidden="hidden" id="bulk" value="" />
    <input hidden="hidden" id="hid_excel" value="" />
    <div id="Forshipment"></div>
    <div id="ForExcelVal"></div>
    <div id="ForPOTemplate"></div>
    <div id="BranchDetails1"></div>
</div>
<script type="text/javascript">

    var temp_name = $("#hid_tempname").val();
    $("#temp_name").text(temp_name);

    $("#templateGid").change(function () {
        var templategid = $("#templateGid option:selected").text();

        if (templategid == "--Select--") {
            $("#txtTempContent").val("");
        }
        if ($("#templateGid").val() != "--Select--") {
            var tempGid = $("#templateGid").val();
            if (tempGid.trim() != "") {
                $("#templateGid").removeClass('required');
                $("#templateGid").addClass('valid');
            }
            else {
                $("#templateGid").removeClass('valid');
                $("#templateGid").addClass('required');
            }
            $.ajax({
                url: '@Url.Action("TemplateDetails", "PoRaiserEdit")',
                dataType: 'json',
                data: { id: $(this).val() },
                success: function (msg) {
                    $("#txtTempContent").attr("value", msg);
                    $("#txtTempContent").attr("disabled", true);
                    //if ($("#txtTemplateArea").val() != null || $("#txtTemplateArea").val() != "") {
                    //    $("#txtTemplateArea").addClass("valid");
                    //}
                },
                error: function () { }
            });
        }
    });

    $(document).ready(function () {

        var makerrem_desc = $("#hid_mak_remarks").val();
        $("#desc_maker_id").val(makerrem_desc);
        $("#desc_maker_id").attr("disabled", true);

        $("#txtTempContent").attr("disabled", true);
        $("#txtpodate", "#txtpoendDate").attr("maxlength", "10");
        $("#txtvendornote").attr("maxlength", "256");
        $("#txtporefno").attr('disabled', 'disabled');
        $("#txtpodate", "#txtpoendDate").keypress(function (event) {
            return isDate(event);
        });
        var department = $("#hid_dept").val();
        if (department == "PIP") {
            $("#id_rdapp").attr("checked", false);
            $('[name="it"]').attr("disabled", true);
            //$("#id_dept").attr("disabled", true);
        }
        var itType = $("#hid_itType").val();
        if (itType == 'A') {
            $("#id_rdapp").attr("checked", true);
        }
        else {
            $("#id_rdinfar").attr("checked", true);
        }
        @*var templateContent = '@Model.tempName';
        var additionTemplate = '@Model.additionTemplate';*@
        var additionTemplate = $("#hid_tempaddcontent").val();
        var templateContent = $("#hid_tempcontent").val();
        $('#txtTempContent').val(templateContent);
        //$("#txtTempContent").attr("disabled", true);
        $("#txtTemplateArea1").val(additionTemplate);
        var pickerOpts = {
            changeMonth: true,
            changeYear: true,
            yearRange: '1950:2100',
            currentText: "Now",
            dateFormat: "dd-mm-yy"
        };

        $("#txtpodate").datepicker({

            changeMonth: true,
            changeYear: true,
            yearRange: '1950:2100',
            currentText: "Now",
            dateFormat: "dd-mm-yy",
            maxDate: new Date()

        });

        //$("txtpodate").datepicker(pickerOpts);
        $("#txtpoendDate").change(function () {

            var dt = $('#txtpodate').val();
            var dt2 = $('#txtpoendDate').val();
            var start_date = dt.split('-');
            var startDate = new Date(start_date[2], start_date[1], start_date[0]);
            var end_date = dt2.split('-');
            var endDate = new Date(end_date[2], end_date[1], end_date[0]);
            if (startDate > endDate) {
                jAlert('PO Enddate Should Not be Lesser than PO date', "Error");
                $("#txtpoendDate").val(dt);
            }
        });

        $("#txtpodate").change(function () {
            var dt = $('#txtpodate').val();
            var dt2 = $('#txtpoendDate').val();
            var start_date = dt.split('-');
            var startDate = new Date(start_date[2], start_date[1], start_date[0]);
            var end_date = dt2.split('-');
            var endDate = new Date(end_date[2], end_date[1], end_date[0]);
            if (startDate > endDate) {
                jAlert('PO Enddate Should Not be Lesser than PO date', "Error");
                $("#txtpoendDate").val(dt);
            }
        });

        $("#txtpoendDate").datepicker(pickerOpts);
        $("#ss").val("");
        $("#hid_branch").val("");
        $("#bulk").val("");
        $("#potemplate").val("");
        $("#hid_excel").val("");

    });

    var objTemplate;
    function CreatePoTemplate() {
        if ($('#potemplate').val() == "") {
            $("#potemplate").val("asd");
            objTemplate = $("[id$='ForPOTemplate']");
            objTemplate.dialog({
                autoOpen: false,
                modal: true,
                cache: false,
                show: 'fade-in',
                close: 'fade-out',
            });
        }
        objTemplate.load('@Url.Action("CreatePoTemplate", "PoRaiserEdit")');
        objTemplate.dialog({ title: 'Create Template', width: '892', height: '575' });
        objTemplate.dialog("open");
    }



    function SavePodetails() {
        var podate = $('#txtpodate').val();
        var podetGid = $("#hid_poheadgid").val();
        var poendDate = $('#txtpoendDate').val();
        //var txtraisedby = $('#dropbranch').val();
        var projmanagergid = $("#projmanagergid").val();
        var e = document.getElementById("projmanagergid");
        var selectedmanager = e.options[e.selectedIndex].text;
        var department = $("#txtdepartment").val();
        var vendorName = $("#txtvendorname").val();
        var itType = $("input[name='it']:checked").val();
        var vendorNote = $('#txtvendornote').val();
        var tempgid = $('#templateGid').val();
        //var e = document.getElementById("templateGid");
        //var selectedtemplate = e.options[e.selectedIndex].text;
        var templategid = $("#templateGid option:selected").text();
        var additionTemplate = $("#txtTemplateArea1").val();
        var overTotal = $("#grandtotal").text();
        var uomgid = $("#hid_uomgid").val();
        var prodservgid = $("#hid_prodservgid").val();
        var requestfor = $("#hid_requestfor").val();
        var vendorgid = $("#hid_vendorgid").val();
        var cbfamount = $("#hid_cbfamount").val();
        var cbftotamount = parseFloat(cbfamount);
        var shippedqty = $('#shippedqty').val();
        //var qty = 0;
        //$("#shipmentgrid td").find("input[name=txtshipment]:text").each(function () {
        //    qty += Number($(this).val());
        //    alert(qty);
        //});
        //alert(qty);
        //var actQty = $("#shippedqty").val();
        //alert(actQty);
        //if (parseInt(qty) != parseInt(actQty)) {
        //    jAlert("Shipped Qty Should Match with Raised Qty " + actQty + " ", "Error");
        //    return false;
        //}
        // var podetCount = $("#hid_podetailcount").val();
        //if (parseFloat(overTotal) == 0) {
        //    jAlert("Total Amount cannot be Zero", "Error")
        //    return false;
        //}
        //if (parseInt(podetCount)==0)
        //{
        //    jAlert("There is no line item to Update!", "Error");
        //    return false;
        //}
        if (parseFloat(overTotal) > parseFloat(cbftotamount)) {
            jAlert("Po Amount Exceeds the Actual Amount " + cbftotamount + "", "Error");
            return false;
        }
        if (parseFloat(overTotal) == parseFloat(0) || parseFloat(overTotal) == "" || parseFloat(overTotal) == null) {
            jAlert("Total Amount Cannot be Empty or Zero", "Error");
            return false;
        }
        if (parseFloat(overTotal) == "" || parseFloat(overTotal) == null) {
            jAlert("Total Amount cannot be empty", "Error")
            return false;
        }

        if (podate == null || podate == "") {

            jAlert("Please Select PO Date.", "Error", function (e) {
                $("#txtpodate").focus();
            });
            return false;
        }
        if (poendDate == null || poendDate == "") {

            jAlert("Please Select PO End Date.", "Error", function (e) {
                $("#txtpoendDate").focus();
            });
            return false;
        }
        if (selectedmanager == "--Select--") {

            jAlert("Please Select Project Manager", "Error", function (e) {
                if (e == true) {
                    $("#projmanagergid").focus();
                }
            });
            return false;
        }
        if (department != "PIP") {
            if (itType == null || itType == "") {

                jAlert("Please Select IT Type", "Error");
                return false;
            }
        }
        if (vendorNote == null || vendorNote == "") {

            jAlert("Please Enter Vendor Note", "Error", function (e) {
                if (e == true) {
                    $("#txtvendornote").focus();
                }
            });
            return false;
        }
        if (templategid == "--Select--") {
            jAlert("Please Select PO Template");
            return false;
        }
        else {
            var objpoheader =
            {
                "poheadGid": podetGid,
                "podate": podate,
                "poenddate": poendDate,
                "projmanagergid": projmanagergid,
                "department": department,
                "vendorName": vendorName,
                "itType": itType,
                "vendorNote": vendorNote,
                "templateGid": tempgid,
                "additionTemplate": additionTemplate,
                "overTotal": overTotal,
                "uomgid": uomgid,
                "prodservgid": prodservgid,
                "requestforgid": requestfor,
                "vendorgid": vendorgid,
                "actQuantity": shippedqty
            };
            $.post('@Url.Action("SavePoDetails","PoRaiserEdit")', objpoheader,
               function (data) {
                   if (data == "Updated Successfully") {
                       jAlert("Updated Successfully", "Success", function (e) {
                           if (e == true) {
                               var viewfor = "refresh";
                               location = '@Url.Action("Index", "poheader")?viewfor=' + viewfor;
                           }
                       });
                   }
                   else {
                       jAlert(data, "Error");
                       return false;
                   }
               }, 'json');
        }
    }

    function SavePo() {
        var podate = $('#txtpodate').val();
        var podetGid = $("#hid_poheadgid").val();
        var poendDate = $('#txtpoendDate').val();
        //var txtraisedby = $('#dropbranch').val();
        var projmanagergid = $("#projmanagergid").val();
        var e = document.getElementById("projmanagergid");
        var selectedmanager = e.options[e.selectedIndex].text;
        var department = $("#txtdepartment").val();
        var vendorName = $("#txtvendorname").val();
        var itType = $("input[name='it']:checked").val();
        var vendorNote = $('#txtvendornote').val();
        var tempgid = $('#templateGid').val();
        //var e = document.getElementById("templateGid");
        //var selectedtemplate = e.options[e.selectedIndex].text;
        var templategid = $("#templateGid option:selected").text();
        var additionTemplate = $("#txtTemplateArea1").val();
        var overTotal = $("#grandtotal").text();
        var uomgid = $("#hid_uomgid").val();
        var prodservgid = $("#hid_prodservgid").val();
        var requestfor = $("#hid_requestfor").val();
        var vendorgid = $("#hid_vendorgid").val();
        var action = $("#btn_submit").val();
        var cbfamount = $("#hid_cbfamount").val();
        var cbftotamount = parseFloat(cbfamount);
        //var podetCount = $("#hid_podetailcount").val();
        //if (parseFloat(overTotal) == 0) {
        //    jAlert("Total Amount cannot be Zero", "Error")
        //    return false;
        //}
        //if (parseInt(podetCount) == 0) {
        //    jAlert("There is no line item to Update!", "Error");
        //    return false;
        //}
        //var qty = 0;
        //$("#shipmentgrid td").find("input[name=txtshipment]:text").each(function () {
        //    qty += Number($(this).val());
        //    alert(qty);
        //});
        //var actQty = $("#shippedqty").val();
        //if (parseInt(qty) != parseInt(actQty)) {
        //    jAlert("Shipped Qty Should Match with Raised Qty " + actQty + " ", "Error");
        //    return false;
        //}
        if (parseFloat(overTotal) > parseFloat(cbftotamount)) {
            jAlert("Po Amount Exceeds the Actual Amount " + cbftotamount + "", "Error");
            return false;
        }
        if (parseFloat(overTotal) == 0) {
            jAlert("Total Amount cannot be Zero", "Error")
            return false;
        }
        if (parseFloat(overTotal) == "" || parseFloat(overTotal) == null) {
            jAlert("Total Amount cannot be empty", "Error")
            return false;
        }
        if (podate == null || podate == "") {

            jAlert("Please Select PO Date.", "Error", function (e) {
                $("#txtpodate").focus();
            });
            return false;
        }
        if (poendDate == null || poendDate == "") {

            jAlert("Please Select PO End Date.", "Error", function (e) {
                $("#txtpoendDate").focus();
            });
            return false;
        }
        if (selectedmanager == "--Select--") {

            jAlert("Please Select Project Manager", "Error", function (e) {
                if (e == true) {
                    $("#projmanagergid").focus();
                }
            });
            return false;
        }
        if (itType == null || itType == "") {

            jAlert("Please Select IT Type", "Error");
            return false;
        }
        if (vendorNote == null || vendorNote == "") {

            jAlert("Please Enter Vendor Note", "Error", function (e) {
                if (e == true) {
                    $("#txtvendornote").focus();
                }
            });
            return false;
        }
        if (templategid == "--Select--") {
            jAlert("Please Select PO Template");
            return false;
        }
        else {
            var objpoheader =
            {
                "poheadGid": podetGid,
                "podate": podate,
                "poenddate": poendDate,
                "projmanagergid": projmanagergid,
                "department": department,
                "vendorName": vendorName,
                "itType": itType,
                "vendorNote": vendorNote,
                "templateGid": tempgid,
                "additionTemplate": additionTemplate,
                "overTotal": overTotal,
                "uomgid": uomgid,
                "prodservgid": prodservgid,
                "requestforgid": requestfor,
                "vendorgid": vendorgid,
                "actionName": action
            };

            $.post('@Url.Action("SavePoDetails","PoRaiserEdit")', objpoheader,
               function (data) {
                   if (data != null) {
                       jAlert("Updated Successfully", "Success", function (e) {
                           if (e == true) {
                               var viewfor = "refresh";
                               location = '@Url.Action("Index", "poheader")?viewfor=' + viewfor;
                           }
                       });
                   }
                   else {
                       jAlert("Not Inserted", "Error");
                       return false;
                   }
               }, 'json');
        }
    }
    function BacktoPoSummary() {
        location = '@Url.Action("Index", "poheader")';
    }
    function DeletePoSummary() {
        var pono = $("#txtporefno").val();
        var poheadgid = $("#hid_poheadgid").val();
        jConfirm("Do you want to delete this '" + pono + "'?", "Confirm", function (r) {
            if (r == true) {
                var objdel =
                {
                    "poheadGid": poheadgid,
                };
                $.post('../PoRaiserEdit/PoSummaryDelete', objdel,
                     function (data) {
                         if (data == 0) {
                             return false;
                         }
                         else {
                             jAlert("Po Deleted Successfully", "Success", function (e) {
                                 if (e == true) {
                                     location = '@Url.Action("Index","poheader")';
                                 }
                             });
                         }
                     }, 'json');
            }
        });
    }
    function CancelPoSummary() {
        var pono = $("#txtporefno").val();
        var remarks = $("#desc_id").val();
        var poheadgid = $("#hid_poheadgid").val();
        if (remarks == null || remarks == "") {
            jAlert("Remarks is mandatory", "Error", function (e) {
                if (e == true) {
                    $("#desc_id").focus();
                }
            });
            return false;
        }
        else {
            jConfirm("Do you want to cancel this '" + pono + "'?", "Confirm", function (r) {
                if (r == true) {
                    var objdel =
                    {
                        "remarks": remarks,
                        "poheadGid": poheadgid
                    };
                    $.post('../PoRaiserEdit/PoSummaryCancel', objdel,
                         function (data) {
                             if (data == 0) {
                                 return false;
                             }
                             else {
                                 jAlert("Po Cancelled Successfully", "Success", function (e) {
                                     if (e == true) {
                                         location = '@Url.Action("Index","poheader")';
                                     }
                                 });
                             }
                         }, 'json');
                }
            });
        }
    }
    function ApproveForCancel() {
        var remarks = $("#desc_check_id").val();
        var pocancelgid = $("#hid_pocancelgid").val();
        var poheadgid = $("#hid_poheadgid").val();
        var pono = $("#txtporefno").val();
        //if (remarks == null || remarks == "") {
        //    jAlert("Remarks is mandatory", "Error", function (e) {
        //        if (e == true) {
        //            $("#desc_id").focus();
        //        }
        //    });
        //    return false;
        //}
        //else {
        jConfirm("Do you want to Approve this '" + pono + "' for Cancellation?", "Confirm", function (r) {
            if (r == true) {

                var objCancel =
                {
                    "remarks": remarks,
                    "poCancelGid": pocancelgid,
                    "poheadGid": poheadgid
                };
                @*$.ajax({
                    url: '@Url.Action("PoCancelApprove", "PoCancellation")',
                    type: 'POST',
                    datatype:'json',
                    data: objCancel,
                    success: function (data) {
                        if (data != null)
                           {
                             jAlert("Po Cancelled Successfully", "Success", function (e) {
                              if (e == true) {
                                location = '@Url.Action("PoCheckerSummary","PoCancellation")';
                            }
                        });
                        }
                    },
                    error: function () {
                        jAlert("something seems wrong", "Error");
                    }
                });*@
                $.post('../PoCancellation/PoCancelApprove', objCancel,
                     function (data) {
                         if (data == 0) {
                             return false;
                         }
                         else {
                             jAlert("Po Cancelled Successfully", "Success", function (e) {
                                 if (e == true) {
                                     location = '@Url.Action("PoCheckerSummary","PoCancellation")';
                                 }
                             });
                         }
                     }, 'json');
            }
        });
    }
    //}
    function ApproveForChecker() {
        var remarks = $("#desc_check_id").val();
        //   var pocancelgid = $("#hid_pocancelgid").val();
        var poheadgid = $("#hid_poheadgid").val();
        var pono = $("#txtporefno").val();
        //if (remarks == null || remarks == "") {
        //    jAlert("Remarks is mandatory", "Error", function (e) {
        //        $("#desc_check_id").focus();
        //    });
        //    return false;
        //}
        //else {
        jConfirm("Do you want to Approve this '" + pono + "' ?", "Confirm", function (r) {
            if (r == true) {

                var objCancel =
                {
                    "remarks": remarks,
                    "poheadGid": poheadgid
                };
                @*$.ajax({
                    url: '@Url.Action("PoCancelApprove", "PoCancellation")',
                    type: 'POST',
                    datatype:'json',
                    data: objCancel,
                    success: function (data) {
                        if (data != null)
                        {
                            jAlert("Po Cancelled Successfully", "Success", function (e) {
                                if (e == true) {
                                    location = '@Url.Action("PoCheckerSummary","PoCancellation")';
                                }
                            });
                        }
                    },
                    error: function () {
                        jAlert("something seems wrong", "Error");
                    }
                });*@
                $.post('../PoChecker/PoCheckerApprove', objCancel,
                     function (data) {
                         if (data == 0) {
                             return false;
                         }
                         else {
                             jAlert("Po Approved Successfully", "Success", function (e) {
                                 if (e == true) {
                                     location = '@Url.Action("PoCheckerSummary","PoChecker")';
                                 }
                             });
                         }
                     }, 'json');
            }
        });
    }
    //}
    function RejectForCancel() {
        var remarks = $("#desc_check_id").val();
        var pocancelgid = $("#hid_pocancelgid").val();
        var poheadgid = $("#hid_poheadgid").val();
        var action = "rejected";
        var pono = $("#txtporefno").val();
        if (remarks == null || remarks == "") {
            jAlert("Remarks is Mandatory", "Error", function (e) {
                if (e == true) {
                    $("#desc_check_id").focus();
                }
            });
            return false;
        }
        else {
            jConfirm("Do you want to Reject this '" + pono + "' for Cancellation?", "Confirm", function (r) {
                if (r == true) {
                    var objCancel =
                    {
                        "remarks": remarks,
                        "poCancelGid": pocancelgid,
                        "poheadGid": poheadgid,
                        "viewCancel": action
                    };

                    $.post('../PoCancellation/PoCancelApprove', objCancel,
                         function (data) {
                             if (data == 0) {
                                 return false;
                             }
                             else {
                                 jAlert("Po Rejected Successfully", "Success", function (e) {
                                     if (e == true) {
                                         location = '@Url.Action("PoCheckerSummary","PoCancellation")';
                                     }
                                 });
                             }
                         }, 'json');
                }
            });
        }
    }
    function RejectForChecker() {
        var remarks = $("#desc_check_id").val();
        // var pocancelgid = $("#hid_pocancelgid").val();
        var poheadgid = $("#hid_poheadgid").val();
        var action = "rejected";
        var pono = $("#txtporefno").val();

        if (remarks == null || remarks == "") {
            jAlert("Remarks is Mandatory", "Error", function (e) {
                if (e == true) {
                    $("#desc_check_id").focus();
                }

            });
            return false;
        }
        else {
            jConfirm("Do you want to Reject this '" + pono + "'?", "Confirm", function (r) {
                if (r == true) {
                    var objCancel =
                    {
                        "remarks": remarks,
                        "poheadGid": poheadgid,
                        "viewCancel": action
                    };
                    $.post('../PoChecker/PoCheckerApprove', objCancel,
                         function (data) {
                             if (data == 0) {
                                 return false;
                             }
                             else {
                                 jAlert("Po Rejected Successfully", "Success", function (e) {
                                     if (e == true) {
                                         location = '@Url.Action("PoCheckerSummary","PoChecker")';
                                     }
                                 });
                             }
                         }, 'json');
                }
            });
        }
    }
    function MakerClosure() {
        var remarks = $("#desc_id").val();
        //   var pocancelgid = $("#hid_pocancelgid").val();
        var poheadgid = $("#hid_poheadgid").val();
        var pono = $("#txtporefno").val();
        if (remarks == null || remarks == "") {
            jAlert("Remarks is Mandatory", "Error", function (e) {
                $("#desc_id").focus();
            });
            return false;
        }
        else {
            jConfirm("Do you want to Approve this '" + pono + "' ?", "Confirm", function (r) {
                if (r == true) {
                    var objdel =
                    {
                        "remarks": remarks,
                        "poheadGid": poheadgid,
                    };
                    $.post('@Url.Action("PoSummaryClosure", "PoClosure")', objdel,
                          function (data) {
                              if (data == 0) {
                                  return false;
                              }
                              else {
                                  jAlert("Po Submitted Successfully", "Success", function (e) {
                                      if (e == true) {
                                          location = '@Url.Action("PoClosureSummary","PoClosure")';
                                      }
                                  }); 0
                              }
                          }, 'json');
                }
            });
        }
    }
    function CheckerAppClosure() {
        var remarks = $("#desc_check_id").val();
        var poheadgid = $("#hid_poheadgid").val();
        var pono = $("#txtporefno").val();
        var poclosuregid = $("#hid_poclosuregid").val();
        //if (remarks == null || remarks == "") {
        //    jAlert("Remarks is mandatory", "Error", function (e) {
        //        $("#desc_check_id").focus();
        //    });
        //    return false;
        //}
        //else {
        jConfirm("Do you want to Approve this '" + pono + "' ?", "Confirm", function (r) {
            if (r == true) {
                var objdel =
                {
                    "remarks": remarks,
                    "poheadGid": poheadgid,
                    "poClosureGid": poclosuregid
                };
                $.post('@Url.Action("PoSummaryClosure", "PoClosureChecker")', objdel,
                      function (data) {
                          if (data == 0) {
                              return false;
                          }
                          else {
                              jAlert("Po Closed Successfully", "Success", function (e) {
                                  if (e == true) {
                                      location = '@Url.Action("PoClosureCheckerSummary","PoClosureChecker")';
                                  }
                              });
                          }
                      }, 'json');
            }
        });
        //}
    }
    function BacktoClosureCheckSummary() {
        location = '@Url.Action("PoClosureCheckerSummary", "PoClosureChecker")';
    }
    function BacktoCheckSummary() {
        location = '@Url.Action("PoCheckerSummary", "PoChecker")';
    }
    function BacktoPoCancelSummary() {
        location = '@Url.Action("PoCheckerSummary", "PoCancellation")';
    }

    function SubmitAmendPo() {
        var podate = $('#txtpodate').val();
        var podetGid = $("#hid_poheadgid").val();
        var poendDate = $('#txtpoendDate').val();
        //var txtraisedby = $('#dropbranch').val();
        var projmanagergid = $("#projmanagergid").val();
        var e = document.getElementById("projmanagergid");
        var selectedmanager = e.options[e.selectedIndex].text;
        var department = $("#txtdepartment").val();
        var vendorName = $("#txtvendorname").val();
        var itType = $("input[name='it']:checked").val();
        var vendorNote = $('#txtvendornote').val();
        var tempgid = $('#templateGid').val();
        //var e = document.getElementById("templateGid");
        //var selectedtemplate = e.options[e.selectedIndex].text;
        var templategid = $("#templateGid option:selected").text();
        var additionTemplate = $("#txtTemplateArea1").val();
        var overTotal = $("#grandtotal").text();
        var uomgid = $("#hid_uomgid").val();
        var prodservgid = $("#hid_prodservgid").val();
        var requestfor = $("#hid_requestfor").val();
        var vendorgid = $("#hid_vendorgid").val();
        var action = "amend";

        if (podate == null || podate == "") {

            jAlert("Please Select PO Date.", "Error", function (e) {
                $("#txtpodate").focus();
            });
            return false;
        }
        if (poendDate == null || poendDate == "") {

            jAlert("Please Select PO End Date.", "Error", function (e) {
                $("#txtpoendDate").focus();
            });
            return false;
        }
        if (selectedmanager == "--Select--") {

            jAlert("Please Select Project Manager", "Error", function (e) {
                if (e == true) {
                    $("#projmanagergid").focus();
                }
            });
            return false;
        }
        if (itType == null || itType == "") {

            jAlert("Please Select IT Type", "Error");
            return false;
        }
        if (vendorNote == null || vendorNote == "") {

            jAlert("Please Enter Vendor Note", "Error", function (e) {
                if (e == true) {
                    $("#txtvendornote").focus();
                }
            });
            return false;
        }
        if (templategid == "--Select--") {
            jAlert("Please Select PO Template");
            return false;
        }
        else {
            var objpoheader =
            {
                "poheadGid": podetGid,
                "podate": podate,
                "poenddate": poendDate,
                "projmanagergid": projmanagergid,
                "department": department,
                "vendorName": vendorName,
                "itType": itType,
                "vendorNote": vendorNote,
                "templateGid": tempgid,
                "additionTemplate": additionTemplate,
                "overTotal": overTotal,
                "uomgid": uomgid,
                "prodservgid": prodservgid,
                "requestforgid": requestfor,
                "vendorgid": vendorgid,
                "actionName": action
            };

            $.post('../../PoRaiserEdit/SavePoDetails', objpoheader,
               function (data) {
                   if (data != null) {
                       jAlert("Updated Successfully", "Success", function (e) {
                           if (e == true) {
                               location = '@Url.Action("PoAmendSummary", "PoAmendment")'
                           }
                       });
                   }
                   else {
                       jAlert("Not Inserted", "Error");
                       return false;
                   }
               }, 'json');
        }
    }
    function BacktoClosureCheckSummary() {
        location = '@Url.Action("PoClosureCheckerSummary", "PoClosureChecker")';
    }
    function BacktoClosureSummary() {
        location = '@Url.Action("PoClosureSummary", "PoClosure")';
    }
    function RejectForClosureChecker() {
        var remarks = $("#desc_check_id").val();
        var poheadgid = $("#hid_poheadgid").val();
        var pono = $("#txtporefno").val();
        var poclosuregid = $("#hid_poclosuregid").val();
        var viewfor = "reject";
        if (remarks == null || remarks == "") {
            jAlert("Remarks is Mandatory", "Error", function (e) {
                $("#desc_check_id").focus();
            });
            return false;
        }
        else {
            jConfirm("Do you want to Reject this '" + pono + "' ?", "Confirm", function (r) {
                if (r == true) {
                    var objdel =
                    {
                        "remarks": remarks,
                        "poheadGid": poheadgid,
                        "poClosureGid": poclosuregid,
                        "viewfor": viewfor
                    };
                    $.post('@Url.Action("PoSummaryClosure", "PoClosureChecker")', objdel,
                          function (data) {
                              if (data == 0) {
                                  return false;
                              }
                              else {
                                  jAlert("Po Rejected Successfully", "Success", function (e) {
                                      if (e == true) {
                                          location = '@Url.Action("PoClosureCheckerSummary","PoClosureChecker")';
                                      }
                                  });
                              }
                          }, 'json');
                }
            });

        }
    }

</script>
@model IEM.Areas.FLEXIBUY.Models.pardetailtransfer
@{
    int rowcount = 0;
}
<div class="well">
    <div id="attach">
        <div id="createsupattachment">
            <table class="myTableStyleTabNew" width="100%" align="center">
                <tr>
                    <td style="display:none;">
                        <span>ID</span> <br />
                        @Html.HiddenFor(a => a.pardetailsgid, new { @id = "htmparid" })
                        @Model.pardetailsgid
                    </td>
                </tr>
                <tr>
                    <td style="padding-top:10px;">
                        <span id="lblprod" style="padding-right:10px;">
                            <input type="radio" id="id_rdtransferin" name="modenew" value="I" />
                            Transfer In
                        </span>
                        <span id="lblserv">
                            <input type="radio" id="id_rdtransferout" name="modenew" value="O" checked="checked" />
                            Transfer Out
                        </span>
                    </td>
                </tr>
                <tr>
                    <td>
                        <span id="transferinamount"> Amount</span> <br />
                        <input type="text" name="transferinamount" id="transfer_inamount" class="textboxStyle valid" />
                        @*<input type="text" name="transferinamount" id="transfer_outamount" class="textboxStyle valid" />*@
                    </td>
                </tr>
                @*<tr>
                <td colspan="2">
                    <span id="transferoutamount">Transfer Out Amount</span> <br />
                    <input type="text" name="transferoutamount" id="transfer_outamount" class="textboxStyle valid" />
                </td>&nbsp;&nbsp;&nbsp;&nbsp;

            </tr>*@
                <tr>
                    <td style="padding-top:8px;">
                        @*<input type="button" name="btnSavetransferamount" id="btnSavetransferamount" class="btn btn-primary" value="Save" onclick="Savetransferamount()" />*@
                        <button type="button" id="btnSavetransferamount" class="btn btn-primary" value="Delete" onclick="Savetransferamount()">
                            <span style="color:white;" class="glyphicon glyphicon-floppy-save"></span> Save
                        </button>
                        <button type="button" id="btnclose" class="btn btn-warning" value="btnclear" onclick="transferamountrefresh()">
                            <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span> Cancel
                        </button>
                        @*&nbsp;
                    <button type="button" id="btnclose" class="btn btn-warning" value="Cancel" onclick="transferamountclose()">
                        <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span> Close
                    </button>*@
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">

    var totaltransferinamountdetails = 0;
    // sessionStorage["totaltransferinamountdetails"] = 0;
    $(document).ready(function () {
        //called when key is pressed in textbox
        $("#transfer_inamount").keypress(function (e) {
            //if the letter is not digit then display error and don't type anything
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                //display error message
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
    });
   
    function transferamountrefresh() {
        $("#transfer_inamount").val("");
        objdialogtransferamount.dialog("close");
    }
    function transferamountclose() {

        objdialogtransferamount.dialog("close");
    }

    function Savetransferamount() {
        var totaltransferinamount = 0;
        var transferdetailsamount1 = 0;
        var id = $("#htmparid").val();
        alert($('input:radio[name=modenew]:checked').val());
        if ($('input:radio[name=modenew]:checked').val() == "I") {
            totaltransferinamount = $("#transfer_inamount").val();
            transferdetailsamount1 = 0;
        }
        else {
            transferdetailsamount1 = $("#transfer_inamount").val();
            totaltransferinamount = 0;
        }
        var objtranferdetails =
           {
               "pardetailsgid": id,
               "pardetailstransferinamount": totaltransferinamount,
               "pardetailstransferoutamount": transferdetailsamount1
           };

        $.ajax({
            url: '@Url.Action("transferamountsave1", "partransfer")?' + new Date().getTime(),
            type: 'POST',
            data: objtranferdetails,
            success: function (data) {
                if (data == 1) {
                    sessionStorage.clear();
                }
                if (data == "success") {
                    $.ajax({
                        url: '@Url.Action("loadpardetails", "partransfer")?' + new Date().getTime(),
                        type: 'POST',
                        data: objtranferdetails,
                        success: function (data) {
                            $("#pardetails").empty().append(data);
                        },
                        error: function () {
                            jAlert("Error Occured", "Error");
                        }

                    });
                    var lst = sessionStorage["finallist"];
                   
                }
                if (data == "Err001") {
                    jAlert("Total Transfer In Amount Must Be Less Than Or Equal To TranferOut Amount", "Error");
                    objdialogtransferamount.dialog("open");
                    return false;
                }
                if (data == "Err002") {
                    jAlert("Tranfer Out Amount Should Not Be Greater Than Balanced Amount", "Error");
                    objdialogtransferamount.dialog("open");
                    return false;
                }
            },
            error: function () {
                jAlert("Error Occured", "Error");
            }

        });

        objdialogtransferamount.dialog("close");
    }
</script>
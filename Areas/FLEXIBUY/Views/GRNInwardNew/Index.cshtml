@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/Rmax_Site.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/angular.min.js")" type="text/javascript"></script>
<script src="~/Scripts/asms/ui-bootstrap-tpls-0.11.0.js"></script>
<span class="pageHeading">GRN Inward</span>
<div ng-app="SCNInwardApp">
    <div class="well" ng-controller="SCNINwardController" ng-init="SCnInwardGid=0" style="padding-bottom:50px;">
        <div style="width:100%;">
            <table class="myTableStyleTabNew">
                <tr>
                    <td style="width:15%;" align="center">
                        <input type="hidden" name="txtSCNGid" value="@ViewBag.scngid" />
                        <input type="hidden" name="txtSCNGid" value="{{::SCnInwardGid}}" />
                        <input type="hidden" name="txtBranchType" value="{{::BranchType}}" />
                        <input type="hidden" name="txtProdServiceFlag" value="{{::WOProdServiceFlag}}" />
                        <span>GRN Ref Number</span>
                        <br />
                        <input type="text" class="textboxStyle" disabled="disabled" value="{{SCNRefNumber}}">
                    </td>
                    <td style="width:10%;">
                        <span>GRN Date</span>
                        <br />
                        <input type="text" class="textboxStyle" disabled="disabled" value="{{::SCNDate}}">
                    </td>
                    <td style="width:25%;">
                        <span>Raised By</span>
                        <br />
                        <input type="hidden" name="txtSCNRaiserGid" value="{{::SCNRaiserGid}}" />
                        <input type="text" class="textboxStyle" disabled="disabled" value="{{::SCNRaiserName}}">
                    </td>
                    <td style="width:50%;">
                        <span>Vendor Name</span>
                        <br />
                        <input type="hidden" name="txtSCNVendorGid" value="{{::SCNVendorGid}}" />
                        <input type="text" class="textboxStyle100" disabled="disabled" value="{{::SCNVendorName}}">
                    </td>
                </tr>
                <tr>
                    <td style="width:15%;" align="center">
                        <span>PO Ref Number</span>
                        <br />
                        <input type="hidden" name="txtSCNWOGid" value="@ViewBag.WOGid" />
                        <input type="hidden" value="{{::WOGid}}" />
                        <input type="text" class="textboxStyle" disabled="disabled" value="{{::WORefNumber}}">
                    </td>
                    <td style="width:10%;vertical-align:bottom;">
                        <span>DOC Number</span>
                        <br />
                        <input type="text" class="textboxStyle100" ng-disabled="@ViewBag.viewfor=='1'" id="txtSCNDocNumber" ng-model="SCNDocNumber">
                    </td>
                    <td style="width:25%;">
                        <span>Invoice Number</span>
                        <br />
                        <input type="text" class="textboxStyle100" ng-disabled="@ViewBag.viewfor=='1'" id="txtSCNInvoiceNumber" ng-model="SCNInvoiceNumber">
                    </td>
                    <td style="width:50%;">
                        <span>SCN Description</span>
                        <br />
                        <input type="text" class="textboxStyle100" ng-disabled="@ViewBag.viewfor=='1'" id="txtSCNDescription" ng-model="SCNDescription">
                    </td>
                </tr>
            </table>
        </div>
        <br />
        <div style="width:100%">
            <table class="tableSmall table-bordered table-hover table-responsive" id="checkableGrid">
                <thead>
                    <tr>
                        <th style="width:3%;">
                            S.No
                        </th>
                        <th style="width:10%;cursor:pointer;">
                            <span ng-hide="WOProdServiceFlag =='S'">Product Code</span> <span ng-hide="WOProdServiceFlag =='P'">Service Code</span>
                        </th>
                        <th style="width:13%;cursor:pointer">
                            <span ng-hide="WOProdServiceFlag =='S'">Product Name</span> <span ng-hide="WOProdServiceFlag =='P'">Service Name</span>
                        </th>
                        <th style="width:18%;cursor:pointer">
                            <span ng-hide="WOProdServiceFlag =='S'">Product Description</span> <span ng-hide="WOProdServiceFlag =='P'">Service Description</span>
                        </th>
                        <th style="width:10%;cursor:pointer">
                            Service Month
                        </th>
                        <th style="width:5%;cursor:pointer">
                            Qty
                        </th>
                        <th style="width:10%;cursor:pointer">
                            Amount
                        </th>
                        <th style="width:11%;cursor:pointer">
                            Description
                        </th>
                        <th style="width:5%;" ng-hide="@ViewBag.viewfor =='1'">
                            <input type="checkbox"
                                   id="cbSelectAll">
                        </th>
                        <th style="width:15%;" ng-hide="@ViewBag.viewfor =='1'">
                            Action
                        </th>
                    </tr>
                </thead>
                @*<tbody ng-show="filteredItemsWO > 0" ng-repeat="woparentdetail in woparentdetails | filter:searchwo:strict | orderBy:predicate:reverse | Pagestart:(currentPage-1)*PerPageItems | limitTo:PerPageItems" ng-class="{'selected':$index == selectedRow}" ng-click="setClickedRow($index)">*@
                <tbody ng-show="filteredItemsscn > 0" ng-repeat="scndetail in scndetails">
                    <tr>
                        <td style="width:3%;" align="center">
                            {{$index+1}}
                        </td>
                        <td style="width:10%;">
                            {{scndetail.WOProductCode}}
                        </td>
                        <td style="width:13%;">
                            {{scndetail.WOProductName}}
                        </td>
                        <td style="width:18%;">
                            {{scndetail.WOProdDesc}}
                        </td>
                        <td style="width:10%;">
                            {{scndetail.ServiceMonth}}
                        </td>
                        <td style="width:5%;">
                            <input type="hidden" value="{{scndetail.WOQtyOrg}}" />
                            <span ng-hide="editMode">{{scndetail.WOQty}}</span>

                            <input type="text" name="{{scndetail.WODetailGid}}" id="txtInwardQtyVal"  ng-show="editMode" ng-keyup="CheckQty(scndetail.WOQty,scndetail.WODetailGid)" ng-model="scndetail.WOQty" data-ng-required />
                            <span ng-show="editMode" style="display:none;"> Rows </span><input type="text" style="display:none;" id="{{scndetail.wodetailgid}}" name="txtRowsInwardQty" onkeypress="return isNumberKey(event);" ng-show="editMode" ng-keyup="CheckRows(scndetail.WODetailGid,scndetail.WORows)" ng-model="scndetail.WORows" data-ng-required />
                        </td>
                        <td style="width:10%;">
                            {{scndetail.TotalAmount}}
                        </td>
                        <td style="width:11%;">
                            {{scndetail.WODescription}}
                        </td>
                        <td style="width:5%;" align="center" ng-hide="@ViewBag.viewfor =='1'">
                            <input type="checkbox"
                                   name="ids"
                                   class="chk"
                                   id="{{scndetail.WODetailGid}}"
                                   value="{{scndetail.WODetailGid}}" />
                        </td>
                        <td style="width:15%;text-align:center;" ng-hide="@ViewBag.viewfor =='1'">
                            <a ng-hide="editMode" ng-click="editMode = true; editAppKey(entry,scndetail.SCNReleaseBalanceQty)" title="Edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </a>
                            &nbsp;
                            <a ng-show="editMode" ng-click="editMode = false; saveField(scndetail.WOQty,scndetail.WODetailGid)" title="Save">
                                <span class="glyphicon glyphicon-floppy-save"></span>
                            </a>
                            &nbsp;
                            <a ng-show="editMode" ng-click="editMode = false; cancel(scndetail.WOQty,scndetail.WODetailGid)" title="Cancel">
                                <span class="glyphicon glyphicon-ban-circle"></span>
                            </a>
                            &nbsp;
                            <a ng-click="ShowMaxQty(scndetail.WOQtyOrg,scndetail.SCNReleaseBalanceQty)" title="Maximum Quantity">
                                <span class="glyphicon glyphicon-question-sign"></span>
                            </a>
                        </td>
                    </tr>
                </tbody>
                <tfoot ng-show="filteredItemsscn < 1">
                    <tr>
                        <td colspan="11" style="text-align:center">
                            No Records Found
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
        <br />
        <div style="display:none;" id="divGRNInwardSplit">
            <table class="myTableStyleTabpopup">
                <tr>
                    <td colspan="2">
                        Max Qty<br />
                        <input type="text" id="txtMaxQtyGRN" name="txtMaxQtyGRN" disabled="disabled" />
                    </td>
                </tr>
                <tr>
                    <td>
                        Inward Qty <br /> <input type="text" id="txtInwardQtyGRN" class="textboxStyle100" name="txtInwardQtyGRN" />
                    </td>
                    <td>
                        Rows <br /> <input type="text" id="txtRowsGRN" class="textboxStyle100" name="txtRowsGRN" />
                    </td>
                    <td style="vertical-align:bottom">
                        <button type="button" class="btn-sm btn-primary" ng-click="SaveGRNInward()">
                            <span class="glyphicon glyphicon-ok" style="color:white;"></span>
                            Save
                        </button>
                    </td>
                </tr>
            </table>
        </div>
        <div style="width:100%;text-align:center;">
            <button type="button" ng-hide="@ViewBag.viewfor =='1'" class="btn btn-sm btn-primary" ng-click="SubmitSCNInward()">
                <span class="glyphicon glyphicon-ok" style="color:white;"></span>
                Submit
            </button>
            <button type="button" class="btn btn-sm btn-warning" ng-click="CancelSCNInward()">
                <span class="glyphicon glyphicon-remove-sign" style="color:white;"></span>
                Cancel
            </button>
        </div>
        <input type="hidden" name="hidQty" />
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#cbSelectAll").live("click", function () {
            var ischecked = this.checked;
            $('#checkableGrid').find("input:checkbox").each(function () {
                this.checked = ischecked;
            });
        });
        $("[name=ids]").live("click", function () {
            var totalRows = $("#checkableGrid td :checkbox").length;
            var checked = $("#checkableGrid td :checkbox:checked").length;
            if (checked == totalRows) {
                $("#checkableGrid").find("input:checkbox").each(function () {
                    this.checked = true;
                });
            }
            else {
                $("[id=cbSelectAll]").prop("checked", false);
               // $("#cbSelectAll").removeAttr("checked");
            }
        });
    });
    var myAppSCN = angular.module('SCNInwardApp', ['ui.bootstrap']);

    myAppSCN.config(['$httpProvider', function ($httpProvider) {

        $httpProvider.defaults.headers.common["X-Requested-With"] = 'XMLHttpRequest';


        var antiForgeryToken = document.getElementById('antiForgeryForm').childNodes[1].value;

        $httpProvider.defaults.headers.post['__RequestVerificationToken'] = antiForgeryToken;
    }]);


    myAppSCN.service("scninwardservice", function ($http) {
        this.GetSCNDetailsListNew = function () {
            var wogid = $("[name=txtSCNWOGid]").val();
            var response = $http({
                method: "post",
                url: '@Url.Action("GetGRNHeaderDetails", "GRNInwardNew")?wogid=' + wogid + '&' + new Date().getTime(),
                dataType: "json"
            });
            return response;
        }
        this.GetSCNDetailsListView = function () {
            var scngid = $("[name=txtSCNGid]").val();
            var response = $http({
                method: "post",
                url: '@Url.Action("GetGRNHeaderDetailsView", "GRNInwardNew")?scngid=' + scngid + '&' + new Date().getTime(),
                dataType: "json"
            });
            return response;
        }
        this.AddInwardDetails = function (SCNInwardDetails) {
            var response = $http({
                method: "post",
                data: JSON.stringify(SCNInwardDetails),
                url: '@Url.Action("AddInwardDetails", "GRNInwardNew")?&' + new Date().getTime(),
                dataType: "json"
            });
            return response;
        }
    });
    myAppSCN.controller('SCNINwardController', function ($scope, scninwardservice) {

        GetSCNInwardDetails();
        function GetSCNInwardDetails() {
            var scngid = '@ViewBag.scngid';
            if (scngid != "0")
                $scope.SCnInwardGid = scngid;
            if (scngid == null || scngid == "" || scngid =="0" || scngid == 0) {
                var getData = scninwardservice.GetSCNDetailsListNew();
                getData.then(function (response) {
                    var Data0 = "", Data1 = "";
                    Data0 = JSON.parse(response.data.data0);
                    $scope.WOGid = Data0[0].WOGid;
                    $scope.SCNVendorGid = Data0[0].SCNVendorGid;
                    $scope.SCNVendorName = Data0[0].SCNVendorName;
                    $scope.SCNRaiserName = Data0[0].SCNRaiserName;
                    $scope.SCNDate = Data0[0].SCNDate;
                    $scope.WORefNumber = Data0[0].WORefNumber;
                    $scope.WOProdServiceFlag = Data0[0].WOProdServiceFlag;
                    if (response.data.data1 != null && response.data.data1 != "")
                        Data1 = JSON.parse(response.data.data1);
                    $scope.scndetails = Data1;
                    $scope.filteredItemsscn = $scope.scndetails.length;
                    $scope.BranchType = Data1[0].BranchType;
                }, function () {
                    alert('Error in adding record');
                });
            }
            else {
                var getData = scninwardservice.GetSCNDetailsListView();
                getData.then(function (response) {
                    var Data0 = "", Data1 = "";
                    Data0 = JSON.parse(response.data.data0);
                    $scope.WOGid = Data0[0].WOGid;
                    $scope.SCNVendorGid = Data0[0].SCNVendorGid;
                    $scope.SCNRefNumber = Data0[0].SCNRefNumber;
                    $scope.SCNDocNumber = Data0[0].SCNDocNumber;
                    $scope.SCNInvoiceNumber = Data0[0].SCNInvoiceNumber;
                    $scope.SCNDescription = Data0[0].SCNDescription;
                    $scope.SCNVendorName = Data0[0].SCNVendorName;
                    $scope.SCNRaiserName = Data0[0].SCNRaiserName;
                    $scope.SCNDate = Data0[0].SCNDate;
                    $scope.WORefNumber = Data0[0].WORefNumber;
                    $scope.WOProdServiceFlag = Data0[0].WOProdServiceFlag;
                    if (response.data.data1 != null && response.data.data1 != "")
                        Data1 = JSON.parse(response.data.data1);
                    $scope.scndetails = Data1;
                    $scope.filteredItemsscn = $scope.scndetails.length;
                  //  $scope.BranchType = Data1[0].BranchType;
                }, function () {
                    alert('Error in adding record');
                });
            }
        }

        $scope.SubmitSCNInward = function () {
            var docnum = $scope.SCNDocNumber;
            var invnum = $scope.SCNInvoiceNumber;
            var remarks = $scope.SCNDescription;
            if (docnum == null || docnum == "") {
                jAlert("Please Enter Document Number", "Error", function () {
                    $("[id=txtSCNDocNumber]").focus();
                    return false;
                });
                return false;
            }
            if (invnum == null || invnum == "") {
                jAlert("Please Enter Invoice Number", "Error", function () {
                    $("[id=txtSCNInvoiceNumber]").focus();
                    return false;
                });
                return false;
            }
            if (remarks == null || remarks == "") {
                jAlert("Please Enter Remarks", "Error", function () {
                    $("[id=txtSCNDescription]").focus();
                    return false;
                });
                return false;
            }
            var arr = $('.chk:checked').map(function () {
                return this.value;
            }).get();

            var len1 = arr.length;
            if (len1 < 1) {
                jAlert("Please Select atleast one Detail to inward", "Error", function () {
                    return false;
                });
                return false;
            }
            var receivedqty = new Array();
            var receivedrows = new Array();
            var receivedqty = new Array();
            var isassetserial = new Array();
            for (var j = 0; j < $scope.scndetails.length; j++) {
                for (var k = 0; k < parseInt(len1) ; k++) {
                    if (parseInt(arr[k]) == parseInt($scope.scndetails[j].WODetailGid)) {
                        //receivedqty[j] = $scope.scndetails[j].WODetailGid;
                        receivedqty.push(parseFloat($scope.scndetails[j].WOQty));
                        receivedrows.push(parseInt($scope.scndetails[j].WORows));
                        isassetserial.push($scope.scndetails[j].AssetSerialNo);
                    }
                }
            }
            var branchtype = $("[name=txtBranchType]").val();
            var SCNInwardDetails = {
                WOGid: $scope.WOGid,
                SCNDocNumber: $scope.SCNDocNumber,
                SCNInvoiceNumber: $scope.SCNInvoiceNumber,
                SCNDescription: $scope.SCNDescription,
                SelectedItems: arr,
                ReceivedQty: receivedqty,
                ReceivedRows: receivedrows,
                SCNBranchType: branchtype,
                IsAssetSerial: isassetserial
            };
            var getData = scninwardservice.AddInwardDetails(SCNInwardDetails);
            getData.then(function (response) {
                var ErrorMsg1 = response.data.ErrorMsg;
                if (ErrorMsg1 == "1") {
                    jAlert("Error While Save Details", "Error", function () {
                        return false;
                    });
                }
                else {
                    jAlert("Inward Successful.(Inward Number is : " + ErrorMsg1 + ")", "Success", function () {
                        //location = "../SCNInwardSummary/SCNInwardSummaryIndex?" + new Date().getTime();
                        location = '@Url.Action("GRNInwardSummaryIndex", "GRNInwardSummary")?' + new Date().getTime();
                    });
                }
            }, function () {
                alert('Error while binding shipment details');
            });
        }
        $scope.newField = {};
        $scope.editing = false;
        $scope.editAppKey = function (field, qty) {
            $scope.MaxQty = parseFloat(qty);
            $("[name=hidQty]").val(qty);
            $scope.editing = $scope.scndetails.indexOf(field);
            $scope.newField = angular.copy(field);
        }
        $scope.CheckQty = function (qty,wodetgid) {
            var MaxQty = $("[name=hidQty]").val();
            if (parseFloat(qty) > parseFloat(MaxQty)) {
                jAlert("Entered Qty Exceeds the Released Qty", "Error", function () {
                    $("[name= " + wodetgid + "]").val(MaxQty);
                    for (var i = 0; i < $scope.scndetails.length; i++) {
                        if (parseInt(wodetgid) == $scope.scndetails[i].WODetailGid) {
                            $scope.scndetails[i].WOQty = MaxQty;
                        }
                    }
                    $("[name= " + wodetgid + "]").focus();
                    return false;
                });
            }
            else {
                var output = qty.split('.');
                output = output.shift() + (output.length ? '.' + output.join('') : '');
                $("[name= " + wodetgid + "]").val(output);
            }
        }
        $scope.CheckRows = function (wodetgid, rowsgrn) {
            if (rowsgrn == "" || rowsgrn ==null || rowsgrn == "undefined" || parseInt(rowsgrn) < 1) {
                jAlert("Enter Valid Rows", "Message", function () {
                    $("[id= " + wodetgid + "]").val("1");
                    return false;
                });
                $("[id= " + wodetgid + "]").focus();
                return false;
            }
        }
        $scope.saveField = function (qty,wodetailgid) {
            var MaxQty = $("[name=hidQty]").val();
            if(qty == null || qty =="" || qty =="0"){
                jAlert("Ensure Valid Qty", "Error", function () {
                    $("[name= " + wodetailgid + "]").val(MaxQty);
                    $("[name= " + wodetailgid + "]").focus();
                    return false;
                });
            }
            if ($scope.editing !== false) {
                $scope.scndetails[$scope.editing] = $scope.newField;
                $scope.editing = false;
            }
        };

        $scope.cancel = function (qty, wodetailgid) {
            var MaxQty = $("[name=hidQty]").val();
            if (qty == null || qty == "" || qty == "0") {
                $("[name= " + wodetailgid + "]").val(MaxQty);
            }
            if ($scope.editing !== false) {
                $scope.scndetails[$scope.editing] = $scope.newField;
                $scope.editing = false;
            }
        };
        $scope.ShowMaxQty = function (totalqty, balqty) {
            var recdqty = parseFloat(totalqty) - parseFloat(balqty);
            //var totalqty1 = totalqty.fontcolor("Navy");
            //var balqty1 = balqty.fontcolor("Navy");
            //var recdqty1 = recdqty.fontcolor("Navy");
            recdqty = parseFloat(recdqty).toFixed(2);
            var msg = "Total PO Quantity : " + totalqty + "\n";
               msg += "Inwarded Qty      : " + recdqty + "\n";
               msg += "Balance Qty       : " + balqty ;
            jAlert(msg, "Process Helper", function () {
                return false;
            });
        }
        $scope.CancelSCNInward = function () {
            location = '@Url.Action("GRNInwardSummaryIndex", "GRNInwardSummary")?' + new Date().getTime();
        }
    });
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
    function isDecimalKey(evt) {
        var $txtBox = $(this);
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46)
            return false;
        else {
            var len = $txtBox.val().length;
            var index = $txtBox.val().indexOf('.');

            if (index > 0 && charCode == 46) {
                return false;
            }
            if (index > 0) {
                var charAfterdot = (len + 1) - index;
                if (charAfterdot > 3) {
                    return false;
                }
            }
        }
        return $txtBox; //for chaining
    }
</script>

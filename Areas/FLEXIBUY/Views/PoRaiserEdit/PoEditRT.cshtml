@model IEM.Areas.FLEXIBUY.Models.poraiser
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

@{
    ViewBag.Title = "Po Amendment";
    Layout = "~/Views/Shared/LayoutEmpty.cshtml";
    var viewfor = (string)Session["viewfor"];
    if (viewfor == "edit" || viewfor == "amend")
    {
        ViewBag.viewmode = "";
    }
    else if (viewfor == "view" || viewfor == "cancel" || viewfor == "delete" || viewfor == "checkercancel" || viewfor == "checker" || viewfor == "closure" || viewfor == "closurechecker" || viewfor == "delmat")
    {
        ViewBag.viewmode = "disabled";
    }
    Session["pogid"] = Model.poheadGid;
}
<input type="hidden" id="hid_poheadgid" value="@Model.poheadGid" />

<input type="hidden" id="hid_tempcontent" value="@Model.tempName" />
<input type="hidden" id="hid_tempname" value="@Model.templname" />
<input type="hidden" id="hid_tempaddcontent" value="@Model.additionTemplate" />
<input type="hidden" id="hid_itType" value="@Model.itType">
<input type="hidden" id="hid_mak_remarks" value="@Model.remarks" />
<input type="hidden" id="hid_pocancelgid" value="@Model.poCancelGid" />
<input type="hidden" id="hid_poclosuregid" value="@Model.poClosureGid" />
<input type="hidden" id="hid_dept" value="@Model.department" />
<input type="hidden" id="hid_cbfamount" value="@Model.cbfheadAmount" />
<input type="hidden" id="hid_podetailcount" value="@Model.count" />
<input type="hidden" id="shippedqty" />

<input type="hidden" id="hid_vendorgidedit" value="@Model.vendorgid" />

<div class="well">

    <span style="color: rgb(52, 108, 196);">PO Header</span>

    <br /><br />
    @using (Html.BeginForm())
    {
        <div class="borderStyle panel panel-default ">
            <table class="myTableStyleTabNew" align="center" width="100%">
                <tr>
                    <td style="padding:10px;">
                        <span>PO Ref No</span>
                        <br />
                        <input type="text"
                               name="txtporefno"
                               id="txtporefno"
                               disabled="disabled"
                               value="@Model.porefno"
                               class="textboxStyle valid" />
                    </td>
                    <td style="padding:10px;">
                        <span>PO Date </span>
                        <br />
                        <input type="text"
                               id="txtpodate"
                               maxlength="10"
                               disabled="disabled"
                               value="@Model.podate"
                               class="textboxStyle valid" @ViewBag.viewmode />
                    </td>
                    <td style="padding:10px;">
                        <span>PO End Date </span>
                        <br />
                        <input type="text"
                               id="txtpoendDate"
                               maxlength="10"
                               value="@Model.poenddate"
                               class="textboxStyle valid" @ViewBag.viewmode />
                    </td>
                    <td style="padding:10px;">
                        <span>Raised By</span>
                        <br />
                        <input type="text"
                               name="txtraisedby"
                               id="txtraisedby"
                               disabled="disabled"
                               value="@Model.raisedby"
                               class="textboxStyle valid" @ViewBag.viewmode />
                    </td>
                    <td style="padding:10px;">
                        <span>Project Owner</span>
                        <br />
                        @if (viewfor == "edit")
                        {
                            @Html.DropDownList("projmanagergid", Model.projmanagerList, "--Select--", new { @class = "textboxStyle valid" })
                        }
                        else
                        {
                            @Html.DropDownList("projmanagergid", Model.projmanagerList, "--Select--", new { @class = "textboxStyle valid", @disabled = "disabled" })
                        }

                    </td>
                </tr>
                @*<tr>
                        <td></td>
                    </tr>*@
                <tr>
                    <td style="padding:10px;">
                        <span>Department</span>
                        <br />
                        <input type="text"
                               name="txtdepartment"
                               id="txtdepartment"
                               disabled="disabled"
                               value="@Model.department"
                               class="textboxStyle valid" />
                    </td>
                    <td style="padding:10px;">
                        <span>Vendor Name</span>
                        <br />
                        <input type="text"
                               name="txtvendorname"
                               id="txtvendorname"
                               disabled="disabled"
                               value="@Model.vendorName"
                               class="textboxStyleMedium80 valid" />
                        <button class="glyphicon glyphicon-search" id="search1nm" style="border:none; margin-left:10px;box-shadow : none;font-size: 1.5em;background-color: rgb(245, 245, 245);" name="command1" type="button" onclick="NewSearch()"></button>
                    </td>
                    <td style="padding:10px;">
                        <span>Type</span>
                        <br />
                        <div style="margin-top:5px;">
                            <input type="radio" id="id_rdapp" name="it" value="Application" @ViewBag.viewmode />
                            Application
                            <input type="radio" id="id_rdinfar" name="it" value="Infrastructure" @ViewBag.viewmode />
                            Infrastructure
                        </div>
                    </td>
                    <td nowrap="nowrap" colspan="3" style="padding:10px;">
                        <span>Vendor Note</span>
                        <br />
                        <input type="text"
                               name="txt_vendornote"
                               class="textboxStyleBig valid"
                               id="txtvendornote"
                               value="@Model.vendorNote" @ViewBag.viewmode />
                    </td>
                </tr>
            </table>
        </div>


        <span style="color: rgb(52, 108, 196);">PO Details</span>

        <br /><br />
        <div id="podetailsgrid">
            @if (@ViewBag.podetails != "Second")
            {
                <div>

                    @Html.Partial("PoEditDetails")
                </div>
            }
            else
            {
                <div id="pogrid">

                </div>
            }
        </div>
    }

    <span style="color: rgb(52, 108, 196);">PO Termplate</span>

    <br /><br />
    <table class="myTableStyleTabNew">
        
        <tr>
            <td>
                <span>Terms and Condtions</span>
                <br />
               
                <div>
                    <textarea style="width:1070px;height:344px;resize:none"
                              draggable="false" id="txtTempContent" class="textareaStyle" @ViewBag.viewmode></textarea>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                <span>Additional Terms and Conditions</span>
                <div>
                    <textarea style="width:1070px;height:200px;resize:none" draggable="false" id="txtTemplateArea1" class="textareaStyle" @ViewBag.viewmode></textarea>
                </div>
            </td>
        </tr>
    </table>
   
    <div id="tabsat" style="height:300px;font-size:14px;">
        <ul>
            <li><a href="#tabs-1">Audit Trail</a></li>
        </ul>
        <div id="tabs-1">
            @Html.Partial("tab_auditrail")
        </div>
    </div>
    

    <input hidden="hidden" id="ss" value="" />
    <input hidden="hidden" id="potemplate" value="" />
    <input hidden="hidden" id="hid_branch" value="" />
    <input hidden="hidden" id="bulk" value="" />
    <input hidden="hidden" id="hid_excel" value="" />
    <input hidden="hidden" id="hid_editvendor" value="" />
    <input hidden="hidden" id="hid_employ" value="" />

    <div id="Forshipment"></div>
    <div id="ForExcelVal"></div>
    <div id="ForPOTemplate"></div>
    <div id="BranchDetails1"></div>
    <div id="employeeEditSearch">
        <div id="forvendorselection"></div>
    </div>
    </div>
    <script type="text/javascript">
        function GotoIndexclosed() {
            window.close();
        }
        var objdialogvendor;
        function NewSearch() {

            if ($("#hid_editvendor").val() == "") {
                $("#hid_editvendor").val("vendor");
                objdialogvendor = $("[id$='forvendorselection']");
                objdialogvendor.dialog({
                    autoOpen: false,
                    modal: true,
                    show: 'fade-in',
                    close: 'fade-out',
                    width: 1000,
                    height: 500,
                    cache: false
                });
            }
            objdialogvendor.load('@Url.Action("VendorSelectionEdit", "PoRaiserEdit")?' + new Date().getTime());
            objdialogvendor.dialog({ title: 'Select Vendor' });
            objdialogvendor.dialog("open");
        }
        var temp_name = $("#hid_tempname").val();
        $("#temp_name").text(temp_name);

        $("#templateGid").change(function () {
            var templategid = $("#templateGid option:selected").text();

            if (templategid == "--Select--") {
                $("#txtTempContent").val("");
            }
            if ($("#templateGid").val() != "--Select--") {
                var tempGid = $("#templateGid").val();
                if (tempGid.trim() != "") {
                    $("#templateGid").removeClass('required');
                    $("#templateGid").addClass('valid');
                }
                else {
                    $("#templateGid").removeClass('valid');
                    $("#templateGid").addClass('required');
                }
                $.ajax({
                    url: '@Url.Action("TemplateDetails", "PoRaiserEdit")?' + new Date().getTime(),
                    dataType: 'json',
                    data: { id: $(this).val() },
                    success: function (msg) {
                        if (msg == 0) {
                            jAlert("Error Occured", "Error");
                            return false;
                        }
                        else {
                            $("#txtTempContent").attr("value", msg);
                            $("#txtTempContent").attr("disabled", true);
                        }
                        //if ($("#txtTemplateArea").val() != null || $("#txtTemplateArea").val() != "") {
                        //    $("#txtTemplateArea").addClass("valid");
                        //}
                    },
                    error: function () { }
                });
            }
        });

        $(document).ready(function () {


            var makerrem_desc = $("#hid_mak_remarks").val();
            $("#desc_maker_id").val(makerrem_desc);
            $("#desc_maker_id").attr("disabled", true);

            $("#txtTempContent").attr("disabled", true);
            $("#txtpodate", "#txtpoendDate").attr("maxlength", "10");
            $("#txtvendornote").attr("maxlength", "256");
            $("#txtporefno").attr('disabled', 'disabled');
            $("#txtpodate", "#txtpoendDate").keypress(function (event) {
                return isDate(event);
            });
            var department = $("#hid_dept").val();
            if (department == "PIP") {
                //$("#id_rdapp").attr("checked", false);
                //$("#id_rdinfar").attr("checked", false);
                $('[name="it"]').attr("checked", false);
                $('[name="it"]').attr("disabled", true);
                //$("#id_dept").attr("disabled", true);
            }
            var itType = $("#hid_itType").val();
            if (itType == 'A') {
                $("#id_rdapp").attr("checked", true);
            }
            else if (itType == 'I') {
                $("#id_rdinfar").attr("checked", true);
            }
            @*var templateContent = '@Model.tempName';
        var additionTemplate = '@Model.additionTemplate';*@
            var additionTemplate = $("#hid_tempaddcontent").val();
            var templateContent = $("#hid_tempcontent").val();
            $('#txtTempContent').val(templateContent);
            //$("#txtTempContent").attr("disabled", true);
            $("#txtTemplateArea1").val(additionTemplate);
            var pickerOpts = {
                changeMonth: true,
                changeYear: true,
                yearRange: '1950:2100',
                currentText: "Now",
                dateFormat: "dd-mm-yy"
            };

            $("#txtpodate").datepicker({

                changeMonth: true,
                changeYear: true,
                yearRange: '1950:2100',
                currentText: "Now",
                dateFormat: "dd-mm-yy",
                maxDate: new Date()

            });

            //$("txtpodate").datepicker(pickerOpts);
            $("#txtpoendDate").change(function () {

                var dt = $('#txtpodate').val();
                var dt2 = $('#txtpoendDate').val();
                var start_date = dt.split('-');
                var startDate = new Date(start_date[2], start_date[1], start_date[0]);
                var end_date = dt2.split('-');
                var endDate = new Date(end_date[2], end_date[1], end_date[0]);
                if (startDate > endDate) {
                    jAlert('PO Enddate Should Not be Lesser than PO date', "Error");
                    $("#txtpoendDate").val(dt);
                }
            });

            $("#txtpodate").change(function () {
                var dt = $('#txtpodate').val();
                var dt2 = $('#txtpoendDate').val();
                var start_date = dt.split('-');
                var startDate = new Date(start_date[2], start_date[1], start_date[0]);
                var end_date = dt2.split('-');
                var endDate = new Date(end_date[2], end_date[1], end_date[0]);
                if (startDate > endDate) {
                    jAlert('PO Enddate Should Not be Lesser than PO date', "Error");
                    $("#txtpoendDate").val(dt);
                }
            });

            $("#txtpoendDate").datepicker(pickerOpts);
            $("#ss").val("");
            $("#hid_branch").val("");
            $("#bulk").val("");
            $("#potemplate").val("");
            $("#hid_excel").val("");
            $("#hid_editvendor").val("");

        });

        var objTemplate;
        function CreatePoTemplate() {
            if ($('#potemplate').val() == "") {
                $("#potemplate").val("asd");
                objTemplate = $("[id$='ForPOTemplate']");
                objTemplate.dialog({
                    autoOpen: false,
                    modal: true,
                    cache: false,
                    show: 'fade-in',
                    close: 'fade-out',
                });
            }
            objTemplate.load('@Url.Action("CreatePoTemplate", "PoRaiserEdit")?' + new Date().getTime());
            objTemplate.dialog({ title: 'Create Template', width: '892', height: '575' });
            objTemplate.dialog("open");
        }

        function SavePodetails() {
            var rowcnt = 0;
            var errmsg = "";
            var apperror = "";
            $("#podetailgrid1 tbody tr").each(function () {
                rowcnt = rowcnt + 1;
                var qty =$(this).find('[name=hidquantityvalidation]').val();
                var podetgid1 = $(this).find('[name=hidpodetgidvalidation]').val();

                $.ajax({
                    url: '@Url.Action("CheckShipmentQty", "PoRaiserEdit")?podetgid=' + podetgid1,
                    type: 'POST',
                    cache: false,
                    async: false,
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data == -1) {
                            if (apperror.toString().trim() != "") {
                                apperror += "\nError Occured";
                            }
                            else {
                                apperror += "Error Occured";
                            }
                            //jAlert("Error Occured", "Error", function (u) {
                            //    if (u == true) {
                            //        return false;
                            //    }
                            //});
                        }
                        else {
                            if (parseInt(qty) != parseInt(data)) {
                                if (errmsg.toString().trim() != "") {
                                    errmsg += "\nShipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")";
                                }
                                else {
                                    errmsg += "Shipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")";
                                }

                                //jAlert("Shipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")", "Error", function (u) {
                                //    if (u == true) {
                                //        return false;
                                //    }
                                //});
                            }

                        }
                    },
                    error: function (result) {
                        if (apperror.toString().trim() != "") {
                            apperror += "\nError Occured";
                        }
                        else {
                            apperror += "Error Occured";
                        }

                        //jAlert("Something Went wrong", "Error", function (u) {
                        //    apperror += "Error Occured";
                        //    if (u == true) {
                        //        return false;
                        //    }
                        //});
                    }
                });
            });
            rowcnt = 0;

            $("#podetailgrid tbody tr").each(function () {
                rowcnt = rowcnt + 1;
                var qty1 = $(this).find('[name=hidquantityvalidation1]').val();
                var podetgid2 = $(this).find('[name=hidpodetgidvalidation1]').val();

                $.ajax({
                    url: '@Url.Action("CheckShipmentQty", "PoRaiserEdit")?podetgid=' + podetgid2,
                    type: 'POST',
                    cache: false,
                    async: false,
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data == -1) {
                            if (apperror.toString().trim() != "") {
                                apperror += "\nError Occured";
                            }
                            else {
                                apperror += "Error Occured";
                            }
                            //jAlert("Error Occured", "Error", function (u) {
                            //    if (u == true)
                            //    {
                            //        return false;
                            //    }
                            //});
                        }
                        else {
                            if (parseInt(qty1) != parseInt(data)) {
                                if (errmsg.toString().trim() != "") {
                                    errmsg += "\nShipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")";
                                }
                                else {
                                    errmsg += "Shipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")";
                                }

                                //jAlert("Shipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")", "Error", function (u) {
                                //    if (u == true) {
                                //        return false;
                                //    }
                                //});
                            }
                        }
                    },
                    error: function (result) {
                        if (apperror.toString().trim() != "") {
                            apperror += "\nError Occured";
                        }
                        else {
                            apperror += "Error Occured";
                        }
                        //jAlert("Something Went wrong", "Error", function (u) {
                        //    if (u == true) {
                        //        return false;
                        //    }
                        //});
                    }
                });
            });

            var podate = $('#txtpodate').val();
            var podetGid = $("#hid_poheadgid").val();
            var poendDate = $('#txtpoendDate').val();
            //var txtraisedby = $('#dropbranch').val();
            var projmanagergid = $("#projmanagergid").val();
            var e = document.getElementById("projmanagergid");
            var selectedmanager = e.options[e.selectedIndex].text;
            var department = $("#txtdepartment").val();
            var vendorName = $("#txtvendorname").val();
            var itType = $("input[name='it']:checked").val();
            var vendorNote = $('#txtvendornote').val();
            var tempgid = $('#templateGid').val();
            //var e = document.getElementById("templateGid");
            //var selectedtemplate = e.options[e.selectedIndex].text;
            var templategid = $("#templateGid option:selected").text();
            var additionTemplate = $("#txtTemplateArea1").val();
            var overTotal = $("#grandtotal").text();
            var uomgid = $("#hid_uomgid").val();
            var prodservgid = $("#hid_prodservgid").val();
            var requestfor = $("#hid_requestfor").val();
            var vendorgid = $("#hid_vendorgidedit").val();
            var cbfamount = $("#hid_cbfamount").val();
            var cbftotamount = parseFloat(cbfamount);
            var shippedqty = $('#shippedqty').val();
            //var qty = 0;
            //$("#shipmentgrid td").find("input[name=txtshipment]:text").each(function () {
            //    qty += Number($(this).val());
            //    alert(qty);
            //});
            //alert(qty);
            //var actQty = $("#shippedqty").val();
            //alert(actQty);
            //if (parseInt(qty) != parseInt(actQty)) {
            //    jAlert("Shipped Qty Should Match with Raised Qty " + actQty + " ", "Error");
            //    return false;
            //}
            // var podetCount = $("#hid_podetailcount").val();
            //if (parseFloat(overTotal) == 0) {
            //    jAlert("Total Amount cannot be Zero", "Error")
            //    return false;
            //}
            //if (parseInt(podetCount)==0)
            //{
            //    jAlert("There is no line item to Update!", "Error");
            //    return false;
            //}

            if (errmsg.toString().trim() != "") {
                jAlert(errmsg, "Error", function (u) {
                    return false;
                });
                return false;
            }
            if (apperror.toString().trim() != "") {
                jAlert(apperror, "Error", function (u) {
                    return false;
                });
                return false;
            }
            if (parseFloat(overTotal) > parseFloat(cbftotamount)) {
                jAlert("Po Amount Exceeds the Actual Amount " + cbftotamount + "", "Error");
                return false;
            }
            if (parseFloat(overTotal) == parseFloat(0) || parseFloat(overTotal) == "" || parseFloat(overTotal) == null) {
                jAlert("Total Amount Cannot be Empty or Zero", "Error");
                return false;
            }
            if (parseFloat(overTotal) == "" || parseFloat(overTotal) == null) {
                jAlert("Total Amount cannot be empty", "Error")
                return false;
            }

            if (podate == null || podate == "") {

                jAlert("Please Select PO Date.", "Error", function (e) {
                    $("#txtpodate").focus();
                });
                return false;
            }
            if (poendDate == null || poendDate == "") {

                jAlert("Please Select PO End Date.", "Error", function (e) {
                    $("#txtpoendDate").focus();
                });
                return false;
            }
            if (selectedmanager == "--Select--") {

                jAlert("Please Select Project Manager", "Error", function (e) {
                    if (e == true) {
                        $("#projmanagergid").focus();
                    }
                });
                return false;
            }
            if (department != "PIP") {
                if (itType == null || itType == "") {

                    jAlert("Please Select IT Type", "Error");
                    return false;
                }
            }
            if (vendorNote == null || vendorNote == "") {

                jAlert("Please Enter Vendor Note", "Error", function (e) {
                    if (e == true) {
                        $("#txtvendornote").focus();
                    }
                });
                return false;
            }
            if (templategid == "--Select--") {
                jAlert("Please Select PO Template");
                return false;
            }
            else {
                var objpoheader =
                {
                    "poheadGid": podetGid,
                    "podate": podate,
                    "poenddate": poendDate,
                    "projmanagergid": projmanagergid,
                    "department": department,
                    "vendorName": vendorName,
                    "itType": itType,
                    "vendorNote": vendorNote,
                    "templateGid": tempgid,
                    "additionTemplate": additionTemplate,
                    "overTotal": overTotal,
                    "uomgid": uomgid,
                    "prodservgid": prodservgid,
                    "requestforgid": requestfor,
                    "vendorgid": vendorgid,
                    "actQuantity": shippedqty
                };

                $.post('@Url.Action("SavePoDetails","PoRaiserEdit")', objpoheader,
                   function (data) {
                       if (data == 0) {
                           jAlert("Error Occured", "Error");
                           return false;
                       }
                       else {
                           if (data == "Updated Successfully") {
                               jAlert("Updated Successfully", "Success", function (e) {
                                   if (e == true) {
                                       var viewfor = "refresh";
                                       //location = '@Url.Action("Index", "poheader")?viewfor=' + viewfor;
                                       location = '@Url.Action("Index","flexibuydashboard")?redirect=yes' + '&' + new Date().getTime();
                                   }
                               });
                           }
                           else {
                               jAlert(data, "Error");
                               return false;
                           }
                       }
                   }, 'json');
            }
        }

        function SavePo() {
            var rowcnt = 0;
            var errmsg = "";
            var apperror = "";
            $("#podetailgrid1 tbody tr").each(function () {
                rowcnt = rowcnt + 1;
                var qty = $(this).find('[name=hidquantityvalidation]').val();
                var podetgid1 = $(this).find('[name=hidpodetgidvalidation]').val();

                $.ajax({
                    url: '@Url.Action("CheckShipmentQty", "PoRaiserEdit")?podetgid=' + podetgid1,
                    type: 'POST',
                    cache: false,
                    async: false,
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data == -1) {
                            if (apperror.toString().trim() != "") {
                                apperror += "\nError Occured";
                            }
                            else {
                                apperror += "Error Occured";
                            }
                            //jAlert("Error Occured", "Error", function (u) {
                            //    if (u == true) {
                            //        return false;
                            //    }
                            //});
                        }
                        else {
                            if (parseInt(qty) != parseInt(data)) {
                                if (errmsg.toString().trim() != "") {
                                    errmsg += "\nShipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")";
                                }
                                else {
                                    errmsg += "Shipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")";
                                }

                                //jAlert("Shipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")", "Error", function (u) {
                                //    if (u == true) {
                                //        return false;
                                //    }
                                //});
                            }

                        }
                    },
                    error: function (result) {
                        if (apperror.toString().trim() != "") {
                            apperror += "\nError Occured";
                        }
                        else {
                            apperror += "Error Occured";
                        }

                        //jAlert("Something Went wrong", "Error", function (u) {
                        //    apperror += "Error Occured";
                        //    if (u == true) {
                        //        return false;
                        //    }
                        //});
                    }
                });
            });
            rowcnt = 0;

            $("#podetailgrid tbody tr").each(function () {
                rowcnt = rowcnt + 1;
                var qty1 = $(this).find('[name=hidquantityvalidation1]').val();
                var podetgid2 = $(this).find('[name=hidpodetgidvalidation1]').val();

                $.ajax({
                    url: '@Url.Action("CheckShipmentQty", "PoRaiserEdit")?podetgid=' + podetgid2,
                    type: 'POST',
                    cache: false,
                    async: false,
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data == -1) {
                            if (apperror.toString().trim() != "") {
                                apperror += "\nError Occured";
                            }
                            else {
                                apperror += "Error Occured";
                            }
                            //jAlert("Error Occured", "Error", function (u) {
                            //    if (u == true)
                            //    {
                            //        return false;
                            //    }
                            //});
                        }
                        else {
                            if (parseInt(qty1) != parseInt(data)) {
                                if (errmsg.toString().trim() != "") {
                                    errmsg += "\nShipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")";
                                }
                                else {
                                    errmsg += "Shipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")";
                                }

                                //jAlert("Shipment Qty Not Matched with Raiser Qty (Row Number : " + rowcnt.toString() + ")", "Error", function (u) {
                                //    if (u == true) {
                                //        return false;
                                //    }
                                //});
                            }
                        }
                    },
                    error: function (result) {
                        if (apperror.toString().trim() != "") {
                            apperror += "\nError Occured";
                        }
                        else {
                            apperror += "Error Occured";
                        }
                        //jAlert("Something Went wrong", "Error", function (u) {
                        //    if (u == true) {
                        //        return false;
                        //    }
                        //});
                    }
                });
            });
            var podate = $('#txtpodate').val();
            var podetGid = $("#hid_poheadgid").val();
            var poendDate = $('#txtpoendDate').val();
            //var txtraisedby = $('#dropbranch').val();
            var projmanagergid = $("#projmanagergid").val();
            var e = document.getElementById("projmanagergid");
            var selectedmanager = e.options[e.selectedIndex].text;
            var department = $("#txtdepartment").val();
            var vendorName = $("#txtvendorname").val();
            var itType = $("input[name='it']:checked").val();
            var vendorNote = $('#txtvendornote').val();
            var tempgid = $('#templateGid').val();
            //var e = document.getElementById("templateGid");
            //var selectedtemplate = e.options[e.selectedIndex].text;
            var templategid = $("#templateGid option:selected").text();
            var additionTemplate = $("#txtTemplateArea1").val();
            var overTotal = $("#grandtotal").text();
            var uomgid = $("#hid_uomgid").val();
            var prodservgid = $("#hid_prodservgid").val();
            var requestfor = $("#hid_requestfor").val();
            var vendorgid = $("#hid_vendorgidedit").val();
            var action = $("#btn_submit").val();
            var cbfamount = $("#hid_cbfamount").val();
            var cbftotamount = parseFloat(cbfamount);
            //var podetCount = $("#hid_podetailcount").val();
            //if (parseFloat(overTotal) == 0) {
            //    jAlert("Total Amount cannot be Zero", "Error")
            //    return false;
            //}
            //if (parseInt(podetCount) == 0) {
            //    jAlert("There is no line item to Update!", "Error");
            //    return false;
            //}
            //var qty = 0;
            //$("#shipmentgrid td").find("input[name=txtshipment]:text").each(function () {
            //    qty += Number($(this).val());
            //    alert(qty);
            //});
            //var actQty = $("#shippedqty").val();
            //if (parseInt(qty) != parseInt(actQty)) {
            //    jAlert("Shipped Qty Should Match with Raised Qty " + actQty + " ", "Error");
            //    return false;
            //}

            if (errmsg.toString().trim() != "") {
                jAlert(errmsg, "Error", function (u) {
                    return false;
                });
                return false;
            }
            if (apperror.toString().trim() != "") {
                jAlert(apperror, "Error", function (u) {
                    return false;
                });
                return false;
            }

            if (parseFloat(overTotal) > parseFloat(cbftotamount)) {
                jAlert("Po Amount Exceeds the Actual Amount " + cbftotamount + "", "Error");
                return false;
            }
            if (parseFloat(overTotal) == 0) {
                jAlert("Total Amount cannot be Zero", "Error")
                return false;
            }
            if (parseFloat(overTotal) == "" || parseFloat(overTotal) == null) {
                jAlert("Total Amount cannot be empty", "Error")
                return false;
            }
            if (podate == null || podate == "") {

                jAlert("Please Select PO Date.", "Error", function (e) {
                    $("#txtpodate").focus();
                });
                return false;
            }
            if (poendDate == null || poendDate == "") {

                jAlert("Please Select PO End Date.", "Error", function (e) {
                    $("#txtpoendDate").focus();
                });
                return false;
            }
            if (selectedmanager == "--Select--") {

                jAlert("Please Select Project Manager", "Error", function (e) {
                    if (e == true) {
                        $("#projmanagergid").focus();
                    }
                });
                return false;
            }
            if (department == "IT") {
                if (itType == null || itType == "") {

                    jAlert("Please Select IT Type", "Error");
                    return false;
                }
            }
            if (vendorNote == null || vendorNote == "") {

                jAlert("Please Enter Vendor Note", "Error", function (e) {
                    if (e == true) {
                        $("#txtvendornote").focus();
                    }
                });
                return false;
            }
            if (templategid == "--Select--") {
                jAlert("Please Select PO Template");
                return false;
            }
            else {
                var objpoheader =
                {
                    "poheadGid": podetGid,
                    "podate": podate,
                    "poenddate": poendDate,
                    "projmanagergid": projmanagergid,
                    "department": department,
                    "vendorName": vendorName,
                    "itType": itType,
                    "vendorNote": vendorNote,
                    "templateGid": tempgid,
                    "additionTemplate": additionTemplate,
                    "overTotal": overTotal,
                    "uomgid": uomgid,
                    "prodservgid": prodservgid,
                    "requestforgid": requestfor,
                    "vendorgid": vendorgid,
                    "actionName": action
                };

                $.post('@Url.Action("SavePoDetails","PoRaiserEdit")', objpoheader,
                   function (data) {
                       if (data != null) {
                           jAlert("Updated Successfully", "Success", function (e) {
                               if (e == true) {
                                   var viewfor = "refresh";
                                   //location = '@Url.Action("Index", "poheader")?viewfor=' + viewfor;
                                   location = '@Url.Action("Index","flexibuydashboard")?redirect=yes' + '&' + new Date().getTime();
                               }
                           });
                       }
                       else {
                           jAlert("Not Inserted", "Error");
                           return false;
                       }
                   }, 'json');
            }
        }
        function BacktoPoSummary() {
            //location = '@Url.Action("Index", "poheader")?' + new Date().getTime();
            location = '@Url.Action("Index","flexibuydashboard")?redirect=yes' + '&' + new Date().getTime();
        }
        function DeletePoSummary() {
            var pono = $("#txtporefno").val();
            var poheadgid = $("#hid_poheadgid").val();
            jConfirm("Do you want to delete this '" + pono + "'?", "Confirm", function (r) {
                if (r == true) {
                    var objdel =
                    {
                        "poheadGid": poheadgid,
                    };
                    $.post('../PoRaiserEdit/PoSummaryDelete?' + new Date().getTime(), objdel,
                         function (data) {
                             if (data == 0) {
                                 jAlert("Error Occured", "Error");
                                 return false;
                             }
                             else {
                                 jAlert("Po Deleted Successfully", "Success", function (e) {
                                     if (e == true) {
                                         //location = '@Url.Action("Index","poheader")?' + new Date().getTime();
                                         location = '@Url.Action("Index","flexibuydashboard")?redirect=yes' + '&' + new Date().getTime();
                                     }
                                 });
                             }
                         }, 'json');
                }
            });
        }
        function CancelPoSummary() {
            var pono = $("#txtporefno").val();
            var remarks = $("#desc_id").val();
            var poheadgid = $("#hid_poheadgid").val();
            if (remarks == null || remarks == "") {
                jAlert("Remarks is mandatory", "Error", function (e) {
                    if (e == true) {
                        $("#desc_id").focus();
                    }
                });
                return false;
            }
            else {
                jConfirm("Do you want to cancel this '" + pono + "'?", "Confirm", function (r) {
                    if (r == true) {
                        var objdel =
                        {
                            "remarks": remarks,
                            "poheadGid": poheadgid
                        };
                        $.post('../PoRaiserEdit/PoSummaryCancel?' + new Date().getTime(), objdel,
                             function (data) {
                                 if (data == 0) {
                                     jAlert("Error Occured", "Error");
                                     return false;
                                 }
                                 else {
                                     jAlert("Po Cancelled Successfully", "Success", function (e) {
                                         if (e == true) {
                                             location = '@Url.Action("Index","poheader")?' + new Date().getTime();
                                         }
                                     });
                                 }
                             }, 'json');
                    }
                });
            }
        }
        function ApproveForCancel() {
            var remarks = $("#desc_check_id").val();
            var pocancelgid = $("#hid_pocancelgid").val();
            var poheadgid = $("#hid_poheadgid").val();
            var pono = $("#txtporefno").val();
            //if (remarks == null || remarks == "") {
            //    jAlert("Remarks is mandatory", "Error", function (e) {
            //        if (e == true) {
            //            $("#desc_id").focus();
            //        }
            //    });
            //    return false;
            //}
            //else {
            jConfirm("Do you want to Approve this '" + pono + "' for Cancellation?", "Confirm", function (r) {
                if (r == true) {

                    var objCancel =
                    {
                        "remarks": remarks,
                        "poCancelGid": pocancelgid,
                        "poheadGid": poheadgid
                    };
                    @*$.ajax({
                    url: '@Url.Action("PoCancelApprove", "PoCancellation")',
                    type: 'POST',
                    datatype:'json',
                    data: objCancel,
                    success: function (data) {
                        if (data != null)
                           {
                             jAlert("Po Cancelled Successfully", "Success", function (e) {
                              if (e == true) {
                                location = '@Url.Action("PoCheckerSummary","PoCancellation")';
                            }
                        });
                        }
                    },
                    error: function () {
                        jAlert("something seems wrong", "Error");
                    }
                });*@
                    $.post('../PoCancellation/PoCancelApprove?' + new Date().getTime(), objCancel,
                         function (data) {
                             if (data == 0) {
                                 jAlert("Error Occured", "Error");
                                 return false;
                             }
                             else {
                                 jAlert("Po Cancelled Successfully", "Success", function (e) {
                                     if (e == true) {
                                         //location = '@Url.Action("PoCheckerSummary","PoCancellation")?' + new Date().getTime();
                                         location = '@Url.Action("Index","flexibuydashboard")?redirect=yes' + '&' + new Date().getTime();
                                     }
                                 });
                             }
                         }, 'json');
                }
            });
        }
        //}
        function ApproveForChecker() {
            var remarks = $("#desc_check_id").val();
            //   var pocancelgid = $("#hid_pocancelgid").val();
            var poheadgid = $("#hid_poheadgid").val();
            var pono = $("#txtporefno").val();
            //if (remarks == null || remarks == "") {
            //    jAlert("Remarks is mandatory", "Error", function (e) {
            //        $("#desc_check_id").focus();
            //    });
            //    return false;
            //}
            //else {
            //jConfirm("Do you want to Approve this '" + pono + "' ?", "Confirm", function (r) {
            //    if (r == true) {

                    var objCancel =
                    {
                        "remarks": remarks,
                        "poheadGid": poheadgid
                    };
                    @*$.ajax({
                    url: '@Url.Action("PoCancelApprove", "PoCancellation")',
                    type: 'POST',
                    datatype:'json',
                    data: objCancel,
                    success: function (data) {
                        if (data != null)
                        {
                            jAlert("Po Cancelled Successfully", "Success", function (e) {
                                if (e == true) {
                                    location = '@Url.Action("PoCheckerSummary","PoCancellation")';
                                }
                            });
                        }
                    },
                    error: function () {
                        jAlert("something seems wrong", "Error");
                    }
                });*@
                    $.post('@Url.Action("PoCheckerApprove", "PoChecker")?' + new Date().getTime(), objCancel,
                         function (data) {
                             if (data == 0) {
                                 jAlert("Error Occured", "Error");
                                 return false;
                             }
                             else {
                                 if (data == "success" || data == "Success") {
                                     jAlert("Po Approved Successfully", "Success", function (e) {
                                         if (e == true) {
                                             //location = '@Url.Action("PoCheckerSummary","PoChecker")?' + new Date().getTime();
                                             location = '@Url.Action("Index","flexibuydashboard")?redirect=yes' + '&' + new Date().getTime();
                                         }
                                     });
                                 }
                                 else {

                                     jAlert(data, "Error");
                                     return false;
                                 }
                             }
                         }, 'json');
              //  }
           // });
      }
        //}
        function RejectForCancel() {
            var remarks = $("#desc_check_id").val();
            var pocancelgid = $("#hid_pocancelgid").val();
            var poheadgid = $("#hid_poheadgid").val();
            var action = "rejected";
            var pono = $("#txtporefno").val();
            if (remarks == null || remarks == "") {
                jAlert("Remarks is Mandatory", "Error", function (e) {
                    if (e == true) {
                        $("#desc_check_id").focus();
                    }
                });
                return false;
            }
            else {
                jConfirm("Do you want to Reject this '" + pono + "' for Cancellation?", "Confirm", function (r) {
                    if (r == true) {
                        var objCancel =
                        {
                            "remarks": remarks,
                            "poCancelGid": pocancelgid,
                            "poheadGid": poheadgid,
                            "viewCancel": action
                        };

                        $.post('../PoCancellation/PoCancelApprove', objCancel,
                             function (data) {
                                 if (data == 0) {
                                     jAlert("Error Occured", "Error");
                                     return false;
                                 }
                                 else {
                                     jAlert("Po Rejected Successfully", "Success", function (e) {
                                         if (e == true) {
                                             //location = '@Url.Action("PoCheckerSummary","PoCancellation")?' + new Date().getTime();
                                             location = '@Url.Action("Index","flexibuydashboard")?redirect=yes' + '&' + new Date().getTime();
                                         }
                                     });
                                 }
                             }, 'json');
                    }
                });
            }
        }
        function RejectForChecker() {
            var remarks = $("#desc_check_id").val();
            // var pocancelgid = $("#hid_pocancelgid").val();
            var poheadgid = $("#hid_poheadgid").val();
            var action = "rejected";
            var pono = $("#txtporefno").val();

            if (remarks == null || remarks == "") {
                jAlert("Remarks is Mandatory", "Error", function (e) {
                    if (e == true) {
                        $("#desc_check_id").focus();
                    }

                });
                return false;
            }
            else {
                jConfirm("Do you want to Reject this '" + pono + "'?", "Confirm", function (r) {
                    if (r == true) {
                        var objCancel =
                        {
                            "remarks": remarks,
                            "poheadGid": poheadgid,
                            "viewCancel": action
                        };
                        $.post('../PoChecker/PoCheckerApprove', objCancel,
                             function (data) {
                                 if (data == 0) {
                                     jAlert("Error Occured", "Error");
                                     return false;
                                 }
                                 else {
                                     jAlert("Po Rejected Successfully", "Success", function (e) {
                                         if (e == true) {
                                             //location = '@Url.Action("PoCheckerSummary","PoChecker")?' + new Date().getTime();
                                             location = '@Url.Action("Index","flexibuydashboard")?redirect=yes' + '&' + new Date().getTime();
                                         }
                                     });
                                 }
                             }, 'json');
                    }
                });
            }
        }
        function MakerClosure() {
            var remarks = $("#desc_id").val();
            //   var pocancelgid = $("#hid_pocancelgid").val();
            var poheadgid = $("#hid_poheadgid").val();
            var pono = $("#txtporefno").val();
            if (remarks == null || remarks == "") {
                jAlert("Remarks is Mandatory", "Error", function (e) {
                    $("#desc_id").focus();
                });
                return false;
            }
            else {
                jConfirm("Do you want to Approve this '" + pono + "' ?", "Confirm", function (r) {
                    if (r == true) {
                        var objdel =
                        {
                            "remarks": remarks,
                            "poheadGid": poheadgid,
                        };
                        $.post('@Url.Action("PoSummaryClosure", "PoClosure")', objdel,
                              function (data) {
                                  if (data == 0) {
                                      jAlert("Error Occured", "Error");
                                      return false;
                                  }
                                  else {
                                      jAlert("Po Submitted Successfully", "Success", function (e) {
                                          if (e == true) {
                                              location = '@Url.Action("PoClosureSummary","PoClosure")?' + new Date().getTime();
                                          }
                                      }); 0
                                  }
                              }, 'json');
                    }
                });
            }
        }
        function CheckerAppClosure() {
            var remarks = $("#desc_check_id").val();
            var poheadgid = $("#hid_poheadgid").val();
            var pono = $("#txtporefno").val();
            var poclosuregid = $("#hid_poclosuregid").val();
            //if (remarks == null || remarks == "") {
            //    jAlert("Remarks is mandatory", "Error", function (e) {
            //        $("#desc_check_id").focus();
            //    });
            //    return false;
            //}
            //else {
            jConfirm("Do you want to Approve this '" + pono + "' ?", "Confirm", function (r) {
                if (r == true) {
                    var objdel =
                    {
                        "remarks": remarks,
                        "poheadGid": poheadgid,
                        "poClosureGid": poclosuregid
                    };
                    $.post('@Url.Action("PoSummaryClosure", "PoClosureChecker")', objdel,
                          function (data) {
                              if (data == 0) {
                                  jAlert("Error Occured", "Error");
                                  return false;
                              }
                              else {
                                  jAlert("Po Closed Successfully", "Success", function (e) {
                                      if (e == true) {
                                          location = '@Url.Action("PoClosureCheckerSummary","PoClosureChecker")?' + new Date().getTime();
                                      }
                                  });
                              }
                          }, 'json');
                }
            });
            //}
        }
        function BacktoClosureCheckSummary() {
            location = '@Url.Action("PoClosureCheckerSummary", "PoClosureChecker")?' + new Date().getTime();
        }
        function BacktoCheckSummary() {
            @*location = '@Url.Action("PoCheckerSummary", "PoChecker")?' + new Date().getTime();*@
            location = '@Url.Action("Index","flexibuydashboard")?redirect=yes' + '&' + new Date().getTime();
        }
        function BacktoPoCancelSummary() {
            location = '@Url.Action("PoCheckerSummary", "PoCancellation")?' + new Date().getTime();
        }

        function SubmitAmendPo() {
            var podate = $('#txtpodate').val();
            var podetGid = $("#hid_poheadgid").val();
            var poendDate = $('#txtpoendDate').val();
            //var txtraisedby = $('#dropbranch').val();
            var projmanagergid = $("#projmanagergid").val();
            var e = document.getElementById("projmanagergid");
            var selectedmanager = e.options[e.selectedIndex].text;
            var department = $("#txtdepartment").val();
            var vendorName = $("#txtvendorname").val();
            var itType = $("input[name='it']:checked").val();
            var vendorNote = $('#txtvendornote').val();
            var tempgid = $('#templateGid').val();
            //var e = document.getElementById("templateGid");
            //var selectedtemplate = e.options[e.selectedIndex].text;
            var templategid = $("#templateGid option:selected").text();
            var additionTemplate = $("#txtTemplateArea1").val();
            var overTotal = $("#grandtotal").text();
            var uomgid = $("#hid_uomgid").val();
            var prodservgid = $("#hid_prodservgid").val();
            var requestfor = $("#hid_requestfor").val();
            var vendorgid = $("#hid_vendorgidedit").val();
            var action = "amend";

            if (podate == null || podate == "") {

                jAlert("Please Select PO Date.", "Error", function (e) {
                    $("#txtpodate").focus();
                });
                return false;
            }
            if (poendDate == null || poendDate == "") {

                jAlert("Please Select PO End Date.", "Error", function (e) {
                    $("#txtpoendDate").focus();
                });
                return false;
            }
            if (selectedmanager == "--Select--") {

                jAlert("Please Select Project Manager", "Error", function (e) {
                    if (e == true) {
                        $("#projmanagergid").focus();
                    }
                });
                return false;
            }

            if (department == "IT") {
                if (itType == null || itType == "") {

                    jAlert("Please Select IT Type", "Error");
                    return false;
                }
            }
            if (vendorNote == null || vendorNote == "") {

                jAlert("Please Enter Vendor Note", "Error", function (e) {
                    if (e == true) {
                        $("#txtvendornote").focus();
                    }
                });
                return false;
            }
            if (templategid == "--Select--") {
                jAlert("Please Select PO Template");
                return false;
            }
            else {
                var objpoheader =
                {
                    "poheadGid": podetGid,
                    "podate": podate,
                    "poenddate": poendDate,
                    "projmanagergid": projmanagergid,
                    "department": department,
                    "vendorName": vendorName,
                    "itType": itType,
                    "vendorNote": vendorNote,
                    "templateGid": tempgid,
                    "additionTemplate": additionTemplate,
                    "overTotal": overTotal,
                    "uomgid": uomgid,
                    "prodservgid": prodservgid,
                    "requestforgid": requestfor,
                    "vendorgid": vendorgid,
                    "actionName": action
                };

                $.post('../../PoRaiserEdit/SavePoDetails', objpoheader,
                   function (data) {
                       if (data == 0) {
                           jAlert("Error Occured", "Error");
                           return false;
                       }
                       else {
                           if (data != null) {
                               jAlert("Updated Successfully", "Success", function (e) {
                                   if (e == true) {
                                       location = '@Url.Action("PoAmendSummary", "PoAmendment")'
                                   }
                               });
                           }
                           else {
                               jAlert("Not Inserted", "Error");
                               return false;
                           }
                       }
                   }, 'json');
            }
        }
        function BacktoClosureCheckSummary() {
            location = '@Url.Action("PoClosureCheckerSummary", "PoClosureChecker")?' + new Date().getTime();
        }
        function BacktoClosureSummary() {
            location = '@Url.Action("PoClosureSummary", "PoClosure")?' + new Date().getTime();
        }
        function RejectForClosureChecker() {
            var remarks = $("#desc_check_id").val();
            var poheadgid = $("#hid_poheadgid").val();
            var pono = $("#txtporefno").val();
            var poclosuregid = $("#hid_poclosuregid").val();
            var viewfor = "reject";
            if (remarks == null || remarks == "") {
                jAlert("Remarks is Mandatory", "Error", function (e) {
                    $("#desc_check_id").focus();
                });
                return false;
            }
            else {
                jConfirm("Do you want to Reject this '" + pono + "' ?", "Confirm", function (r) {
                    if (r == true) {
                        var objdel =
                        {
                            "remarks": remarks,
                            "poheadGid": poheadgid,
                            "poClosureGid": poclosuregid,
                            "viewfor": viewfor
                        };
                        $.post('@Url.Action("PoSummaryClosure", "PoClosureChecker")?' + new Date().getTime(), objdel,
                              function (data) {
                                  if (data == 0) {
                                      jAlert("Error Occured", "Error");
                                      return false;
                                  }
                                  else {
                                      jAlert("Po Rejected Successfully", "Success", function (e) {
                                          if (e == true) {
                                              location = '@Url.Action("PoClosureCheckerSummary","PoClosureChecker")?' + new Date().getTime();
                                          }
                                      });
                                  }
                              }, 'json');
                    }
                });

            }
        }
        var currentTab = 0;
        $(function () {
            $("#tabsat").tabs({
                select: function (e, i) {
                    currentTab = i.index;
                }
            });
        });

        function ApproveForDelmat() {
            var remarks = $("#desc_check_id").val();
            //   var pocancelgid = $("#hid_pocancelgid").val();
            var poheadgid = $("#hid_poheadgid").val();
            var pono = $("#txtporefno").val();
            var delmat = "delmat";
            //if (remarks == null || remarks == "") {
            //    jAlert("Remarks is mandatory", "Error", function (e) {
            //        $("#desc_check_id").focus();
            //    });
            //    return false;
            //}
            //else {
            jConfirm("Do you want to Approve this '" + pono + "' ?", "Confirm", function (r) {
                if (r == true) {

                    var objCancel =
                    {
                        "remarks": remarks,
                        "poheadGid": poheadgid,
                        "delmatview": delmat
                    };
                    @*$.ajax({
                    url: '@Url.Action("PoCancelApprove", "PoCancellation")',
                    type: 'POST',
                    datatype:'json',
                    data: objCancel,
                    success: function (data) {
                        if (data != null)
                        {
                            jAlert("Po Cancelled Successfully", "Success", function (e) {
                                if (e == true) {
                                    location = '@Url.Action("PoCheckerSummary","PoCancellation")';
                                }
                            });
                        }
                    },
                    error: function () {
                        jAlert("something seems wrong", "Error");
                    }
                });*@
                    $.post('@Url.Action("PoDelmatApprove", "PoChecker")?' + new Date().getTime(), objCancel,
                         function (data) {
                             if (data == 0) {
                                 jAlert("Error Occured", "Error");
                                 return false;
                             }
                             else {
                                 if (data == "success" || data == "Success") {

                                     jAlert("Po Approved Successfully", "Success", function (e) {
                                         if (e == true) {
                                             @*//location = '@Url.Action("PoCheckerSummary","PoChecker")?' + new Date().getTime();*@
                                             location = '@Url.Action("Index","flexibuydashboard")?redirect=yes' + '&' + new Date().getTime();
                                         }
                                     });
                                 }
                                 else {
                                     jAlert(data, "Error");
                                     return false;

                                 }
                             }
                         }, 'json');
                }
            });
        }
        function RejectForDelmat() {
            var remarks = $("#desc_check_id").val();
            // var pocancelgid = $("#hid_pocancelgid").val();
            var poheadgid = $("#hid_poheadgid").val();
            var action = "rejected";
            var pono = $("#txtporefno").val();

            if (remarks == null || remarks == "") {
                jAlert("Remarks is Mandatory", "Error", function (e) {
                    if (e == true) {
                        $("#desc_check_id").focus();
                    }
                });
                return false;
            }
            else {
                jConfirm("Do you want to Reject this '" + pono + "'?", "Confirm", function (r) {
                    if (r == true) {
                        var objCancel =
                        {
                            "remarks": remarks,
                            "poheadGid": poheadgid,
                            "viewCancel": action
                        };
                        $.post('@Url.Action("PoCheckerApprove", "PoChecker")?' + new Date().getTime(), objCancel,
                             function (data) {
                                 if (data == 0) {
                                     jAlert("Error Occured", "Error");
                                     return false;
                                 }
                                 else {
                                     jAlert("Po Rejected Successfully", "Success", function (e) {
                                         if (e == true) {
                                             //location = '@Url.Action("PoCheckerSummary","PoChecker")?' + new Date().getTime();
                                             location = '@Url.Action("Index","flexibuydashboard")?redirect=yes' + '&' + new Date().getTime();
                                         }
                                     });
                                 }
                             }, 'json');
                    }
                });
            }
        }
        function BacktoFlexidashpo() {

        }
        function RaiseTicket() {
            var refflagname = "PO";
            var itemrefno = $("[id=txtporefno]").val();
            if ($('#potemplate').val() == "") {
                $("#potemplate").val("iem");
                objTemplate = $("[id$='ForPOTemplate']");
                objTemplate.dialog({
                    autoOpen: false,
                    modal: true,
                    cache: false,
                    show: 'fade-in',
                    close: 'fade-out'
                });
            }
            objTemplate.load('../../RaiseTickets/SingleTicketNormal?refname=' + refflagname + '&itemrefno=' + itemrefno + '&' + new Date().getTime());
            objTemplate.dialog({
                title: 'Raise Ticket',
                width: 1100,
                height: 500
            });
            objTemplate.dialog("open");
        }
    </script>

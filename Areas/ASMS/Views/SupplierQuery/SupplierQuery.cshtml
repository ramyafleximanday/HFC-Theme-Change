@model IEM.Areas.ASMS.Models.SupplierQuery
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    //var grid = new WebGrid(canPage: true, canSort: true, rowsPerPage: 10);
    //grid.Bind(Model.qSupplierQueryList, autoSortAndPage: true);
    //grid.Pager(WebGridPagerModes.All);

    var grid = new WebGrid(canPage: false, canSort: false);
    grid.Bind(Model.qSupplierQueryList);
    int rowcount = 0;
}
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/Rmax_Site.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>
<style>
    table, th, td {
        white-space: nowrap;
    }
</style>

<div class="pageHeadingLayout">
    <span class="pageHeading">Supplier Query</span>
</div>

@using (Html.BeginForm())
{
    <div class="well">
        <table class="myTableStyleTabNew" width="100%">
            <tr>
                <td style="width:25%;">
                    <span>Supplier Code</span><br />
                    @Html.TextBoxFor(model => model.qSupplierCode, new { @class = "textboxStyle", @id = "txtSupplierCode" })
                </td>
                <td style="width:25%;">
                    <span>Supplier Name</span><br />
                    @Html.TextBoxFor(model => model.qSupplierName, new { @class = "textboxStyle", @id = "txtSupplierName" })
                </td>
                <td style="width:25%;">
                    <span>Supplier Status </span><br />
                    <select name="ddlqSupplierStatus" id="ddlqSupplierStatus" class="textboxStyle">
                        @foreach (var pitem in ViewBag.Stutasdata)
                        {
                            string selectedValue = "";
                            if (ViewBag.StutasId == pitem.Value)
                            {
                                selectedValue = "selected='selected'";
                            }
                            <option value="@pitem.Value" @selectedValue>@pitem.Text</option>
                        }
                    </select>
                </td>
                <td style="width:25%;">
                    <span>Supplier servicetype </span><br />
                    <select name="ddlservicetypename" id="ddlservicetypename" class="textboxStyle">
                        @foreach (var pitem in ViewBag.Getservicetypey)
                        {
                            string selectedValue = "";
                            if (ViewBag.servicetypename == pitem.Value)
                            {
                                selectedValue = "selected='selected'";
                            }
                            <option value="@pitem.Value" @selectedValue>@pitem.Text</option>
                        }
                    </select>
                </td>
            </tr>
            <tr>
                <td style="width:25%;">
                    <span>Supplier Category </span><br />
                    <select name="ddlcategoryname" id="ddlcategoryname" class="textboxStyle">
                        @foreach (var pitem in ViewBag.Getcategory)
                        {
                            string selectedValue = "";
                            if (ViewBag.categoryId == pitem.Value)
                            {
                                selectedValue = "selected='selected'";
                            }
                            <option value="@pitem.Value" @selectedValue>@pitem.Text</option>
                        }
                    </select>
                </td>
                <td style="width:25%;">
                    <span>Supplier Organizationtype </span><br />
                    <select name="ddlorganizationtypename" id="ddlorganizationtypename" class="textboxStyle">
                        @foreach (var pitem in ViewBag.Getorganizationtype)
                        {
                            string selectedValue = "";
                            if (ViewBag.organizationtypename == pitem.Value)
                            {
                                selectedValue = "selected='selected'";
                            }
                            <option value="@pitem.Value" @selectedValue>@pitem.Text</option>
                        }
                    </select>
                </td>
                @*<td style="width:25%; display:none;">
                        <span>Owner ID</span><br />
                        @Html.TextBoxFor(model => model.employeecode, new { @class = "textboxStyle ", @id = "txtemployeecode" })
                    </td>*@
                <td style="width:25%;">
                    <span>Owner Name</span><br />
                    @Html.TextBoxFor(model => model.employeename, new { @class = "textboxStyle ", @id = "txtemployeename" })
                </td>
                <td style="width:25%;">
                    <span>Request status </span><br />

                    <select class="textboxStyle" name="ddlqRequestStatus" id="ddlqRequestStatus">
                        <option value="0">--Select--</option>
                        <option value="DRAFT">DRAFT</option>
                        <option value="WAITINGFORAPPROVAL">INPROCESS</option>
                        <option value="APPROVED">APPROVED</option>
                        <option value="REJECTED">REJECTED</option>
                        <option value="EXPIRED">EXPIRED</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td style="width:25%;">
                    <span>Action From Date</span><br />
                    @Html.TextBoxFor(model => model.qActionDateFrom, new { @class = "textboxStyle", @id = "txtqactiondate" })
                </td>
                <td style="width:25%;">
                    <span>Action To Date</span><br />
                    @Html.TextBoxFor(model => model.qActiondateTo, new { @class = "textboxStyle", @id = "txtqactionto" })
                </td>
                <td style="width:25%;">
                    <span>Request Type </span><br />
                    @Html.DropDownList("ddlqreuesttype", Model.qRequestTypeList, "--Select--", new { @class = "textboxStyle", @id = "ddlqreuesttype" })
                </td>
                <td style="width:25%;">
                    <span>Department</span><br />
                    @Html.DropDownList("ddlqdepartment", Model.qDepartment, "--Select--", new { @class = "textboxStyle", @id = "ddlqdepartment" })
                </td>

            </tr>
            <tr>
                <td colspan="4" style="text-align:right;">
                    <button type="submit" id="btnRenew" class="btn btn-primary" value="Search" style=" margin-top:10px;"><span style="color:white;" class="glyphicon glyphicon-search"></span> Search</button>
                    <button type="submit" id="btnClear" class="btn btn-primary" value="Clear" style=" margin-top:10px;"><span style="color:white;" class="glyphicon glyphicon-refresh"></span> Clear</button>
                    @*<a class="btn btn-primary glyphicon glyphicon-export" data-modal="" href="../SupplierQuery/Ssamdownloadsexcel" id="DownloadExcel">
                            Excel
                        </a>*@
                    @if (@grid.TotalRowCount != 0)
                    {
                        <button class="btn btn-primary" id="reportDownloadExcel" value="Excel Download" name="command" onclick="Download()" type="button" style="color:white; margin-top:10px;"><span style="color:white;" class="glyphicon glyphicon-export"></span> Excel</button>
                    }
                </td>
            </tr>
        </table>
        <div id="dvgrid" class="table-responsive" style="margin-top:10px;">
            @if (@ViewBag.status == "yes")
            {
                @grid.GetHtml(
                            htmlAttributes: new { id = "gridId" },
                            tableStyle: "tableSmall table-bordered table-hover",
                            columns:
                            grid.Columns(
                            grid.Column("SlNo", style: "slno", format: item => rowcount = rowcount + 1),
                            grid.Column("qSupplierCode", "Supplier Code"),
                            grid.Column("qSupplierName", "Supplier Name"),
                            grid.Column("qCont_startDate", "Contract From", style: "action"),
                            grid.Column("qCont_EndDateNew", "Contract To", style: "action"),
                            grid.Column("categoryname", "Category"),
                            grid.Column("organizationtypename", "Organization type"),
                            grid.Column("servicetypename", "Services"),
                            grid.Column("employeename", "Owner Name"),
                            grid.Column("qSupplierStatus", "Supplier Status"),
                            grid.Column("qDepartmentname", "Department"),
                            grid.Column("qRequeststatus", "Request Status"),
                            grid.Column("qRequestTypeName", "Request Type"),
                            grid.Column(header: "Action", style: "action",
                            format: @<text>
                                <a id="ViewSub"><span onclick="ViewSub(@item.qSupplierheadGid)">View</span></a>
                            </text>)))
            }
            @*@if (Model.qSupplierQueryList.Count == 0)
                {
                    <label style="padding:10px;">Record Not Found</label>
                }
                <div>
                    <div style="text-align:left">Page <b>@(grid.PageIndex + 1)</b> of <b>@grid.PageCount</b> &nbsp;&nbsp; Total Records : <label id="lblDirectorCount">@grid.TotalRowCount</label></div>
                </div>*@
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            "date-uk-pre": function (a) {
                var ukDatea = a.split("-");
                return (ukDatea[2] + ukDatea[1] + ukDatea[0]) * 1;
            },
            "date-uk-asc": function (a, b) {
                return ((a < b) ? -1 : ((a > b) ? 1 : 0));
            },
            "date-uk-desc": function (a, b) {
                return ((a < b) ? 1 : ((a > b) ? -1 : 0));
            }
        });

        $("#txtqactiondate").datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            yearRange: new Date().getFullYear().toString() + ':' + new Date().getFullYear().toString(),
            onClose: function (selectedDate) {
                $("#txtqactionto").datepicker("option", "minDate", selectedDate);
            }
        });
        $("#txtqactionto").datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            yearRange: new Date().getFullYear().toString() + ':' + new Date().getFullYear().toString(),
            onClose: function (selectedDate) {
                $("#txtqactiondate").datepicker("option", "maxDate", selectedDate);
            }
        });

        $("#ddlqSupplierStatus,#ddlservicetypename,#ddlcategoryname,#ddlorganizationtypename,#ddlqRequestStatus,#ddlqreuesttype,#ddlqdepartment").chosen({});
        $("#ddlqSupplierStatus_chosen,#ddlservicetypename_chosen,#ddlcategoryname_chosen,#ddlorganizationtypename_chosen,#ddlqRequestStatus_chosen,#ddlqreuesttype_chosen,#ddlqdepartment_chosen").css("width", "99%");

        $('#gridId tr th:nth-child(14)').addClass("nosort");
        $('#gridId tr th:nth-child(4),#gridId tr th:nth-child(5)').addClass("colDate");
        $('#gridId').dataTable({
            "aoColumnDefs": [{
                "aTargets": ["nosort"],
                "bSortable": false
            },
                {
                    "aTargets": ["colDate"],
                    "bSortable": true,
                    "sType": "date-uk"
                }]
        }).css("width", "99%");

        $("#btnClear").click(function () {
            $('#txtSupplierCode').val('');
            $('#txtSupplierName').val('');
            $('#ddlservicetypename').val('0');
            $('#ddlcategoryname').val('0');
            $('#ddlorganizationtypename').val('0');
            $('#ddlqSupplierStatus').val('0');
            $('#txtemployeecode').val('');
            $('#txtemployeename').val('');

            $('#ddlqRequestStatus').val('0');
            $('#txtqactiondate').val('');
            $('#txtqactionto').val('');
            $('#ddlqreuesttype').val('0');
            $('#ddlqdepartment').val('0');

        });

        $("#btnRenew").click(function () {
            var actdate = $('#txtqactiondate').val();
            if (actdate != '') {
                var acttdate = $('#txtqactionto').val();
                if (acttdate == '') {
                    jAlert('Should be fill Action To date', 'Message');
                    return false;
                }
            }
        });

    });
    function ViewSub(id) {
        location = '../Onboarding/Index?pagefor=5&supid=' + id + '&' + new Date().getTime();
    }

    function Download() {
        location = "../SupplierQuery/Ssamdownloadsexcel";
    }
</script>

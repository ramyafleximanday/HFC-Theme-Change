@model IEM.Areas.ASMS.Models.SupplierActivation
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>
@{
    ViewBag.Title = "SupplierActivation";
    if (@ViewBag.status == "success")
    {
        <script>jAlert('Successfully Activated', "Message"); </script>
    }
}


@using (Html.BeginForm("SupplierActivation", "SupplierActivationQueue", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmID" }))
{
    @*<fieldset>
        <legend>SupplierActivation </legend>*@

    <div class="panel panel-default">
        <table align="center"  >
            <tr style="display:none;">

                <td colspan="4">
                    <span style="font-size:12px;">Supplier HedaerGid </span><br />
                    @Html.TextBoxFor(model => model.Supplierheadergid, new { @class = "textboxStyle", @readonly = "readonly", @id = "txtSupplierheadergid"})
                </td>
                @*<td width="10px"></td>*@
            </tr>
            <tr>
                <td>
                    <span style="font-size:12px;">Supplier Code </span><br />
                    @Html.TextBoxFor(model => model.SupplierCode, new { @class = "textboxStyle", @readonly = "readonly", @id = "txtSupplierCode", @style = "font-size:12px;" })
                </td>
                @*<td width="10px"></td>*@
                <td>
                    <span style="font-size:12px;">Supplier Name </span><br />
                    @Html.TextBoxFor(model => model.SupplierName, new { @class = "textboxStyle", @readonly = "readonly", @id = "txtSupplierName", @placeholder = "SupplierName", @style = "font-size:12px;" })
                </td>
                @*<td width="10px"></td>*@
                <td>
                    <span style="font-size:12px;">From Date </span><br />
                    @*<input id="txtFromDate" type="text" placeholder="dd-mm-yyyy" style="font-size:12px;" class="textboxStyle" name='@Html.NameFor(x=>x.Fromdate)' maxlength="10" value="@Model.Fromdate" readonly>*@
                    <input id="txtFromDate" type="text" placeholder="dd-mm-yyyy" style="font-size:12px;" class="textboxStyle" name='@Html.NameFor(x => x.Fdate)' maxlength="10" value='@Model.Fdate' readonly>
                </td>
                @*<td width="10px"></td>*@
                <td align="right">
                    <span style="font-size:12px;">To Date </span><br />
                    <input id="txtTodate" type="text" class="textboxStyle" placeholder="dd-mm-yyyy" style="font-size:12px;" name='@Html.NameFor(x=>x.Todate)' maxlength="10" value='@Model.Todate' readonly />
                </td>
            </tr>


            @*<tr>
                <td align="right"></td>

            </tr>
            <tr style="height:15px;"><td></td></tr>
            <tr>
                <td align="right" style="padding:5px"><</td>

            </tr>*@
            @*<tr style="height:15px;"><td></td></tr>
            <tr>
                <td align="right" style="padding:5px"></td>

            </tr>
            <tr style="height:15px;"><td></td></tr>
            <tr>
                <td align="right" style="padding:5px"></td>
                <td>

                </td>
            </tr>*@
            <tr style="height:10px;"><td></td></tr>
            <tr>


                <td colspan="2" align="left">
                   
                    <span style="font-size:12px;">Reason for activation </span><br />
                    @*<textarea cols="55" rows="4" style="font-size:12px;" id="txtActiveReason" maxlength="128" name='@Html.NameFor(x=>x.ActiveReason)' value='@Model.ActiveReason' disabled> </textarea>*@
                    @Html.TextAreaFor(model => model.ActiveReason, new { @class = "textboxStyle required", @maxlength = "128", @style = "height:100px;font-size:12px;", @id = "txtActiveReason", @required = "required", @disabled = "true" })
                </td>
                <td colspan="2" align="left">
                    <span style="font-size:12px;">Comments </span><br />
                    @*<textarea cols="55" rows="4" id="txtComments" style="font-size:12px;" name='@Html.NameFor(x=>x.comments)' maxlength="128" value="@Model.comments"> </textarea>*@
                    @Html.TextAreaFor(model => model.comments, new { @class = "textboxStyle ", @maxlength = "128", @style = "height:100px;font-size:12px;" })
                </td>
            </tr>
            @*<tr>
                <td colspan="2" align="center">
                    <a href="#" id="lnkAdd">Add More Attachments" </a>
                    <button id="lnkAdd" value="Add More Attachments"></button></td>
            </tr>*@
            @*<tr>
                <td colspan="2" align="right">
                    <div id="dvAttch">
                        @Html.Partial("Attachments")
                    </div>
                </td>
            </tr>*@
            @*<tr style="height:15px;"><td></td></tr>
            <tr>
                <td align="right" style="padding:5px"></td>

            </tr>
            <tr style="height:15px;"><td></td></tr>
            <tr>
                <td align="right" style="padding:5px"></td>
                <td>
                    @Html.TextBoxFor(model => model.comments, new { @class = "form-control" })

                </td>
            </tr>*@
            @*<tr style="height:15px;"><td></td></tr>*@
            <tr style="height:10px;"><td></td></tr>
            <tr>
                <td colspan="4" align="left">
                    <div>
                        <table align="left">
                            <tr>
                                <td>
                                    @Html.HiddenFor(i => i.FilesToBeUploaded)
                                </td>
                            </tr>
                            <tr style="height:20px;"><td></td></tr>
                            <tr>

                                <td>
                                    <span style="font-size:12px;">Attachments </span>
                                    <div id="uploaders">
                                        @*<input type="file" id="fileToUpload" name="files[]" style="float: left;" multiple />*@
                                        @if (Model.r_status.ToUpper() != "INPROCESS")
                                        {
                                              @*<input id="fileupsupplier" type="file" name="files[]" multiple>*@
                                               @Html.TextBoxFor(m => m.AMyFile, new { id = "fileupsupplier", type = "file" })
                                        }
                                      
                                        <br />
                                        @*<input type="submit" id="Upload" value="Upload" name="upload" />
                                        <br />*@
                                        <span id="spnFile" style="float: left; color: #FF0000"></span>
                                        @Html.ValidationMessage("File")
                                        @Html.Hidden("hdnFileUpload")
                                    </div>
                                </td>

                            </tr>
                            <tr style="height:10px;"><td></td></tr>
                            <tr>
                                <td colspan="2" align="left">
                                    <div class="control-section" style="padding: 0px;">
                                        <div id="selectedFiles"></div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div id="dvAttch" style="font-size:12px;">
                                        @Html.Partial("SupplierAttachments")
                                    </div>
                                </td>
                            </tr>

                        </table>
                    </div>

                    @*<input type="file" id="fuldAttach" class="form-control" multiple="multiple" name='@Html.NameFor(x=>x.AttachFileName)' value="@Model.AttachFileName" />*@


                </td>
            </tr>

            @*<tr style="height:10px;"><td></td></tr>
            <tr>
                <td colspan="4">

                    <div>
                        <table align="center">
                            <tr>
                                <td style="padding:10px;"><span style="font-size:12px;">Approver  :</span></td>
                                <td>

                                    @Html.DropDownList("ddlApprover", Model.ApproverList, new { @class = "textboxStyle", @id = "dropProduct" })
                                </td>
                            </tr>
                            <tr style="height:20px;"><td></td></tr>
                            <tr>

                                <td align="center" colspan="2">
                                    <input type="button" name="Push Approval" value="Push Approval" class="btn btn-primary" />
                                </td>
                            </tr>
                        </table>
                    </div>

                </td>
            </tr>*@
            <tr style="height:10px;"><td></td></tr>
            <tr id="trApproval" style="display:none">
                <td colspan="2" align="center">
                    <div>
                        <table align="center">
                            <tr>
                                <td colspan="2" align="center" style="padding:5px;font-size:12px;">
                                    <span>Approved</span>
                                    @Html.RadioButtonFor(model => model.Approval, "Approval", new { @id = "rtbApproval" })
                                    &nbsp;&nbsp;&nbsp;&nbsp;
                                    <label>Reject</label>
                                    @Html.RadioButtonFor(model => model.Reject, "Reject", new { @id = "rtbReject" })
                                </td>
                            </tr>
                            <tr>
                                <td style="padding:10px"><span>Remarks :</span> </td>
                                <td><textarea cols="30" rows="4" style=" resize:none;width:400px;height:50px" name='@Html.NameFor(x=>x.Remarks)' class="textareaStyle" maxlength="128" value="@Model.Remarks"> </textarea></td>
                            </tr>
                        </table>
                    </div>
                </td>
            </tr>
            @*<tr style="height:15px;"><td></td></tr>*@
        </table>
    </div>
   
         <table align="center">
        <tr>
            <td colspan="4" align="center">
@if (Model.r_status == string.Empty || Model.r_status.ToUpper() == "REJECTED" || Model.CurrenStrage==0)
    {
                <input type="submit" name="btnactivate" id="btnactivate"  value="ACTIVATE" class="btn btn-primary" disabled />
                <input type="submit" name="btnsave" id="btnsave" value="SUBMIT" class="btn btn-primary" style="display:none;" />
                <input type="button" name="BACK" onclick="location.href='@Url.Action("ActivationQueue", "SupplierActivationQueue")'" value="BACK" class="btn btn-primary" />
                @*<input type="button" name="BACK" onclick="location.href='@Url.Action("ActivationApprovalQueue", "SupplierActivationApprovalQueue")'" value="BACK" class="btn btn-primary" />*@
    }
   
            </td>
        </tr>
    </table>
 
  


    @*</fieldset>*@
}
<script src="~/Addons/file-upload/jquery.fileupload.js"></script>
<script src="~/Addons/file-upload/jquery.fileupload-ui.js"></script>
<script src="~/Addons/file-upload/jquery.iframe-transport.js"></script>
<script>
    //  var nowTemp = new Date();
    //var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
    var d = new Date();
    var strDate = d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear();
    var files;
    var storedFiles = [];
    var upc = 0;
    //function valid()
    //{
    //    var from = document.getElementById('txtFromDate').value;
    //    alert(from);
    //    return false;
    //}


    $(function () {
        //alert('hai');
        $(":file").attr('title', '  ');
        var $loading = $('#loadingDiv').hide();

        $("input[id^='fileToUpload']").change(function (e) {
            doReCreate(e);
        });

        selDiv = $("#selectedFiles");
    });

    $(document).ready(function () {
        $("#fileupsupplier").val('');
        $("#txtFromDate").datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: '1950:2100',
            currentText: "Now",
            dateFormat: "dd-mm-yy",
            minDate: new Date()
        });

        //$('#txtActiveReason').change(function () {
        //    // alert('hellow');
        //    // $('#btnactivate').enabled = true;
        //  $('#btnactivate').prop('disabled', false);
        //});
        var element = $("#txtActiveReason").val();
        //alert(element);
        IsMandatory(element);
        $("#txtActiveReason").keyup(function () {
	            IsMandatory(this);
        });
	 $("#txtFromDate").change(function () {
	     IsMandatory(element);
        });
        $("#txtTodate").change(function () {
            IsMandatory(element);
        });
        if ($("#txtActiveReason").val() != "" && $("#txtActiveReason").val() != null) {
            $("#txtActiveReason").removeClass('required');
            $("#txtActiveReason").addClass('valid');
            $('#btnactivate').prop('disabled', false);
        }
        else {
            $("#txtActiveReason").removeClass('valid');
            $("#txtActiveReason").addClass('required');
            $('#btnactivate').prop('disabled', true);
        }
       
        var fromdate = $('#txtFromDate').val();
        var todate = $('#txtTodate').val();
       // alert(fromdate + todate);
        if (fromdate == 0 || fromdate == "" || fromdate == null || fromdate == undefined || txtTodate == 0 || txtTodate == "" || txtTodate == "" || txtTodate == undefined) {
            $(element).removeClass('valid');
            $(element).addClass('required');
            $('#btnactivate').prop('disabled', true);
        }
    });
    $("#btnactivate").live('click', function () {
        debugger;


       
      //  alert($('#txtActiveReason').val());
        $('#txtActiveReason').prop('disabled', false);  //selva 12-02-2021

        if ($('#txtActiveReason').val().trim() == '' || $('#txtActiveReason').val() == null) {
            jAlert('Please Enter Activate Reason', 'Message', function () {
                $('#txtActiveReason').focus();
            });
            //return false;

        }
        //else {
        //    //selva 12-02-2021
        //    $('#txtActiveReason').prop('disabled', false);
        //}
        showProgress();
    });
    function IsMandatory(element) {
        //  var txtval = $(element).val();
        var txtval = element;
        var fromdate = $('#txtFromDate').val();
        var todate = $('#txtTodate').val();
        //alert(fromdate +'-'+ todate + '-' + txtval);
        if (txtval != "" && fromdate != 0 && fromdate != "" && fromdate != null && fromdate != undefined && txtTodate != 0 && txtTodate != "" && txtTodate != "" && txtTodate != undefined) {
            $(element).removeClass('required');
            $(element).addClass('valid');
            $('#btnactivate').prop('disabled', false);
        }
        else {
            $(element).removeClass('valid');
            $(element).addClass('required');
            $('#btnactivate').prop('disabled', true);
        }
    }
    function doReCreate(e) {
        //  alert('hellow');
        upc = upc + 1;
        handleFileSelect(e);
        //  alert('ok');
        $("input[id^='fileToUpload']").hide();

        $('<input>').attr({
            type: 'file',
            multiple: 'multiple',
            id: 'fileToUpload' + upc,
            class: 'fUpload',
            name: 'fileUpload',
            style: 'float: left',
            title: '  ',
            onchange: "doReCreate(event)"

        }).appendTo('#uploaders');
    }


    function handleFileSelect(e) {

        //selDiv.innerHTML = ""; storedFiles = [];
        // alert('welcome');
        selDiv = document.querySelector("#selectedFiles");
        //alert(selDiv);
        if (!e.target.files) return;

        //selDiv.innerHTML = "";
        files = e.target.files;
        //  alert(files);

        for (var i = 0; i < files.length; i++) {
            // alert('yes');
            //if (i == 0) { selDiv.innerHTML = ""; storedFiles = []; }
            var f = files[i];
            //alert(f.name);
            //selDiv.innerHTML += "<div>" + f.name + "<a onclick='removeAtt(this)'> Delete </a></div>";
            storedFiles.push(f.name);
            var sl = i + 1;
            //alert(f.name);
            var rowCount = 1;
            //function addMoreRows(files) {
            rowCount++;
            var recRow = '<div id="rowCount' + sl + '"><tr><td><input name="" value="' + f.name + '" type="text"  maxlength="120" style="margin: 4px 5px 0 5px;"/></td><td><input name="" value="' + strDate + '" type="text" maxlength="120" style="margin: 4px 10px 0 0px;"/></td></tr> <a href="javascript:void(0);" onclick="removeRow(' + sl + ');">Delete</a></div>';
            jQuery('#selectedFiles').append(recRow);
        }
        $('#@Html.IdFor(i => i.FilesToBeUploaded)').val(storedFiles);
        
    }

    function removeRow(removeNum) {
        // alert('hai');
       // alert(removeNum);
        jQuery('#rowCount' + removeNum).remove();

    }

    function removeAtt(t) {

        var serEle = $(t).parent().text().slice(0, -3);
        var index = storedFiles.indexOf(serEle);
        if (index !== -1) {
            storedFiles.splice(index, 1);
        }
        $(t).parent().remove();

        $('#@Html.IdFor(i => i.FilesToBeUploaded)').val(storedFiles);

    }
    $(document).ready(function () {

        $('#fileupsupplier').on('change', function (e) {
            //var files = e.target.files;
            //if (files.length > 0) {
            //    if (window.FormData !== undefined) {
            //        var data = new FormData();
            //        for (var x = 0; x < files.length; x++) {
            //            // alert(files[x].name34);
            //            data.append("temp_" + x, files[x]);
            //        }
            //        $.ajax({
            //            type: "POST",
            //            url: '../SupplierActivationQueue/SupplierAttachments?' + new Date().getTime(),
            //            contentType: false,
            //            processData: false,
            //            data: data,
            //            success: function (result) {
            //               // alert(result);
            //               // alert(result.length);
            //                $("#wgAttachmentsupplier").load('../SupplierActivationQueue/SupplierAttachments?' + new Date().getTime());

            //            },
            //            error: function (xhr, status, p3, p4) {
            //                var err = "Error " + " " + status + " " + p3 + " " + p4;
            //                if (xhr.responseText && xhr.responseText[0] == "{")
            //                    err = JSON.parse(xhr.responseText).Message;
            //                console.log(err);
            //            }
            //        });
            //    } else {
            //        alert("This browser doesn't support HTML5 file uploads!");
            //    }
            //}
        });
        $('#Upload').click(function () {
            var att = $("#fileToUpload").val();
                //alert(att);
                var UserModel =
                 {
                     "FilesToBeUploaded": att

                 };
              //  alert(UserModel);
                $.ajax({
                    url: '../SupplierActivationQueue/SupplierAttachments?' + new Date().getTime(),
                    data: JSON.stringify(UserModel),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        // alert(data);
                        $('#dvAttch').empty().append(data);
                    }
                });
               
            });

        //$('#btnactivate').click(function () {

        //    var txtFromDate = $('#txtFromDate').val();
        //    var txtTodate = $('#txtTodate').val();
        //    var txtActiveReason = $('#txtActiveReason').val();
        //   //// alert(txtFromDate);
        //   //// if (txtFromDate == '') {
        //   ////       jAlert('From Date Should not be empty', "Message");
        //   ////       return false;
        //   //// }
        //   ////if (txtTodate == '') {

        //   ////     jAlert('To Date Should not be empty', "Message");
        //   ////     return false;
        //   //// }

        //   ////if (txtActiveReason == ' ') {
        //   ////     jAlert('Active Reason Should not be empty', "Message");
        //   ////     return false;
        //   //// }
        //});


      //  $('#txtFromDate').val('');
        //$('#btnactivate').disabled();
        // alert($('#FromDate').val());
        $('#txtFromDate').change(function () {
           


            var date1 = $('#txtFromDate').datepicker('getDate');
            var date = new Date(Date.parse(date1));
            date.setDate(date.getDate() + 30);

            // var newDate = date.toDateString();
            var newDate = date.getDate() + "-" + (date.getMonth() + 1) + "-" + date.getFullYear();
           // alert(newDate);

            // $('#txtTodate').val(Todate);
            $('#txtTodate').val(newDate);
           // $('#btnactivate').prop('disabled', false);
            $('#txtActiveReason').prop('disabled', false);
            // alert(Todate);txtActiveReason
        });
       
    });
    //function GetToDate()
    //{

    //}
    $(document).ready(function () {

        //  initSimpleFileUpload();
        initAutoFileUpload();
        //   initFileUploadWithCheckingSize();
        //alert('hai');

    });
    function initAutoFileUpload() {
        'use strict';
        var Attach_list = Attachment_list();
        var Attachment_fomat = Attached_fileformat();
        $('#fileupsupplier').fileupload({

            autoUpload: true, 
            //url: '../SupplierActivationQueue/SupplierAttachments?' + new Date().getTime(),
            url: '../SupplierActivationQueue/SupplierAttachments?' + '&attach=' + Attach_list + '&attaching_format=' + Attachment_fomat,
            dataType: 'json',
            add: function (e, data) {
                var jqXHR = data.submit()
                    .success(function (data, textStatus, jqXHR) {
                        if (data.isUploaded) {
                            jAlert("success");
                         //   jAlert(data.isUploaded);
			 $("#wgAttachmentsupplier").load('../SupplierActivationQueue/SupplierAttachments?' + new Date().getTime());
                        }
                        else {
                            jAlert("Invalid File format !", "Alert");
                        }
                        // alert(data.message);
                       
                    })
                    .error(function (data, textStatus, errorThrown) {
                        if (typeof (data) != 'undefined' || typeof (textStatus) != 'undefined' || typeof (errorThrown) != 'undefined') {
                            alert(textStatus + errorThrown + data);
                        }
                    });
            },
            fail: function (event, data) {
                if (data.files[0].error) {
                    alert(data.files[0].error);
                }
            }
        });
    }
</script>
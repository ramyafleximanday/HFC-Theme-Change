@model IEM.Areas.MASTERS.Models.Entity_taxgst

<link href="@Url.Content("~/Content/RMchosen/chosen.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/RMScript/chosen.jquery.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>
@{
    var viewfor = (string)ViewBag.viewfor;
    if (viewfor == "edit")
    {
        ViewBag.viewmode = "edit";
        ViewBag.rejectmode = "disabled";
    }
    else if (viewfor == "chkedit")
    {
        ViewBag.viewmode = "disabled";
        ViewBag.rejectmode = "disabled";
    }
    else if (viewfor == "view")
    {
        ViewBag.viewmode = "disabled";
    }
    else if (viewfor == "delete")
    {
        ViewBag.viewmode = "disabled";
        ViewBag.deletemode = "disabled";
    }
    else if (viewfor == "reject")
    {
        ViewBag.rejectmode = "edit";
        ViewBag.viewmode = "reject";
    }
    if (@Model.Active == "Y")
    { ViewBag.yes2 = "checked"; }
    else
    { ViewBag.no2 = "checked"; }
}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <table class="myTableStyleTabNew" style="width:100%;">
        <tr>
            <td>
                <input type="hidden" value="@Model.Taxgst_gid" id="Txttaxgstid" />
                <span> Tax Sub Type </span>
                <br />
                <div>
                    @if (ViewBag.viewmode == "disabled")
                    {
                        @Html.DropDownListFor(e => e.Taxsubtypeid, Model.GetTaxsubtype, "--Select Tax Sub Type--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%", @id = "Taxsubtype_gid", @disabled = "disabled" })
                    }
                    else
                    {
                        @Html.DropDownListFor(e => e.Taxsubtypeid, Model.GetTaxsubtype, "--Select Tax Sub Type--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%;", @id = "Taxsubtype_gid", })
                    }
                </div>
            </td>
            <td>
                <span> State </span>
                <br />
                <div>
                    @if (ViewBag.viewmode == "disabled")
                    {
                        @Html.DropDownListFor(e => e.stategid, Model.Getstatelist, "--Select state--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%", @id = "Txtstategid", @disabled = "disabled" })
                    }
                    else
                    {
                        @Html.DropDownListFor(e => e.stategid, Model.Getstatelist, "--Select state--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%", @id = "Txtstategid", })
                    }
                </div>
            </td>
            <td>
                <span> Active </span>
                <br />
                
                    <input type="radio" id="Yes" value="Y" checked="@ViewBag.yes2"  name="Radiotypename3" @ViewBag.viewmode disabled="disabled"   />
                Yes &nbsp;
    <input type="radio" id="No" value="N" checked="@ViewBag.no2" name="Radiotypename3" @ViewBag.viewmode disabled="disabled" >
                No
                

                @*<div>
                      @if (ViewBag.viewmode == "disabled")
                      {
                           @Html.DropDownListFor(e => e.Taxgl_id, Model.Getgllist, "--Select Tax Gl--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%", @id = "Txtglid", @disabled = "disabled" })
                      }
                      else
                      {
                           @Html.DropDownListFor(e => e.Taxgl_id, Model.Getgllist, "--Select Tax Gl--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%", @id = "Txtglid", @disabled = "disabled" })
                      }
                    </div>*@
            </td>
        </tr>
        <tr>
            <td>
                <span>HSN Code </span>
                <br />
                <div>
                    @*@if (ViewBag.viewmode == "disabled")
                        {
                             @Html.DropDownListFor(e => e.hsnid, Model.GetHsncod, "--Select Hsn code--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%", @id = "txthsngid", @disabled = "disabled" })
                        }
                        else
                        {*@
                    @Html.DropDownListFor(e => e.hsnid, Model.GetHsncod, "--Select Hsn code--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%", @id = "txthsngid", @disabled = "disabled" })
                    @*}*@
                </div>
            </td>
            <td>
                <span> HSN Description </span>
                <br />
                <div>
                    @*<input id="hidhsndesc" type="hidden" data-val="true" value="@Model.Hsn_desc" @ViewBag.viewmode class="textboxStyle" readonly="readonly" style="display: block; width:75%;" />*@
                    <textarea id="txthsn_desc" data-val="true" class="textboxStyle" readonly="readonly" style="display: block; width:75%; height:25%">@Model.Hsn_desc </textarea>
                </div>
            </td>
            <td>
                <span> Rate </span>
                <br />
                <div>
@if (ViewBag.viewmode == "disabled")
                    {
                    <input id="Txtrateid" type="text" data-val="true" readonly="readonly" value="@Model.Rate" @ViewBag.viewmode class="textboxStyle required " style="display: block; width:75%;" />
}
else
{
    <input id="Txtrateid" type="text" data-val="true" value="@Model.Rate" @ViewBag.viewmode class="textboxStyle required " style="display: block; width:75%;" />
}
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <span>Input Credit </span>
                <br />
                <div>
@if (ViewBag.viewmode == "disabled")
                    {
                    <input id="Txtcreditid" type="text" data-val="true"  value="@Model.inputcredit" @ViewBag.viewmode class="textboxStyle required " style="display: block;width:75%" />
}
else
{
    <input id="Txtcreditid" type="text" data-val="true" value="@Model.inputcredit" @ViewBag.viewmode class="textboxStyle required " style="display: block;width:75%" />
}
                </div>
            </td>
            <td>
                <span> Input Credit GL </span>
                <br />
                <div>
                    @if (ViewBag.viewmode == "disabled")
                    {
                        @Html.DropDownListFor(e => e.inputcredit_gid, Model.GetglCr, "--Select Credit Gl--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%", @id = "txtcdglid", @disabled = "disabled" })
                    }
                    else
                    {
                        @Html.DropDownListFor(e => e.inputcredit_gid, Model.GetglCr, "--Select Credit Gl--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%", @id = "txtcdglid" })
                    }
                </div>
            </td>
            <td>
                <span> Effective Date From </span>
                <br />
                <div>
@if (ViewBag.viewmode == "disabled")
                    {
                    <input id="txtefdate" type="text" data-val="true" disabled="disabled" readonly="readonly" value="@Model.effective_date" @ViewBag.viewmode class="textboxStyle required " style="display: block; width:75%;" />
}
else
{
    <input id="txtefdate" type="text" data-val="true" value="@Model.effective_date" @ViewBag.viewmode class="textboxStyle required " style="display: block; width:75%;" />
}
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <span> Reverse Charge </span>
                <br />
                <div>
@if (ViewBag.viewmode == "disabled")
                    {
                    <input id="txtrechid" type="text" data-val="true" readonly="readonly" value="@Model.reverse_charge" @ViewBag.viewmode class="textboxStyle required" style="display: block;width:75%;" />
}
else
{
                        <input id="txtrechid" type="text" data-val="true" value="@Model.reverse_charge" @ViewBag.viewmode class="textboxStyle required" style="display: block;width:75%;" />
}
                </div>
            </td>
            <td>
                <span> Reverse Charge GL </span>
                <br />
                <div id="txtTypeName">
                    @if (ViewBag.viewmode == "disabled")
                    {
                        @Html.DropDownListFor(e => e.reversecharge_glid, Model.GetglRe, "--Select Reverse Gl--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%;", @id = "Txtrecrdgid", @disabled = "disabled" })
                    }
                    else
                    {
                        @Html.DropDownListFor(e => e.reversecharge_glid, Model.GetglRe, "--Select Reverse Gl--", new { @class = "fstextbox  chosen-select", @style = "display: block; width:75%;", @id = "Txtrecrdgid" })
                    }
                </div>
            </td>
            <td>
                <span> Effective Date To </span>
                <br />
                <div>
@if (ViewBag.viewmode == "disabled")
                    {
                    <input type="text" id="txteftodate" data-val="true" disabled="disabled" readonly="readonly" value="@Model.effective_todate" @ViewBag.viewmode class="textboxStyle required " style="display: block;width:75%" />
}
else
{
    <input type="text" id="txteftodate" data-val="true" value="@Model.effective_todate" @ViewBag.viewmode class="textboxStyle required " style="display: block;width:75%" />
}
                </div>
            </td>
        </tr>
        <tr>
            @if (@ViewBag.rejectmode == "disabled" && @ViewBag.viewmode!="edit")
            {
                <td></td>
                <td>
                    <span> Remarks </span>
                    <br />
                    <div style="height:100%">
                        <textarea id="Txtremarks" data-val="true" class="textboxStyle required" style="display: block; width:75%; height:75px"> </textarea>
                    </div>
                </td>
            }
            else
            {
                <td>
                    <input type="hidden" id="Txtremarks" value="0" />
                </td>
            }
        </tr>
        <tr>
            <td></td>
            <td>
                @if (@ViewBag.viewmode == "disabled" && @ViewBag.rejectmode == "disabled")
                {
                    <button type="button" id="btnsave" disabled="disabled" class="btn btn-primary" onclick="Approve_gsttax()" value="Save" style="margin-top:20px;">
                        <span class="glyphicon glyphicon-floppy-disk" style="color:white;"></span> Approve
                    </button>
                    <button type="button" id="btnrej" class="btn btn-danger" value="Reject" onclick="Reject_Gsttax()" style="margin-top:20px;">
                        <span class="glyphicon glyphicon-floppy-disk" style="color:white;"></span> Reject
                    </button>
                }
                @if (@ViewBag.rejectmode == "edit" || @ViewBag.viewmode == "edit")
                {
                    <button type="button" id="btnsave" disabled="disabled" class="btn btn-primary" onclick="Udate_gsttax()" value="Save" style="margin-top:20px;">
                        <span class="glyphicon glyphicon-floppy-disk" style="color:white;"></span> Update
                    </button>
                    <button type="button" value="Cancel" class="btn btn-warning" onclick="goToIndex()" style="margin-top:20px;">
                        <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span> Cancel
                    </button>
                }
                @if (@ViewBag.deletemode == "disabled")
                {
                    <button type="button" value="Delete" class="btn btn-danger" onclick="DeleteType()" style="margin-top:20px;">
                        <span style="color:white;" class="glyphicon glyphicon-trash"></span> Delete
                    </button>
                }
                @if (@ViewBag.viewmode == "" || @ViewBag.deletemode == "disabled")
                {
                    <button type="button" value="Cancel" class="btn btn-warning" onclick="goToIndex()" style="margin-top:20px;">
                        <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span> Cancel
                    </button>
                }
                else if (@ViewBag.viewmode == "disabled")
                {
                    <button type="button" value="Cancel" class="btn btn-warning" onclick="goToIndex()" style="margin-top:20px; margin-left:20%">
                        <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span> Close
                    </button>
                }

            </td>
        </tr>
    </table>
}
<script type="text/javascript">
    $(document).ready(function () {
        $("#Taxsubtype_gid").chosen({});
        $("#Txtstategid").chosen({});
        //$("#Txtglid").chosen({});
        $("#txthsngid").chosen({});
        $("#txtcdglid").chosen({});
        $("#Txtrecrdgid").chosen({});
        $("#Taxsubtype_gid_chosen, #Txtstategid_chosen,#Txtglid_chosen,#txthsngid_chosen, #txtcdglid_chosen,#Txtrecrdgid_chosen").addClass("mychosen").css('width', '75%');

        $("#txteftodate").datepicker({
            // changeMonth: true,
            // changeYear: true,
            //maxDate: '-id',
            dateFormat: 'dd-mm-yy',
        });
        $("#txtefdate").datepicker({
            changeMonth: true,
            changeYear: true,
            maxDate: '-id',
            dateFormat: 'dd-mm-yy',
        });
        $("#txtrechid").keypress(function (event) {
            if (event.shiftKey == true) {
                event.preventDefault();
            }
            if ((event.keyCode >= 48 && event.keyCode <= 57) ||
                //(event.keyCode >= 96 && event.keyCode <= 105) ||
                event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 ||
                event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190) {
            } else {
                event.preventDefault();
            }
            if ($(this).val().indexOf('.') !== -1 && event.keyCode == 190)
                event.preventDefault();
            //if a decimal has been added, disable the "."-button

        });

        $("#Txtcreditid").keypress(function (event) {
            if (event.shiftKey == true) {
                event.preventDefault();
            }
            if ((event.keyCode >= 48 && event.keyCode <= 57) ||
                //(event.keyCode >= 96 && event.keyCode <= 105) ||
                event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 ||
                event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190) {
            } else {
                event.preventDefault();
            }
            if ($(this).val().indexOf('.') !== -1 && event.keyCode == 190)
                event.preventDefault();
            //if a decimal has been added, disable the "."-button

        });
        $("#Txtrateid").keypress(function (event) {
            if (event.shiftKey == true) {
                event.preventDefault();
            }
            if ((event.keyCode >= 48 && event.keyCode <= 57) ||
                //(event.keyCode >= 96 && event.keyCode <= 105) ||
                event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 ||
                event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190) {
            } else {
                event.preventDefault();
            }
            if ($(this).val().indexOf('.') !== -1 && event.keyCode == 190)
                event.preventDefault();
            //if a decimal has been added, disable the "."-button

        });
        var effdate = $("#txtefdate").val();
        if (effdate.trim() != "") {
            $("#txtefdate").removeClass('required');
            $("#txtefdate").addClass('valid');
        }
        else {
            $("#txtefdate").removeClass('valid');
            $("#txtefdate").addClass('required');
        }
        var efftodate = $("#txteftodate").val();
        if (efftodate.trim() != "") {
            $("#txteftodate").removeClass('required');
            $("#txteftodate").addClass('valid');
        }
        else {
            $("#txteftodate").removeClass('valid');
            $("#txteftodate").addClass('required');
        }
        var revchar = $("#txtrechid").val();
        if (revchar.trim() != "") {
            $("#txtrechid").removeClass('required');
            $("#txtrechid").addClass('valid');
        }
        else {
            $("#txtrechid").removeClass('valid');
            $("#txtrechid").addClass('required');
        }
        var taxrate = $("#Txtrateid").val();
        if (taxrate.trim() != "") {
            $("#Txtrateid").removeClass('required');
            $("#Txtrateid").addClass('valid');
        }
        else {
            $("#Txtrateid").removeClass('valid');
            $("#Txtrateid").addClass('required');
        }
        var cridinp = $("#Txtcreditid").val();
        if (cridinp.trim() != "") {
            $("#Txtcreditid").removeClass('required');
            $("#Txtcreditid").addClass('valid');
        }
        else {
            $("#Txtcreditid").removeClass('valid');
            $("#Txtcreditid").addClass('required');
        }
        var txtremark = $("#Txtremarks").val();
        if (txtremark.trim() != "") {
            $("#Txtremarks").removeClass('required');
            $("#Txtremarks").addClass('valid');
        }
        else {
            $("#Txtremarks").removeClass('valid');
            $("#Txtremarks").addClass('required');
        }
        CheckFieldsHeader();
    });
    $("#txtefdate").change(function () {
        var txtSupplierName = $("#txtefdate").val();
        if (txtSupplierName.trim() != "") {
            $("#txtefdate").removeClass('required');
            $("#txtefdate").addClass('valid');
        }
        else {
            $("#txtefdate").removeClass('valid');
            $("#txtefdate").addClass('required');
        }
        CheckFieldsHeader();
    });
    $("#txtrechid").keyup(function () {
        var txtSupplierName = $("#txtrechid").val();
        if (txtSupplierName.trim() != "") {
            $("#txtrechid").removeClass('required');
            $("#txtrechid").addClass('valid');
        }
        else {
            $("#txtrechid").removeClass('valid');
            $("#txtrechid").addClass('required');
        }
        CheckFieldsHeader();
    });
    $("#txteftodate").change(function () {
        var txtSupplierName = $("#txteftodate").val();
        if (txtSupplierName.trim() != "") {
            $("#txteftodate").removeClass('required');
            $("#txteftodate").addClass('valid');
        }
        else {
            $("#txteftodate").removeClass('valid');
            $("#txteftodate").addClass('required');
        }
        CheckFieldsHeader();
    });
    $("#Txtrateid").keyup(function () {
        var txtSupplierName = $("#Txtrateid").val();
        if (txtSupplierName.trim() != "") {
            $("#Txtrateid").removeClass('required');
            $("#Txtrateid").addClass('valid');
        }
        else {
            $("#Txtrateid").removeClass('valid');
            $("#Txtrateid").addClass('required');
        }
        CheckFieldsHeader();
    });
    $("#Txtcreditid").keyup(function () {
        var txtSupplierName = $("#Txtcreditid").val();
        if (txtSupplierName.trim() != "") {
            $("#Txtcreditid").removeClass('required');
            $("#Txtcreditid").addClass('valid');
        }
        else {
            $("#Txtcreditid").removeClass('valid');
            $("#Txtcreditid").addClass('required');
        }
        CheckFieldsHeader();
    });
    $("#Txtremarks").keyup(function () {
        var txtSupplierName = $("#Txtremarks").val();
        if (txtSupplierName.trim() != "") {
            $("#Txtremarks").removeClass('required');
            $("#Txtremarks").addClass('valid');
        }
        else {
            $("#Txtremarks").removeClass('valid');
            $("#Txtremarks").addClass('required');
        }
        CheckFieldsHeader();
    });
    function CheckFieldsHeader() {
        var ErrCount = 0;
        if ($("#Txtrateid").val().trim() == "" || $("#Txtrateid").val() == null) {
            ErrCount = 2;
        }
        if ($("#Txtcreditid").val().trim() == "" || $("#Txtcreditid").val() == null) {
            ErrCount = 1;
        }
        if ($("#txtefdate").val().trim() == "" || $("#txtefdate").val() == null) {
            ErrCount = 2;
        }
        if ($("#txtrechid").val().trim() == "" || $("#txtrechid").val() == null) {
            ErrCount = 2;
        }
        if ($("#txteftodate").val().trim() == "" || $("#txteftodate").val() == null) {
            ErrCount = 2;
        }
        if ($("#Txtremarks").val().trim() == "" || $("#Txtremarks").val() == null) {
            ErrCount = 2;
        }
        if (ErrCount == 0) {
            $("#btnsave").removeAttr('disabled');
            $("#btnrej").removeAttr('disabled');
        }
        else {
            $("#btnsave").attr('disabled', 'disabled');
            $("#btnrej").attr('disabled', 'disabled');
        }
    }
    $("#txthsngid").change(function () {
        var txthsnid = $("#txthsngid").val();
        if (txthsnid != 0) {
            var hsnval =
              {
                  "hsnid": txthsnid
              };
            $.post('../IEM_GST_TAX/Gethsndesc', hsnval,
                  function (data) {
                      if (data != null) {
                          $("#txthsn_desc").val(data);
                      }
                      else {
                          $("#txthsn_desc").val("");
                      }
                  }

             , 'json');
        }
        else {
            $("#hsn_desc").val("");
        }
    });
    function goToIndex() {
        // $('#gridexpsub').find('tr').css('background', 'none');
        window.parent.jQuery('#ForPartialView').dialog('close');
    }
    function Udate_gsttax() {
        var Tatsub = $("#Taxsubtype_gid").val();
        var State = $("#Txtstategid").val();
        //var TxtGl = $("#Txtglid").val();
        var avtive = $('input[name=Radiotypename3]:checked').val();
        var Txhsnid = $("#txthsngid").val();
        var Txtrate = $("#Txtrateid").val();
        var TxtCrdid = $("#Txtcreditid").val();
        var TxtInputGlid = $("#txtcdglid").val();
        var TxtRevchg = $("#txtrechid").val();
        var TxtRevchgGl = $("#Txtrecrdgid").val();
        var TxtEefto = $("#txteftodate").val();
        var TxtEefdate = $("#txtefdate").val();
        var Taxgstgid = $("#Txttaxgstid").val();
        var txtremarks = $("#Txtremarks").val();
        if (txtremarks == 0) {
            txtremarks = "";
        }

        if (Tatsub == "" || Tatsub == 0) {
            jAlert("Tax-Sub Type Should not be Empty!", "Information");
            return false;
        }
        else if (State == "" || State == 0) {
            jAlert("State Name Should not be Empty!", "Information");
            return false;
        }
            //else if (TxtGl == "" || TxtGl == 0) {
            //    jAlert("Tax GL Should not be Empty!", "Information");
            //    return false;
            //}
        else if (Txhsnid == "" || Txhsnid == 0) {
            jAlert("HSN Code Should not be Empty!", "Information");
            return false;
        }
        else if (Txhsnid == "" || Txhsnid == 0) {
            jAlert("Input Credit GL Should not be Empty!", "Information");
            return false;
        }
        else if (TxtInputGlid == "" || TxtInputGlid == 0) {
            jAlert("Input Credit GL Should not be Empty!", "Information");
            return false;
        }
        else if (TxtRevchgGl == "" || TxtRevchgGl == 0) {
            jAlert("Reverse Charge GL Should not be Empty!", "Information");
            return false;
        }
        else {
            var TaxGstModel = {
                "Taxsubtypeid": Tatsub, "hsnid": Txhsnid, "stategid": State, "avtive": avtive,
                "Rate": Txtrate, "inputcredit": TxtCrdid, "inputcredit_gid": TxtInputGlid, "effective_date": TxtEefdate,
                "reverse_charge": TxtRevchg, "reversecharge_glid": TxtRevchgGl, "effective_todate": TxtEefto, "Taxgst_gid": Taxgstgid,
                "Remarks": txtremarks, "Approvalstatus": "1", "Status": "1"
            };
            $.post('../IEM_GST_TAX/updategst', TaxGstModel,
                       function (data) {
                           if (data == "Success") {
                               jAlert("Record Updated successfully !", "Information", function (r) {
                                   if (r == true) {
                                       location = '../IEM_GST_TAX/Index';
                                   }
                               });
                           }
                           else {
                               jAlert(data, "Information", function (r) {
                                   if (r == true) {
                                       return false;
                                   }
                               });
                           }
                       }

                  , 'json');
        }
    }
    function DeleteType() {
        var Tatsub = $("#Taxsubtype_gid").val();
        var State = $("#Txtstategid").val();
        var avtive = $('input[name=Radiotypename3]:checked').val();
        var Txhsnid = $("#txthsngid").val();
        var Txtrate = $("#Txtrateid").val();
        var TxtCrdid = $("#Txtcreditid").val();
        var TxtInputGlid = $("#txtcdglid").val();
        var TxtRevchg = $("#txtrechid").val();
        var TxtRevchgGl = $("#Txtrecrdgid").val();
        var TxtEefto = $("#txteftodate").val();
        var TxtEefdate = $("#txtefdate").val();
        var Taxgstgid = $("#Txttaxgstid").val();
        var TaxGstModel = {
            "Taxsubtypeid": Tatsub, "hsnid": Txhsnid, "stategid": State, "avtive": avtive,
            "Rate": Txtrate, "inputcredit": TxtCrdid, "inputcredit_gid": TxtInputGlid, "effective_date": TxtEefdate,
            "reverse_charge": TxtRevchg, "reversecharge_glid": TxtRevchgGl, "effective_todate": TxtEefto, "Taxgst_gid": Taxgstgid
        };
        $.post('../IEM_GST_TAX/Deletegsttax', TaxGstModel,
                   function (data) {
                       if (data == "Success") {
                           jAlert("Record Deleted successfully !", "Information", function (r) {
                               if (r == true) {
                                   location = '../IEM_GST_TAX/Index';
                               }
                           });
                       }
                       else {
                           jAlert(data, "Information", function (r) {
                               if (r == true) {
                                   return false;
                               }
                           });
                       }
                   }

              , 'json');
    }
    function Reject_Gsttax() {
        var Tatsub = $("#Taxsubtype_gid").val();
        var State = $("#Txtstategid").val();
        // var TxtGl = $("#Txtglid").val();
        var avtive = $('input[name=Radiotypename3]:checked').val();
        var Txhsnid = $("#txthsngid").val();
        var Txtrate = $("#Txtrateid").val();
        var TxtCrdid = $("#Txtcreditid").val();
        var TxtInputGlid = $("#txtcdglid").val();
        var TxtRevchg = $("#txtrechid").val();
        var TxtRevchgGl = $("#Txtrecrdgid").val();
        var TxtEefto = $("#txteftodate").val();
        var TxtEefdate = $("#txtefdate").val();
        var Taxgstgid = $("#Txttaxgstid").val();
        var txtremarks = $("#Txtremarks").val();

        if (Tatsub == "" || Tatsub == 0) {
            jAlert("Tax-Sub Type Should not be Empty!", "Information");
            return false;
        }
        else if (State == "" || State == 0) {
            jAlert("State Name Should not be Empty!", "Information");
            return false;
        }
            //else if (TxtGl == "" || TxtGl == 0) {
            //    jAlert("Tax GL Should not be Empty!", "Information");
            //    return false;
            //}
        else if (Txhsnid == "" || Txhsnid == 0) {
            jAlert("HSN Code Should not be Empty!", "Information");
            return false;
        }
        else if (Txhsnid == "" || Txhsnid == 0) {
            jAlert("Input Credit GL Should not be Empty!", "Information");
            return false;
        }
        else if (TxtInputGlid == "" || TxtInputGlid == 0) {
            jAlert("Input Credit GL Should not be Empty!", "Information");
            return false;
        }
        else if (TxtRevchgGl == "" || TxtRevchgGl == 0) {
            jAlert("Reverse Charge GL Should not be Empty!", "Information");
            return false;
        }
        else {
            var TaxGstModel = {
                "Taxsubtypeid": Tatsub, "hsnid": Txhsnid, "stategid": State, "avtive": avtive,
                "Rate": Txtrate, "inputcredit": TxtCrdid, "inputcredit_gid": TxtInputGlid, "effective_date": TxtEefdate,
                "reverse_charge": TxtRevchg, "reversecharge_glid": TxtRevchgGl, "effective_todate": TxtEefto, "Taxgst_gid": Taxgstgid,
                "Remarks": txtremarks, "Approvalstatus": "2", "Status": "3"
            };
            $.post('../IEM_GST_TAX/updategst', TaxGstModel,
                       function (data) {
                           if (data == "Success") {
                               jAlert("Record Updated successfully !", "Information", function (r) {
                                   if (r == true) {
                                       location = '../IEM_GST_TAX/Index';
                                   }
                               });
                           }
                           else {
                               jAlert(data, "Information", function (r) {
                                   if (r == true) {
                                       return false;
                                   }
                               });
                           }
                       }

                  , 'json');
        }
    }
    function Approve_gsttax() {
        var Tatsub = $("#Taxsubtype_gid").val();
        var State = $("#Txtstategid").val();
        //var TxtGl = $("#Txtglid").val();
        var avtive = $('input[name=Radiotypename3]:checked').val();
        var Txhsnid = $("#txthsngid").val();
        var Txtrate = $("#Txtrateid").val();
        var TxtCrdid = $("#Txtcreditid").val();
        var TxtInputGlid = $("#txtcdglid").val();
        var TxtRevchg = $("#txtrechid").val();
        var TxtRevchgGl = $("#Txtrecrdgid").val();
        var TxtEefto = $("#txteftodate").val();
        var TxtEefdate = $("#txtefdate").val();
        var Taxgstgid = $("#Txttaxgstid").val();
        var txtremarks = $("#Txtremarks").val();
        if (txtremarks == 0) {
            txtremarks = "";
        }

        if (Tatsub == "" || Tatsub == 0) {
            jAlert("Tax-Sub Type Should not be Empty!", "Information");
            return false;
        }
        else if (State == "" || State == 0) {
            jAlert("State Name Should not be Empty!", "Information");
            return false;
        }
            //else if (TxtGl == "" || TxtGl == 0) {
            //    jAlert("Tax GL Should not be Empty!", "Information");
            //    return false;
            //}
        else if (Txhsnid == "" || Txhsnid == 0) {
            jAlert("HSN Code Should not be Empty!", "Information");
            return false;
        }
        else if (Txhsnid == "" || Txhsnid == 0) {
            jAlert("Input Credit GL Should not be Empty!", "Information");
            return false;
        }
        else if (TxtInputGlid == "" || TxtInputGlid == 0) {
            jAlert("Input Credit GL Should not be Empty!", "Information");
            return false;
        }
        else if (TxtRevchgGl == "" || TxtRevchgGl == 0) {
            jAlert("Reverse Charge GL Should not be Empty!", "Information");
            return false;
        }
        else {
            var TaxGstModel = {
                "Taxsubtypeid": Tatsub, "hsnid": Txhsnid, "stategid": State, "avtive": avtive,
                "Rate": Txtrate, "inputcredit": TxtCrdid, "inputcredit_gid": TxtInputGlid, "effective_date": TxtEefdate,
                "reverse_charge": TxtRevchg, "reversecharge_glid": TxtRevchgGl, "effective_todate": TxtEefto, "Taxgst_gid": Taxgstgid,
                "Remarks": txtremarks, "Approvalstatus": "1", "Status": "2"
            };
            $.post('../IEM_GST_TAX/updategst', TaxGstModel,
                       function (data) {
                           if (data == "Success") {
                               jAlert("Record Updated successfully !", "Information", function (r) {
                                   if (r == true) {
                                       location = '../IEM_GST_TAX/Index';
                                   }
                               });
                           }
                           else {
                               jAlert(data, "Information", function (r) {
                                   if (r == true) {
                                       return false;
                                   }
                               });
                           }
                       }

                  , 'json');
        }
    }

</script>
@model IEM.Areas.EOW.Models.EOW_EmployeeeExpense
@*<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>*@
<link href="@Url.Content("~/Content/RMchosen/chosen.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/RMScript/chosen.jquery.js")" type="text/javascript"></script>

<style>
    .wht {
        width: 100%;
    }

    .whtnew {
        width: 90%;
    }
</style>
<div id="createExpenseqwer">


    @using (Html.BeginForm())
    {
        <div style="padding:0;margin:0;">
            <input type="hidden" id="ecfamomtssession" value="@Session["Ecfamountval"]" />
            <input type="hidden" id="hdraiserfcc" value="@Session["raiserfcc"]" />
            <input type="hidden" id="hdraiserccc" value="@Session["raiserccc"]" />
            <table class="myTableStyleTabNew" style="width: 100%;">
                <tr>
                    <td style="width: 33%;">
                        <span>Nature of Expenses</span><br />
                        @Html.DropDownListFor(model => model.NatureofExpensesId, Model.ExpNatureofExpdata, new { @class = "textboxStyle required", @id = "ddlNatureofExpenses" })
                    </td>
                    <td style="width: 33%;">
                        <span>Expense Category</span><br />
                        @Html.DropDownListFor(model => model.ExpenseCategoryId, Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "textboxStyle required", @id = "ddlExpenseCategory" })
                    </td>
                    <td style="width: 35%;">
                        <span>Sub Category</span><br />
                        @Html.DropDownListFor(model => model.SubCategoryId, Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "wht textboxStyle required", @id = "ddlSubCategory" })
                    </td>
                    <td style="width:10%">
                        <span>&nbsp;</span><br />
                        <input type="button" value="?" style="margin-top: 5px;" disabled="disabled" id="Getpolicypopup" onclick="Newpolicypopup()" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <span>Claim Period From</span><br />
                        @Html.TextBoxFor(model => model.Exp_ClaimPeriodFrom, new { disable = true, @class = "textboxStyle required", @id = "txtClaimPeriodFrom", @maxlength = "10", @placeholder = "dd-mm-yyyy" })
                    </td>

                    <td>
                        <span>Claim Period To</span><br />
                        @Html.TextBoxFor(model => model.Exp_ClaimPeriodTo, new { disable = true, @class = "textboxStyle required", @id = "txtClaimPeriodTo", @maxlength = "10", @placeholder = "dd-mm-yyyy" })
                    </td>
                    <td colspan="2">
                        <span>Service Month</span><br />
                        @Html.TextBoxFor(model => model.Exp_ClaimMonth, new { disable = true, @class = "textboxStyle whtnew", @id = "txtClaimMonth", @maxlength = "10" })
                    </td>
                </tr>
                <tr id="lopcalhide1">
                    <td>
                        <span>Place From</span><br />
                        @Html.TextBoxFor(model => model.PlaceFrom, new { disable = true, @class = "textboxStyle required", @id = "ddlPlaceFromt", @maxlength = "100" })
                        @*@Html.DropDownListFor(model => model.PlaceFrom, Model.Citydata, "--Select--", new { @class = "textboxStyle required", @id = "ddlPlaceFromt" })*@
                    </td>
                    <td>
                        <span>Place To</span><br />
                        @Html.TextBoxFor(model => model.PlaceTo, new { disable = true, @class = "textboxStyle required", @id = "ddlPlaceTot", @maxlength = "100" })
                        @*@Html.DropDownListFor(model => model.PlaceTo, Model.Citydata, "--Select--", new { @class = "textboxStyle required", @id = "ddlPlaceTot" })*@
                    </td>
                    <td colspan="2">
                        <span>Travel Mode</span><br />
                        @Html.DropDownListFor(model => model.TravelModeId, Model.TravelModedata, new { @class = "textboxStyle required", @id = "ddlTravelModet" })
                    </td>
                </tr>
                <tr id="lopcalhide2">
                    <td>
                        <span>Travel Class</span><br />
                        @Html.DropDownListFor(model => model.TravelClassId, Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "textboxStyle required", @id = "ddlTravelClasst" })
                    </td>
                    <td>
                        <span>Rate</span><br />
                        @Html.TextBoxFor(model => model.Rate, new { disable = true, @class = "textboxStyle", @id = "txtRatet", @maxlength = "8", @onkeypress = "return isAmount(event);", @disabled = "disabled" })
                    </td>
                    <td colspan="2">
                        <span>Distance</span><br />
                        @Html.TextBoxFor(model => model.Distance, new { disable = true, @class = "textboxStyle", @id = "txtDistancet", @maxlength = "8", @onkeypress = "return isNumber(event);", @disabled = "disabled" })
                    </td>
                </tr>
                <tr>
                    <td>
                        <span>Business Segment(BU)</span><br />
                        @Html.DropDownListFor(model => model.Exp_FC, Model.Exp_FCC, new { @class = "textboxStyle ", @id = "txtFC", @disabled = "disabled" })
                    </td>
                    <td>
                        <span>Cost Center(CC)</span><br />
                        @Html.DropDownListFor(model => model.Exp_CC, Model.Exp_CCC, new { @class = "textboxStyle ", @id = "txtCC" })
                    </td>
                    <td colspan="2">
                        <span>Product Code</span><br />
                        @Html.TextBoxFor(model => model.Exp_ProductCode, new { disable = true, @class = "textboxStyle with", @id = "txtProductCode", @maxlength = "100" })
                        @Html.TextBoxFor(model => model.Exp_FCCC, new { disable = true, @class = "dispg textboxStyle disp", @id = "txtFCCC", @maxlength = "58", @disabled = "disabled" })
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <span>Location Code(OUCode)</span><br />
                        @Html.TextBoxFor(model => model.Exp_OUCode, new { disable = true, @class = "textboxStyle withs", @id = "txtOUCode", @maxlength = "8" })
                    </td>
                    <td colspan="2">
                        <span>Amount</span><br />
                        @Html.TextBoxFor(model => model.Exp_Amount, new { disable = true, @class = "textboxStyle required whtnew", @id = "txtAmount", @onkeypress = "return isAmount(event);", @maxlength = "15" })
                    </td>
                </tr>

                <tr>
                    <td colspan="2" style="width: 14%;">
                        <span>HSN Code</span><br />
                        @Html.DropDownListFor(model => model.Hsnid, Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "wh textboxStyle required", @id = "txtHsnId", @name = "txtHsnId" })
                    </td>
                    <td colspan="4">
                        <span> Hsn Description</span><br />
                        @Html.TextAreaFor(model => model.HsnDescription, new { disable = true, @class = "textboxStyle", @id = "txthsndesc", @maxlength = "250", @disabled = "disabled" })
                    </td>
                </tr>
                <tr>
                    <td colspan="4">
                        <span>Description</span><br />
                        @Html.TextAreaFor(model => model.travelDescription, new { disable = true, @class = "textboxStyle txtarea", @id = "txttravelDescription", @maxlength = "225" })
                    </td>
                </tr>

                <tr>
                    <td colspan="6">
                        <span>RCM Flag</span><br />
                       
                            @Html.RadioButtonFor(model => model.RCMFlag, "Y", new { @id = "rdorcmChargedYes", @name = "rdorcmChargedFlag",@disabled="disabled" })<span>Yes</span>
                            @Html.RadioButtonFor(model => model.RCMFlag, "N", new { @id = "rdorcmChargedNo", @checked = "checked", @name = "rdorcmChargedFlag", @disabled = "disabled" })<span>No</span>
                       
                    </td>
                </tr>

                <tr>
                    <td style="padding-top: 10px;" colspan="4" align="center">
                        <center>
                            <button type="button" title="Save" disabled="disabled" name="Save" id="btnsavexpNN" class="btn btn-primary" onclick="SaveExpense()"><span style="color:white;" class="glyphicon glyphicon-floppy-disk"></span> Save</button>
                            <button type="button" id="btncanexpNNN" title="Cancel" name="Cancel" class="btn btn-warning" onclick="GotoIndexExpenseNN()"><span style="color:white;" class="glyphicon glyphicon-remove-sign"></span>Cancel</button>
                        </center>
                    </td>
                </tr>
            </table>
        </div>
    }
</div>
<style>
    .with {
        width: 90%;
    }

    .withs {
        width: 95%;
    }

    .txtarea {
        width: 96.5%;
        height: 50px;
        resize: none;
    }

    .dispg {
        display: none;
    }
</style>
<script>
    $("#txtAmount").keyup(function (event) {
        if (event.which >= 37 && event.which <= 40) {
            event.preventDefault();
        }

        var currentval = $("#txtAmount").val();
        var testDecimal = testDecimals(currentval);
        if (testDecimal.length > 1) {
            currentval = currentval.slice(0, -1);
        }
        $("#txtAmount").val(replaceCommas(currentval));

    });

    $(document).ready(function () {
        $("#lopcalhide1").hide();
        $("#lopcalhide2").hide();

        $("#txtOUCode").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompleteoucode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.raiserccName, value: item.raiserccName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#txtProductCode").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompleteproductcode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.raiserccName, value: item.raiserccName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#ddlPlaceFromt").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompletecitycode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.citysName, value: item.citysName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#ddlPlaceTot").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../EmployeeClaimNew/AutoCompletecitycode",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.citysName, value: item.citysName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#ddlNatureofExpenses").focus();
        $("#txtClaimPeriodFrom").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd-mm-yy',
            maxDate: '-id',
            numberOfMonths: 1,
            onSelect: function (selected) {
                $("#txtClaimPeriodFrom").addClass('valid');
                $("#txtClaimPeriodTo").datepicker("option", "minDate", selected);
                cheval();
                var ddlNaturelocal = $("#ddlNatureofExpenses option:selected").text();
                if (ddlNaturelocal == "Local Conveyance") {
                    $("#txtClaimPeriodTo").addClass('valid');
                    $("#txtClaimPeriodTo").val(selected);
                    getmonth(selected);
                }
            }
        });
        $("#txtClaimPeriodTo").datepicker({
            changeMonth: true,
            changeYear: true,
            maxDate: '-id',
            dateFormat: 'dd-mm-yy',
            numberOfMonths: 1,
            onSelect: function (selected) {
                $("#txtClaimPeriodTo").addClass('valid');
                $("#txtClaimPeriodFrom").datepicker("option", "maxDate", selected);
                var txtContractFrom = $("#txtClaimPeriodTo").val();
                getmonth(txtContractFrom);
                cheval();
            }
        });
    });

    function Newpolicypopup() {
        var SubCategory = $("#ddlSubCategory").val();
        if (SubCategory != "0") {
            var url = '@Url.Action("_Emppolicypopup", "EmployeeClaimNew")?id=' + SubCategory + '&' + new Date().getTime();
            objDialogpolicypopupce.load(url);
            objDialogpolicypopupce.dialog({
                autoOpen: false,
                cache: false,
                modal: true,
                show: 'fade-in',
                close: 'fade-out',
                title: 'Policy Help',
                width: 860,
                height: 400
            });
            objDialogpolicypopupce.dialog("open");
        }
    }

    $(document).ready(function () {
        $('#txtFC').change(function () {
            var txtFC = $(this).val();
            var hdraiserfcc = $("#hdraiserfcc").val();
            if (txtFC != hdraiserfcc) {
                jAlert("Additional Approval to be attached", "Message");
                return false;
            }
        });
    });
    $(document).ready(function () {
        $('#txtCC').change(function () {
            var txtCC = $(this).val();
            var hdraiserccc = $("#hdraiserccc").val();
            if (txtCC != hdraiserccc) {
                jAlert("Additional Approval to be attached", "Message");
                return false;
            }
        });
    });

    $(document).ready(function () {
        var stylesSelect = $('#txtClaimMonth');
        stylesSelect.attr('disabled', true);
        $("#ddlHsnId").chosen({});
        $("#ddlHsnId_chosen").css('width', '100%');

    });
    function GotoIndexExpenseNN() {
        objDialogExpense.dialog("close");
        window.parent.jQuery('#ForPartialViewExpensenew').dialog('close');
    }

    function SaveExpense() {
        var ecfamomtssession = $("#ecfamomtssession").val();
        if (ecfamomtssession == null || ecfamomtssession == "0") {
            jAlert("Please Enter ECF Amount", "Message");
            return false;
        }
        var ecfclaimmon = $("#txtclaimmonthtr").val();
        var travelDescription = $("#txttravelDescription").val();
        var NatureofExpenses = $("#ddlNatureofExpenses").val();
        var ExpenseCategory = $("#ddlExpenseCategory").val();
        var SubCategory = $("#ddlSubCategory").val();
        var ClaimPeriodFrom = $("#txtClaimPeriodFrom").val();
        var ClaimPeriodTo = $("#txtClaimPeriodTo").val();
        var ClaimMonth = $("#txtClaimMonth").val();
        var FC = $("#txtFC").val();
        var CC = $("#txtCC").val();
        var FCCC = $("#txtFCCC").val();
        var ProductCode = $("#txtProductCode").val();
        var OUCode = $("#txtOUCode").val();
        //var Amount = $("#txtAmount").val();

        var Amount = $("#txtAmount").val().replace(/,/g, "");

        var PlaceFrom1 = $("#ddlPlaceFromt").val();
        //var PlaceFrom = $("#ddlPlaceFromt option:selected").text();
        var PlaceTo1 = $("#ddlPlaceTot").val();
        //var PlaceTo = $("#ddlPlaceTot option:selected").text();
        var TravelMode = $("#ddlTravelModet").val();
        var TravelClass = $("#ddlTravelClasst").val();
        var Rate = $("#txtRatet").val();
        var Distance = $("#txtDistancet").val();

        var HsnId = $("#txtHsnId").val();
        var hsndesc = $("#txthsndesc").val();
        var RCMFlag = "";
        if ($("input[id=rdorcmChargedYes]:radio[checked=checked]").attr("value")) {
            RCMFlag = "Y";
        }
        else {
            RCMFlag = "N";
        }
        if (NatureofExpenses == null || NatureofExpenses == "" || NatureofExpenses == "0") {
            jAlert("Please select the Nature of Expenses.", "Message");
            $("#ddlNatureofExpenses").focus();
            return false;
        }
        if (ExpenseCategory == null || ExpenseCategory == "0") {
            jAlert("Please select the Expense Category.", "Message");
            $("#ddlExpenseCategory").focus();
            return false;
        }
        if (SubCategory == null || SubCategory == "0") {
            jAlert("Please select the Sub Category.", "Message");
            $("#ddlSubCategory").focus();
            return false;
        }
        //if ($("input[name=rdogstChargedFlag]:radio[checked=checked]").attr("value") == "Y") {
            if (HsnId == null || HsnId == "" || HsnId == "0") {
                jAlert("Please select the HSN Code.", "Message");
                return false;
            }
        //} else {
        //    Hsnid = "0";
        //}
        if (ClaimPeriodFrom == null || ClaimPeriodFrom == "") {
            jAlert("Enter 'CLAIM PERIOD FROM' date", "Message");
            $("#txtClaimPeriodFrom").focus();
            return false;
        }
        if (ClaimPeriodTo == null || ClaimPeriodTo == "") {
            jAlert("Enter 'CLAIM PERIOD TO' date", "Message");
            $("#txtClaimPeriodTo").focus();
            return false;
        }

        if (ClaimMonth == null || ClaimMonth == "") {
            jAlert("Please enter the 'SERVICE MONTH' ", "Message");
            $("#txtClaimMonth").focus();
            return false;
        }
        if (ecfclaimmon != ClaimMonth) {
            jAlert("Month mismatch between 'ECF Header SERVICE MONTH' & 'CLAIM PERIOD TO' fields", "Message");
            return false;
        }
        var ddlNaturelocal = $("#ddlNatureofExpenses option:selected").text();
        if (ddlNaturelocal == "Local Conveyance") {
            if (PlaceFrom1 == null || PlaceFrom1 == "") {
                jAlert("Please Enter Place From.", "Message");
                return false;
            }
            if (PlaceTo1 == null || PlaceTo1 == "") {
                jAlert("Please Enter Place To.", "Message");
                return false;
            }
            if (TravelMode == null || TravelMode == "0") {
                jAlert("Please select the Travel Mode", "Message");
                return false;
            }
            if (TravelClass == null || TravelClass == "0") {
                jAlert("Please Select the Travel Class", "Message");
                return false;
            }
        }

        if (FC == null || FC == "") {
            jAlert("Please Enter FC.", "Message");
            $("#txtFC").focus();
            return false;
        }
        if (CC == null || CC == "") {
            jAlert("Please Enter the Cost Center(CC)");
            $("#txtCC").focus();
            return false;
        }
        if (ProductCode == null || ProductCode == "") {
            jAlert("Please Enter the Product Code", "Message");
            $("#txtProductCode").focus();
            return false;
        }
        if (OUCode == null || OUCode == "") {
            jAlert("Please Enter Location (OU Code)", "Message");
            $("#txtOUCode").focus();
            return false;
        }
        if (Amount == null || Amount == "") {
            jAlert("Please enter the Amount", "Message");
            $("#txtAmount").focus();
            return false;
        }
        if (Amount == "NAN" || Amount == "0.00" || Amount == "0") {
            jAlert("Please Enter Rate or Distance.", "Message");
            return false;
        }
        var val1 = parseFloat(ecfamomtssession);
        var val2 = parseFloat(Amount);
        if (parseFloat(val1) < parseFloat(val2)) {
            jAlert("The debit lines Amount must be equal to ECF Amount", "Message");
            return false;
        }
        else {

            var NewExpensemodel = {
                "NatureofExpensesName": NatureofExpenses,
                "ExpenseCategoryName": ExpenseCategory,
                "SubCategoryName": SubCategory,
                "Exp_ClaimPeriodFrom": ClaimPeriodFrom,
                "Exp_ClaimPeriodTo": ClaimPeriodTo,
                "Exp_ClaimMonth": ClaimMonth,
                "travelDescription": travelDescription,
                "NatureofExpenseslocal": ddlNaturelocal,
                "PlaceFrom": PlaceFrom1,
                "PlaceTo": PlaceTo1,
                "TravelModeName": TravelMode,
                "TravelClassName": TravelClass,
                "Rate": Rate,
                "Distance": Distance,
                "Exp_FC": FC,
                "Exp_CC": CC,
                "Exp_FCCC": FCCC,
                "Exp_ProductCode": ProductCode,
                "Exp_OUCode": OUCode,
                "Exp_Amount": Amount,
                "Hsnid": HsnId,
                "HsnDescription": hsndesc,
                "RCMFlag":RCMFlag
            };
            $.post('../EmployeeClaimNew/_EmpExpenseCreate', NewExpensemodel,
            function (data) {
                if (data == "Success") {
                    jAlert("Saved Successfully.", "Message");
                    var url = '@Url.Action("_EmpExpenseDetails", "EmployeeClaimNew")?' + new Date().getTime();
                    $("#wgExpense").load(url);

                    //selva add
                    var url1 = '@Url.Action("_EmpPaymentDetails", "EmployeeClaimNew")?' + new Date().getTime();
                    $("#wgriPayment").load(url1);


                    var url2 = '@Url.Action("_LoadGstDetails", "EmployeeClaimNew")?' + new Date().getTime();
                    $("#Grdgstdetls").load(url2);
                    var url3 = '@Url.Action("_LoadRCMDetails", "EmployeeClaimNew")?' + new Date().getTime();
                    $("#GrdRCMdetls").load(url3);
                    objDialogExpense.dialog("close");
                    window.parent.jQuery('#ForPartialViewExpensenew').dialog('close');
                }
                else {
                    jAlert(data, "Message");
                    return false;
                }
            }, 'json');
        }
    }

    $(document).ready(function () {
        var HsnArray;
        $("#ddlNatureofExpenses").append("<option selected='selected' value='0' >--Select--</option>");
        $("#txtHsnId").append("<option value='0' >--Select--</option>");
        $('#ddlNatureofExpenses').change(function () {
            var brandID = $(this).val();
            $("#txthsndesc").val("");
            $("#txtHsnId").empty();
            var Student =
           {
               "NatureofExpensesId": brandID
           };
            $.ajax({
                url: '../EmployeeClaimnew/GetExpenseCategory/',
                data: JSON.stringify(Student),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    cheval();
                    $("#ddlExpenseCategory").empty();
                    $("#ddlSubCategory").empty();
                    if (data.length > 0) {
                        $("#ddlSubCategory").append("<option value='0' >--Select--</option>");
                        $("#ddlExpenseCategory").append("<option value='0' >--Select--</option>");
                        for (var i = 0; i < data.length; i++) {
                            var stylesSelect = $('#ddlExpenseCategory');
                            stylesSelect.attr('disabled', false);
                            $("#ddlExpenseCategory").append("<option value=" + data[i].ExpenseCategoryId + " >" + data[i].ExpenseCategoryName + "</option>");
                        }
                        var ddlNaturelocal = $("#ddlNatureofExpenses option:selected").text();
                        if (ddlNaturelocal == "Local Conveyance") {
                            $("#lopcalhide1").show();
                            $("#lopcalhide2").show();
                            var stylesSelect = $('#txtClaimPeriodTo');
                            stylesSelect.attr('disabled', true);
                        }
                        else {
                            $("#lopcalhide1").hide();
                            $("#lopcalhide2").hide();
                            var stylesSelect = $('#txtClaimPeriodTo');
                            stylesSelect.attr('disabled', false);
                        }
                    }

                    if (data.length == 0) {
                        var stylesSelect = $('#ddlExpenseCategory');
                        stylesSelect.attr('disabled', true);
                        var stylesSelect = $('#ddlSubCategory');
                        stylesSelect.attr('disabled', true);
                        $('#btnsavexpNN').attr('disabled', true);
                    }
                },
                error: function (result) {
                    jAlert("Error.", "Error");
                    return false;
                }
            });
        });

        $('#ddlExpenseCategory').change(function () {
            $("#txthsndesc").val("");
            $("#txtHsnId").empty();
            var brandID = $(this).val();
            var Student =
           {
               "ExpenseCategoryId": brandID
           };
            $.ajax({
                url: '../EmployeeClaimnew/GetSubCategory/',
                data: JSON.stringify(Student),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    cheval();
                    if (data.Data1 != "" || data.Data1 != null) {
                        var data1 = JSON.parse(data.Data1);
                        $("#ddlSubCategory").empty();
                        if (data1.length > 0) {
                            $("#ddlSubCategory").append("<option value='0' >--Select--</option>");
                            for (var i = 0; i < data1.length; i++) {
                                var stylesSelect = $('#ddlSubCategory');
                                stylesSelect.attr('disabled', false);
                                $("#ddlSubCategory").append("<option value=" + data1[i].expsubcat_gid + " >" + data1[i].expsubcat_name + "</option>");
                            }
                        }
                    }
                    if (data.length == 0) {
                        var stylesSelect = $('#ddlSubCategory');
                        stylesSelect.attr('disabled', true);
                        $('#btnsavexpNN').attr('disabled', true);
                    }
                },
                error: function (result) {
                    jAlert("Error.", "Error");
                    return false;
                }
            });
        });

        $('#ddlSubCategory').change(function () {
            var brandID = $(this).val();
            if (brandID != "0") {
                var Student =
               {
                   "ExpenseCategoryId": brandID
               };
                $.ajax({
                    url: '../EmployeeClaimnew/GetSubCategorypolicy/',
                    data: JSON.stringify(Student),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        cheval();
                        if (data.policy != "") {
                            var stylesSelect = $('#Getpolicypopup');
                            stylesSelect.attr('disabled', false);
                        }

                        $("#txtHsnId").empty();

                        if (data.Data2 != "" && data.Data2 != null) {
                            HsnArray = JSON.parse(data.Data2);                            
                            $("#txtHsnId").empty();
                            if (HsnArray.length > 0) {
                                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                                for (var i = 0; i < HsnArray.length; i++) {
                                    var stylesSelect1 = $('#txtHsnId');
                                    stylesSelect1.attr('disabled', false);
                                    $("#txtHsnId").append("<option value=" + HsnArray[i].hsnid + " >" + HsnArray[i].hsncode + "</option>");
                                }
                            }
                            else {

                                $("#txtHsnId").empty();
                                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                                var stylesSelect1 = $('#txtHsnId');
                                stylesSelect1.attr('disabled', true);
                            }
                        }


                        else {
                            var stylesSelect = $('#Getpolicypopupt');
                            stylesSelect.attr('disabled', true);
                            $("#txtHsnId").empty();
                            $("#txtHsnId").append("<option value='0' >--Select--</option>");
                            var stylesSelect1 = $('#txtHsnId');
                            stylesSelect1.attr('disabled', true);
                            $("#txtHsnId").removeClass('valid');
                            $("#txtHsnId").addClass('required');
                            cheval();
                        }
                    },
                    error: function (result) {
                        $("#txtHsnId").empty();
                        $("#txtHsnId").append("<option value='0' >--Select--</option>");
                        var stylesSelect1 = $('#txtHsnId');
                        stylesSelect1.attr('disabled', true);
                        jAlert("Error.", "Error");
                        return false;
                    }
                });
            }
            else {
                var stylesSelect = $('#Getpolicypopup');
                stylesSelect.attr('disabled', true);
                $("#txtHsnId").empty();
                $("#txtHsnId").append("<option value='0' >--Select--</option>");
                var stylesSelect1 = $('#txtHsnId');
                stylesSelect1.attr('disabled', true);
            }
        });

        $('#ddlTravelModet').change(function () {
            var brandID = $(this).val();
            var Student =
           {
               "TravelModeId": brandID
           };
            $.ajax({
                url: '../TravelClaimNew/GetTravelClassdata/',
                data: JSON.stringify(Student),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    cheval();
                    $("#ddlTravelClasst").empty();
                    if (data.length > 0) {
                        $("#ddlTravelClasst").append("<option value='0' >--Select--</option>");
                        for (var i = 0; i < data.length; i++) {
                            var stylesSelect = $('#ddlTravelClasst');
                            stylesSelect.attr('disabled', false);
                            $("#ddlTravelClasst").append("<option value=" + data[i].TravelClassId + " >" + data[i].TravelClassName + "</option>");
                        }

                        $("#txtDistancet").removeClass('required');
                        $("#txtRatet").removeClass('required');
                        $("#txtDistancet").removeClass('valid');
                        $("#txtRatet").removeClass('valid');

                        $('#txtAmount').attr('disabled', false);
                        $("#txtAmount").val('');
                        $("#txtAmount").addClass('required');

                        var Studentnew =
                          {
                              "TravelModeId": brandID
                          };
                        $.ajax({
                            url: '../TravelClaimNew/GetTravelClassdataflag/',
                            data: JSON.stringify(Studentnew),
                            type: 'POST',
                            contentType: 'application/json; charset=utf-8',
                            success: function (data) {
                                if (data == "Y") {
                                    $('#txtDistancet').attr('disabled', false);
                                    $("#txtDistancet").val('');
                                    $('#txtRatet').attr('disabled', false);
                                    $("#txtRatet").val('');

                                    $("#txtDistancet").removeClass('valid');
                                    $("#txtDistancet").addClass('required');
                                    $("#txtRatet").removeClass('valid');
                                    $("#txtRatet").addClass('required');
                                    cheval();
                                }
                                else {
                                    $('#txtDistancet').attr('disabled', true);
                                    $("#txtDistancet").val('');
                                    $('#txtRatet').attr('disabled', true);
                                    $("#txtRatet").val('');

                                    cheval();
                                }
                            },
                            error: function (result) {
                                jAlert("Error.", "Error");
                                return false;
                            }
                        });
                    }
                    if (data.length == 0) {
                        var stylesSelect = $('#ddlTravelClasst');
                        stylesSelect.attr('disabled', true);
                        $("#ddlTravelClasst").append("<option value='0' >--Select--</option>");
                    }
                },
                error: function (result) {
                    jAlert("Error.", "Error");
                    return false;
                }
            });
        });
        $('#txtHsnId').change(function () {
            if (HsnArray.length > 0) {
                var hsnid = $("#txtHsnId").val();
                $("#rdorcmChargedNo").prop("checked", true);
                if (parseInt(hsnid) != 0) {
                    for (var i = 0; i < HsnArray.length; i++) {
                        if (parseInt(hsnid) == parseInt(HsnArray[i].hsnid)) {
                            $("#txthsndesc").val(HsnArray[i].Hsndesc);
                            //Ramya Aug
                            var GSTCharged = $("#hdfEditViewGstChargedFlag").val();
                            if (GSTCharged == "N") {
                                LoadRCMonHSNChange(hsnid);
                            }
                            break;
                        }
                    }
                }
                else {
                    $("#txthsndesc").val("");                    
                }
            }
        }); 
        $('#txtCC').change(function () {
            var ccs = $("#txtCC option:selected").text();
            var fcs = $("#txtFC option:selected").text();
            concode(fcs, ccs);
        });
        $('#txtFC').change(function () {
            var ccs = $("#txtCC option:selected").text();
            var fcs = $("#txtFC option:selected").text();
            concode(fcs, ccs);
        });
    });
    function concode(fcs, ccs) {
        var fc = fcs.split('-');
        var cc = ccs.split('-');
        $("#txtFCCC").val(fc[1] + "-" + cc[1]);
    }
    function cheval() {
        var ddlNatureofExpenses1 = $("#ddlNatureofExpenses").val();
        var ddlExpenseCategory1 = $("#ddlExpenseCategory").val();
        var ddlSubCategory1 = $("#ddlSubCategory").val();

        var ddlNatureofExpenses = $("#ddlNatureofExpenses option:selected").text();
        var ddlExpenseCategory = $("#ddlExpenseCategory option:selected").text();
        var ddlSubCategory = $("#ddlSubCategory option:selected").text();

        var txtClaimPeriodFrom = $("#txtClaimPeriodFrom").val();
        var txtClaimPeriodTo = $("#txtClaimPeriodTo").val();
        var txtAmount = $("#txtAmount").val();
        var txtProductCode = $("#txtProductCode").val();
        var txtOUCode = $("#txtOUCode").val();

        var TravelMode = $("#ddlTravelModet option:selected").text();
        var TravelClass = $("#ddlTravelClasst option:selected").text();
        var TravelMode1 = $("#ddlTravelModet").val();
        var TravelClass1 = $("#ddlTravelClasst").val();

        var PlaceFrom1 = $("#ddlPlaceFromt").val();
        var PlaceTo1 = $("#ddlPlaceTot").val();
        //var PlaceFrom = $("#ddlPlaceFromt option:selected").text();
        //var PlaceTo = $("#ddlPlaceTot option:selected").text();


        if (txtAmount != "0.00" && txtProductCode != "" && txtOUCode != "" && ddlNatureofExpenses1 != null && ddlExpenseCategory1 != null && ddlSubCategory1 != null && ddlNatureofExpenses1 != "0" && ddlExpenseCategory1 != "0" && ddlSubCategory1 != "0" && ddlNatureofExpenses != "--Select--" && ddlExpenseCategory != "--Select--" && ddlSubCategory != "--Select--" && txtClaimPeriodFrom != "" && txtClaimPeriodTo != "" && txtAmount != "") {

            var ddlNaturelocal = $("#ddlNatureofExpenses option:selected").text();
            if (ddlNaturelocal == "Local Conveyance") {
                if (txtAmount != "0.00" &&
                    PlaceFrom1 != null && TravelClass1 != null &&
               PlaceFrom1 != "" && TravelClass1 != "0" &&
               TravelMode1 != null && PlaceTo1 != null &&
               TravelMode1 != "0" && PlaceTo1 != "" &&
               TravelMode != "--Select--" && TravelClass != "--Select--" && txtProductCode != "" && txtOUCode != "" && ddlNatureofExpenses1 != null && ddlExpenseCategory1 != null && ddlSubCategory1 != null && ddlNatureofExpenses1 != "0" && ddlExpenseCategory1 != "0" && ddlSubCategory1 != "0" && ddlNatureofExpenses != "--Select--" && ddlExpenseCategory != "--Select--" && ddlSubCategory != "--Select--" && txtClaimPeriodFrom != "" && txtClaimPeriodTo != "" && txtAmount != "") {
                    $('#btnsavexpNN').attr('disabled', false);
                }
                else {
                    $('#btnsavexpNN').attr('disabled', true);
                }
            }
            else {
                $('#btnsavexpNN').attr('disabled', false);
            }
        }
        else {
            $('#btnsavexpNN').attr('disabled', true);
        }
    }
    //Ramya Added
    function LoadRCMonHSNChange(txtHsnID) {
        //hsn+provider location state
        var DebitlineGId = 0;
        var ECFId = 0;
        var invid = 0;
        var ProviderLocation = 0;
        var GstinVendor = 0;
        var hsngid = txtHsnID;
        
        var rcmflagparam = {
            DebitlineGId: DebitlineGId,
            ECFId: ECFId,
            invid: invid,
            hsngid: hsngid,
            ProviderLocation: ProviderLocation,
            action: 'single'

        }; 
        $.ajax({
            type: "post",

            url: "../TravelClaimNew/CheckrcmExists",
            data: JSON.stringify(rcmflagparam),
            contentType: "application/json;",
            success: function (response) {
                var Data1 = "";
                if (response.Data1 != null && response.Data1 != "" && JSON.parse(response.Data1) != null) {
                    Data1 = JSON.parse(response.Data1); 
                    if (Data1[0].STATUS == 'EXISTS')
                        $("#rdorcmChargedYes").prop("checked", true);
                    else {
                        $("#rdorcmChargedNo").prop("checked", true);
                    }
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert(errorThrown);
            }
        });

    };
    $(document).ready(function () {

        $("#txtDistancet").keyup(function () {
            var txtContractFrom = $("#txtDistancet").val();
            var txtRatet = $("#txtRatet").val();
            if (txtContractFrom.trim() != "" || txtRatet.trim() != "") {
                //$("#txtDistancet").removeClass('required');
                //$("#txtDistancet").addClass('valid');
                cheval();
                $("#txtAmount").removeClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', true);

                var currentvalnew = $('#txtDistancet').val() * ($('#txtRatet').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmount').val(tolnew); cheval()
                cheval();
            }
            else {
                //$("#txtDistancet").removeClass('valid');
                //$("#txtDistancet").addClass('required');
                cheval();
                $("#txtAmount").addClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', false);
                $("#txtAmount").val(''); cheval();
            }
        });
        $("#txtDistancet").change(function () {
            var txtContractFrom = $("#txtDistancet").val();
            var txtRatet = $("#txtRatet").val();
            if (txtContractFrom.trim() != "" || txtRatet.trim() != "") {
                //$("#txtDistancet").removeClass('required');
                //$("#txtDistancet").addClass('valid');
                cheval();
                $("#txtAmount").removeClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', true);

                var currentvalnew = $('#txtDistancet').val() * ($('#txtRatet').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmount').val(tolnew); cheval();
            }
            else {
                //$("#txtDistancet").removeClass('valid');
                //$("#txtDistancet").addClass('required');
                cheval();
                $("#txtAmount").addClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', false);
                $("#txtAmount").val(''); cheval();
            }
        });

        $("#txtRatet").keyup(function () {
            var txtContractFrom = $("#txtRatet").val();
            var txtDistancet = $("#txtDistancet").val();
            if (txtContractFrom.trim() != "" || txtDistancet.trim() != "") {
                //$("#txtRatet").removeClass('required');
                //$("#txtRatet").addClass('valid');
                cheval();
                $("#txtAmount").removeClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', true);

                var currentvalnew = $('#txtDistancet').val() * ($('#txtRatet').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmount').val(tolnew);
                cheval();
            }
            else {
                //$("#txtRatet").removeClass('valid');
                //$("#txtRatet").addClass('required');
                cheval();
                $("#txtAmount").addClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', false);
                $("#txtAmount").val(''); cheval();
            }
        });
        $("#txtRatet").change(function () {

            var txtContractFrom = $("#txtRatet").val();
            var txtDistancet = $("#txtDistancet").val();
            if (txtContractFrom.trim() != "" || txtDistancet.trim() != "") {
                cheval();
                $("#txtAmount").removeClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', true);

                var currentvalnew = $('#txtDistancet').val() * ($('#txtRatet').val());
                var currentval = currentvalnew.toFixed(2);
                var testDecimal = testDecimals(currentval);
                if (testDecimal.length > 1) {
                    currentval = currentval.slice(0, -1);
                }
                var tolnew = replaceCommas(currentval);
                $('#txtAmount').val(tolnew); cheval();
            }
            else {
                //$("#txtRatet").removeClass('valid');
                //$("#txtRatet").addClass('required');
                cheval();
                $("#txtAmount").addClass('required');
                $("#txtAmount").removeClass('valid');
                $('#txtAmount').attr('disabled', false);
                $("#txtAmount").val(''); cheval();
            }
        });

        $("#ddlTravelClasst").keyup(function () {
            var txtContractFrom = $("#ddlTravelClasst").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlTravelClasst").removeClass('required');
                $("#ddlTravelClasst").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelClasst").removeClass('valid');
                $("#ddlTravelClasst").addClass('required'); cheval();
            }
        });
        $("#ddlTravelClasst").change(function () {
            var txtContractFrom = $("#ddlTravelClasst").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlTravelClasst").removeClass('required');
                $("#ddlTravelClasst").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelClasst").removeClass('valid');
                $("#ddlTravelClasst").addClass('required'); cheval();
            }
        });

        $("#ddlTravelModet").keyup(function () {
            var txtContractFrom = $("#ddlTravelModet").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlTravelModet").removeClass('required');
                $("#ddlTravelModet").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelModet").removeClass('valid');
                $("#ddlTravelModet").addClass('required'); cheval();
            }
        });
        $("#ddlTravelModet").change(function () {
            var txtContractFrom = $("#ddlTravelModet").val();
            if (txtContractFrom.trim() != "0") {
                $("#ddlTravelModet").removeClass('required');
                $("#ddlTravelModet").addClass('valid'); cheval();
            }
            else {
                $("#ddlTravelModet").removeClass('valid');
                $("#ddlTravelModet").addClass('required'); cheval();
            }
        });
        $("#txtDistancet").keyup(function () {
            var txtContractFrom = $("#txtDistancet").val();
            if (txtContractFrom.trim() != "") {
                $("#txtDistancet").removeClass('required');
                $("#txtDistancet").addClass('valid'); cheval();
            }
            else {
                $("#txtDistancet").removeClass('valid');
                $("#txtDistancet").addClass('required'); cheval();
            }
        });
        $("#txtDistancet").change(function () {
            var txtContractFrom = $("#txtDistancet").val();
            if (txtContractFrom.trim() != "") {
                $("#txtDistancet").removeClass('required');
                $("#txtDistancet").addClass('valid'); cheval();
            }
            else {
                $("#txtDistancet").removeClass('valid');
                $("#txtDistancet").addClass('required'); cheval();
            }
        });

        $("#txtRatet").keyup(function () {
            var txtContractFrom = $("#txtRatet").val();
            if (txtContractFrom.trim() != "") {
                $("#txtRatet").removeClass('required');
                $("#txtRatet").addClass('valid'); cheval();
            }
            else {
                $("#txtRatet").removeClass('valid');
                $("#txtRatet").addClass('required'); cheval();
            }
        });
        $("#txtRatet").change(function () {
            var txtContractFrom = $("#txtRatet").val();
            if (txtContractFrom.trim() != "") {
                $("#txtRatet").removeClass('required');
                $("#txtRatet").addClass('valid'); cheval();
            }
            else {
                $("#txtRatet").removeClass('valid');
                $("#txtRatet").addClass('required'); cheval();
            }
        });

        $("#ddlPlaceTot").keyup(function () {
            var txtContractFrom = $("#ddlPlaceTot").val();
            if (txtContractFrom.trim() != "") {
                $("#ddlPlaceTot").removeClass('required');
                $("#ddlPlaceTot").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceTot").removeClass('valid');
                $("#ddlPlaceTot").addClass('required'); cheval();
            }
        });
        $("#ddlPlaceTot").change(function () {
            var txtContractFrom = $("#ddlPlaceTot").val();
            if (txtContractFrom.trim() != "") {
                $("#ddlPlaceTot").removeClass('required');
                $("#ddlPlaceTot").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceTot").removeClass('valid');
                $("#ddlPlaceTot").addClass('required'); cheval();
            }
        });

        $("#ddlPlaceFromt").keyup(function () {
            var txtContractFrom = $("#ddlPlaceFromt").val();
            if (txtContractFrom.trim() != "") {
                $("#ddlPlaceFromt").removeClass('required');
                $("#ddlPlaceFromt").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceFromt").removeClass('valid');
                $("#ddlPlaceFromt").addClass('required'); cheval();
            }
        });
        $("#ddlPlaceFromt").change(function () {
            var txtContractFrom = $("#ddlPlaceFromt").val();
            if (txtContractFrom.trim() != "") {
                $("#ddlPlaceFromt").removeClass('required');
                $("#ddlPlaceFromt").addClass('valid'); cheval();
            }
            else {
                $("#ddlPlaceFromt").removeClass('valid');
                $("#ddlPlaceFromt").addClass('required'); cheval();
            }
        });

        $("#ddlNatureofExpenses").keyup(function () {
            var ddlNatureofExpenses = $("#ddlNatureofExpenses").val();
            if (ddlNatureofExpenses.trim() != "0") {
                $("#ddlNatureofExpenses").removeClass('required');
                $("#ddlNatureofExpenses").addClass('valid'); cheval();
            }
            else {
                $('#btnsavexpNN').attr('disabled', true);
                $("#ddlNatureofExpenses").removeClass('valid');
                $("#ddlNatureofExpenses").addClass('required'); cheval();
                $('#btnsavexpNN').attr('disabled', true);
            }
        });
        $("#ddlNatureofExpenses").change(function () {
            var ddlNatureofExpenses = $("#ddlNatureofExpenses").val();
            if (ddlNatureofExpenses.trim() != "0") {
                $("#ddlNatureofExpenses").removeClass('required');
                $("#ddlNatureofExpenses").addClass('valid'); cheval();
            }
            else {
                $("#ddlNatureofExpenses").removeClass('valid');
                $("#ddlNatureofExpenses").addClass('required');
                $('#btnsavexpNN').attr('disabled', true);
            }
        });

        $("#ddlExpenseCategory").keyup(function () {
            var ddlExpenseCategory = $("#ddlExpenseCategory").val();
            if (ddlExpenseCategory.trim() != "0") {
                $("#ddlExpenseCategory").removeClass('required');
                $("#ddlExpenseCategory").addClass('valid'); cheval();
            }
            else {
                $("#ddlExpenseCategory").removeClass('valid');
                $("#ddlExpenseCategory").addClass('required'); cheval();
                $('#btnsavexpNN').attr('disabled', true);
            }
        });
        $("#ddlExpenseCategory").change(function () {
            var ddlExpenseCategory = $("#ddlExpenseCategory").val();
            if (ddlExpenseCategory.trim() != "0") {
                $("#ddlExpenseCategory").removeClass('required');
                $("#ddlExpenseCategory").addClass('valid'); cheval();
            }
            else {
                $("#ddlExpenseCategory").removeClass('valid');
                $("#ddlExpenseCategory").addClass('required'); cheval();
                $('#btnsavexpNN').attr('disabled', true);
            }
        });

        $("#ddlSubCategory").keyup(function () {
            var ddlSubCategory = $("#ddlSubCategory").val();
            if (ddlSubCategory.trim() != "0") {
                $("#ddlSubCategory").removeClass('required');
                $("#ddlSubCategory").addClass('valid'); cheval();
            }
            else {
                $("#ddlSubCategory").removeClass('valid');
                $("#ddlSubCategory").addClass('required'); cheval();
            }
        });
        $("#ddlSubCategory").change(function () {
            var ddlSubCategory = $("#ddlSubCategory").val();
            if (ddlSubCategory.trim() != "0") {
                $("#ddlSubCategory").removeClass('required');
                $("#ddlSubCategory").addClass('valid'); cheval();
            }
            else {
                $("#ddlSubCategory").removeClass('valid');
                $("#ddlSubCategory").addClass('required'); cheval();
            }
        });

        $("#txtClaimPeriodFrom").keyup(function () {
            var txtClaimPeriodFrom = $("#txtClaimPeriodFrom").val();
            if (txtClaimPeriodFrom.trim() != "") {
                $("#txtClaimPeriodFrom").removeClass('required');
                $("#txtClaimPeriodFrom").addClass('valid');// cheval();
            }
            else {
                $("#txtClaimPeriodFrom").removeClass('valid');
                $("#txtClaimPeriodFrom").addClass('required');// cheval();
            }
        });
        $("#txtClaimPeriodFrom").change(function () {
            var txtClaimPeriodFrom = $("#txtClaimPeriodFrom").val();
            if (txtClaimPeriodFrom.trim() != "") {
                $("#txtClaimPeriodFrom").removeClass('required');
                $("#txtClaimPeriodFrom").addClass('valid'); cheval();
            }
            else {
                $("#txtClaimPeriodFrom").removeClass('valid');
                $("#txtClaimPeriodFrom").addClass('required'); cheval();
            }
        });

        $("#txtClaimPeriodTo").keyup(function () {

            var txtClaimPeriodTo = $("#txtClaimPeriodTo").val();
            if (txtClaimPeriodTo.trim() != "") {
                $("#txtClaimPeriodTo").removeClass('required');
                $("#txtClaimPeriodTo").addClass('valid');
                getmonth(txtClaimPeriodTo);
                // cheval();
            }
            else {
                $("#txtClaimPeriodTo").removeClass('valid');
                $("#txtClaimPeriodTo").addClass('required');
                //cheval();
            }
        });
        $("#txtClaimPeriodTo").change(function () {

            var txtClaimPeriodTo = $("#txtClaimPeriodTo").val();
            if (txtClaimPeriodTo.trim() != "") {
                $("#txtClaimPeriodTo").removeClass('required');
                $("#txtClaimPeriodTo").addClass('valid');
                getmonth(txtClaimPeriodTo);
                //cheval();
            }
            else {
                $("#txtClaimPeriodTo").removeClass('valid');
                $("#txtClaimPeriodTo").addClass('required');
                //cheval();
            }
        });

        $("#txtAmount").keyup(function () {
            var txtContractFrom = $("#txtAmount").val();
            if (txtContractFrom.trim() != "") {
                $("#txtAmount").removeClass('required');
                $("#txtAmount").addClass('valid');
                cheval();
            }
            else {
                $("#txtAmount").removeClass('valid');
                $("#txtAmount").addClass('required');
                cheval();
            }
        });
        $("#txtAmount").change(function () {
            var txtContractFrom = $("#txtAmount").val();
            if (txtContractFrom.trim() != "") {
                $("#txtAmount").removeClass('required');
                $("#txtAmount").addClass('valid');
                cheval();
            }
            else {
                $("#txtAmount").removeClass('valid');
                $("#txtAmount").addClass('required');
                cheval();
            }
        });

        $("#txtProductCode").keyup(function () {
            var txtContractFrom = $("#txtProductCode").val();
            if (txtContractFrom.trim() != "") {
                $("#txtProductCode").removeClass('required');
                $("#txtProductCode").addClass('valid');
                cheval();
            }
            else {
                $("#txtProductCode").removeClass('valid');
                $("#txtProductCode").addClass('required');
                cheval();
            }
        });
        $("#txtProductCode").change(function () {
            var txtContractFrom = $("#txtProductCode").val();
            if (txtContractFrom.trim() != "") {
                $("#txtProductCode").removeClass('required');
                $("#txtProductCode").addClass('valid');
                cheval();
            }
            else {
                $("#txtProductCode").removeClass('valid');
                $("#txtProductCode").addClass('required');
                cheval();
            }
        });
        $("#txtOUCode").keyup(function () {
            var txtContractFrom = $("#txtOUCode").val();
            if (txtContractFrom.trim() != "") {
                $("#txtOUCode").removeClass('required');
                $("#txtOUCode").addClass('valid');
                cheval();
            }
            else {
                $("#txtOUCode").removeClass('valid');
                $("#txtOUCode").addClass('required');
                cheval();
            }
        });
        $("#txtOUCode").change(function () {
            var txtContractFrom = $("#txtOUCode").val();
            if (txtContractFrom.trim() != "") {
                $("#txtOUCode").removeClass('required');
                $("#txtOUCode").addClass('valid');
                cheval();
            }
            else {
                $("#txtOUCode").removeClass('valid');
                $("#txtOUCode").addClass('required');
                cheval();
            }
        });
    });

    function getmonth(date) {
        if (date.length == 10) {
            var ddd = isgetmonthyear(date);
            if (ddd == "Error") {
                $("#txtClaimMonth").val('')
            }
            else {
                $("#txtClaimMonth").val(ddd)
            }
        }
        else {
            $("#txtClaimMonth").val('')
        }
    }
    function isgetmonthyear(evt) {
        var retnval;
        var str = evt;
        var array = str.split('-');

        if (array[1] == "01") {
            retnval = "January-" + array[2];
            return retnval;
        }
        if (array[1] == "02") {
            retnval = "February-" + array[2]; return retnval;
        }
        if (array[1].trim() == "03") {
            retnval = "March-" + array[2]; return retnval;
        }
        if (array[1].trim() == "04") {
            retnval = "April-" + array[2]; return retnval;
        }
        if (array[1].trim() == "05") {
            retnval = "May-" + array[2]; return retnval;
        }
        if (array[1].trim() == "06") {
            retnval = "June-" + array[2]; return retnval;
        }
        if (array[1].trim() == "07") {
            retnval = "July-" + array[2]; return retnval;
        }
        if (array[1].trim() == "08") {
            retnval = "August-" + array[2]; return retnval;
        }
        if (array[1].trim() == "09") {
            retnval = "September-" + array[2]; return retnval;
        }
        if (array[1].trim() == "10") {
            retnval = "October-" + array[2]; return retnval;
        }
        if (array[1].trim() == "11") {
            retnval = "November-" + array[2]; return retnval;
        }
        if (array[1].trim() == "12") {
            retnval = "December-" + array[2]; return retnval;
        }
        else {
            retnval = "Error"; return retnval;
        }
        return retnval;
    }
    $('#txtOUCode').blur(function () {
        var OucodeBussiness = document.getElementById('txtOUCode').value;
        var Student =
       {
           "OUCode": OucodeBussiness
       };
        $.ajax({
            url: '../TravelClaimNew/ChangeBussinessSegment/',
            data: JSON.stringify(Student),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#txtFC").val(data[0].OUCode);
            },
            error: function (result) {
                jAlert("Error.", "Error");
                return false;
            }
        });
    });
</script>
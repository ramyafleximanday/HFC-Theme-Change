@model IEnumerable<IEM.Areas.EOW.Models.ECFDataModel>
@{

    WebGrid grid = new WebGrid(source: Model, canSort: true, canPage: true);
    int rowVal = 0;
}
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>
<div style="margin-top:17px;" id="mainll" class="overflowx">
    @functions {
        public static string Sorter(string columnName, string columnHeader, WebGrid grid)
        {
            return string.Format("{0} {1}", columnHeader, grid.SortColumn == columnName ?
                grid.SortDirection == SortDirection.Ascending ? "▲" :
                "▼" : string.Empty);
        }
    }
    @grid.GetHtml(
                tableStyle: "tableSmall table-bordered table-hover table-responsive ",

                columns: grid.Columns
                (
                  grid.Columns(grid.Column("S No", format: item => rowVal = rowVal + 1),
                  grid.Column("SupplierorEmployee", Sorter("SupplierorEmployee", "Supplier/Employee", grid)),
                  grid.Column("SupplierorEmployeename", Sorter("SupplierorEmployeename", "Supplier/Employeename", grid)),
                  grid.Column("ECFRaiser", Sorter("ECFRaiser", "ECF Raiser", grid)),
                  grid.Column("DocTypeName", Sorter("DocTypeName", "Doc Type Name", grid)),
                  grid.Column("DocSubTypeName", Sorter("DocSubTypeName", "Doc SubType Name", grid)),
                  grid.Column("CreateMode", Sorter("CreateMode", "Create Mode", grid)),
                  grid.Column("ClaimMonth", Sorter("ClaimMonth", "Claim Month", grid)),
                  grid.Column("ECFAmount", Sorter("ECFAmount", "ECF Amount", grid)),
            // grid.Column("Despatchdate", Sorter("Despatchdate", "Despatch date", grid)),
            //grid.Column("CourierName", Sorter("CourierName", "Courier Name", grid)),
            // grid.Column("AWBNo", Sorter("AWBNo", "AWBNo", grid)),
                  grid.Column("ECFStatus", Sorter("ECFStatus", "ECF Status", grid)),
            // grid.Column("CancelBy", Sorter("CancelBy", "Cancel By", grid)),
            //grid.Column("CancelDate", Sorter("CancelDate", "Cancel Date", grid)),
                  grid.Column("CurrencyCode", Sorter("CurrencyCode", "Currency Code", grid)),
                  grid.Column("CurrencyAmount", Sorter("CurrencyAmount", "Currency Amount", grid)),
                  grid.Column("CurrencyRate", Sorter("CurrencyRate", "Currency Rate", grid)),
            // grid.Column("ReducedAmount", Sorter("ReducedAmount", "Reduced Amount", grid)),
            // grid.Column("ProcessedAmount", Sorter("ProcessedAmount", "Processed Amount", grid)),
                  grid.Column("EcfRemark", Sorter("EcfRemark", "Ecf Remark", grid))
                  )))
    @if (ViewBag.Message != null)
    {  <div align="center" class="borderStyle">
        <h6 class="row" style="font-weight:normal;">
            @ViewBag.Message
        </h6>
    </div>
    }
</div>
@*<div><label>Page: @(grid.PageIndex + 1) of @grid.PageCount</label><label> - Total No Of Records:@grid.TotalRowCount</label></div>*@
<table class="myTableStyleTabNew" align="center">
    <tr>
        <td>
            <div>
                <button type="button" class="btn btn-danger" value="Cancel" onclick="Update()"><span style="color:white;" class="glyphicon glyphicon-remove-sign"></span>Confirm</button>
            </div>
        </td>
        <td>
            <div>
                <button type="button" class="btn btn-warning" value="Close" onclick="Cancel()"> <span style="color:white;" class="glyphicon glyphicon-remove"></span>Close</button>
            </div>
        </td>
    </tr>
</table>
<script>
    function Cancel() {

        objDialogyCentral.remove();
        location.href = '@Url.Action("ECFCancellation", "ECF")?' + new Date().getTime();
    }
    function ViewNext(ecfgid) {
        var url = '@Url.Action("CancellationView", "ECF")?id=' + ecfgid + '&' + new Date().getTime();
        objDialogyCentral.load(url);
        objDialogyCentral.dialog({ title: 'ECF Cancellation View', width: '1245', height: '400' });
        objDialogyCentral.dialog("open");
    }
    function Update() {
        $.ajax({
            url: '../ECF/UpdateCancellation',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                isSuccess = result;
                @*jAlert(result, "Information", function (r) {
                    if (r == true) {
                        location.href = '@Url.Action("ECFCancellation", "ECF")?' + new Date().getTime();
                    }
                });*@
                jConfirm(result + "! Do you want to Cancel next item? ", "Information", function (u) {
                    if (u == true) {
                        showProgress();
                        $.ajax({
                            url: '../ECF/GetAutodisplayofNextItem/',
                            data: '',
                            type: 'POST',
                            contentType: 'application/json; charset=utf-8',
                            success: function (data, resultstatus) {
                                if (resultstatus == "No Record") {
                                    hideProgress();
                                    jAlert("No further Item's to Cancel!", "Message");
                                    location.href = '@Url.Action("ECFCancellation", "ECF")?' + new Date().getTime();
                                }
                                else if (resultstatus == "success") {
                                    hideProgress();
                                    ViewNext(data);
                                }
                                else {
                                    jAlert("Error.", resultstatus);
                                    return false;
                                }
                            },
                            error: function (result) {
                                jAlert("Error.", result);
                                return false;
                            }
                        });
                    }
                    else {
                        hideProgress();
                        location.href = '@Url.Action("ECFCancellation", "ECF")?' + new Date().getTime();
                    }
                });
                 
            },
        })
    }
</script>
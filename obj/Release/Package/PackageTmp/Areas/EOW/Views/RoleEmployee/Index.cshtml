@model IEnumerable<IEM.Areas.EOW.Models.SupClassificationModel>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    WebGrid grid = new WebGrid(source: Model, canSort: false, canPage: false);
    int rowVal = 0;
}
<link href="@Url.Content("~/Content/Rmax_Site.css")" rel="stylesheet" type="text/css" />

<div class="pageHeadingLayout">
    <span class="pageHeading">Role Vs Employee</span>
</div>
<div class="well">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <table class="myTableStyleTabNew" width="100%">
            <tr>
                <td width="20%">
                    <span>Role</span>
                    <br />
                    <input type="text"
                           name="filter_role"
                           id="RoleId"
                           value="@ViewBag.filter_role"
                           class="fstextbox" />
                </td>
                <td width="20%">
                    <span>Role Group</span>
                    <br />
                    <input type="text"
                           name="filter_group"
                           id="RoleGroupId"
                           value="@ViewBag.filter_group"
                           class="fstextbox" />
                </td>
                <td width="60%">
                    @if (ViewBag.alert != "No Records")
                    {
                        <button type="button" id="btnexport" value="New Document Group" style="margin-top:20px;" onclick="Export()" class="btn btn-primary">
                            <span style="color:white;" class="glyphicon glyphicon-export"></span> Export
                        </button>
                    }

                    <button class="btn btn-primary" id="btnsearch" value="Search" name="command" type="submit" style="margin-top:20px;color:white;"><span style="color:white;" class="glyphicon glyphicon-search"></span> Search</button>
                    <button class="btn btn-primary" id="btnclear" value="Clear" name="command" type="button" onclick="refresh()" style="margin-top:20px;"><span style="color:white;" class="glyphicon glyphicon-refresh"></span> Clear</button>
                </td>
            </tr>
        </table>

        <div class="table-responsive" style="margin-top:10px;">
            @grid.GetHtml(
             htmlAttributes: new { id = "gridRoleEmployeeid" },
             tableStyle: "tableSmall table-bordered table-hover",
                columns: grid.Columns
                (
                grid.Columns(grid.Column("SlNo", style: "slno", format: item => rowVal = rowVal + 1),
                grid.Column(header: "Role", columnName: "Role"),
                grid.Column(header: "Role Group", columnName: "RoleGroup"),
                grid.Column(header: "Action", style: "action",
                format: @<text>
                    <input type="hidden" id="itemid" name="RollEmployee" value="@item.Roleid" />
                    <input type="hidden" id="itemrole" name="RollEmployee" value="@item.Role" />
                    <span class="btn btn-link Color" onclick="btnselect(@item.Roleid)" id="newmap_@item.Roleid">Map Employee</span>
                </text>))))
        </div>
    }
</div>
<div id="ForPartialViewEmployeeMapping"></div>

<script type="text/javascript">
    var objDialogEmployeeMapping;
    $(document).ready(function () {

        objDialogEmployeeMapping = $("[id$='ForPartialViewEmployeeMapping']");
        objDialogEmployeeMapping.dialog({
            autoOpen: false,
            modal: true,
            width: 800,
            height: 600,
            duration: 250
        });

        $('#gridRoleEmployeeid tr th:nth-child(4)').addClass("nosort");
        $('#gridRoleEmployeeid').dataTable({
            "aoColumnDefs": [{
                "aTargets": ["nosort"],
                "bSortable": false
            }]
        }).css("width", "99%");
    });

    function btnselect(id) {
        var tr = $(this).parents('tr:first');
        var Value = 'MapEmployee';
        var Role = tr.find("#itemrole").val();
        ListVal = []
        ListVal.push(id);
        ListVal.push(Value);
        ListVal.push(Role);

        var url = '@Url.Action("EmployeeMapping", "RoleEmployee")?list=' + ListVal + '&' + new Date().getTime();
        objDialogEmployeeMapping.load(url);
        objDialogEmployeeMapping.dialog({ title: 'Add Employee' });
        objDialogEmployeeMapping.dialog("open");
        return false;
    }
    function Export() {

        location = '../../RoleEmployee/excelexport'

    }
    function refresh() {
        $("#RoleId").val('');
        $("#RoleGroupId").val('');
        location = '@Url.Action("Clear", "RoleEmployee")';
    }
</script>

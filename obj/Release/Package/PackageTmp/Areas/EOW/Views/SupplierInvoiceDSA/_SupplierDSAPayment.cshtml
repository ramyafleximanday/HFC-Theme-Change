@using IEM.Areas.EOW.Models;
@using IEM.Common
@*@model IEM.Areas.EOW.Models.EOW_EmployeeeExpense*@
@model IEnumerable<IEM.Areas.EOW.Models.EOW_Payment>
@{
    decimal remamountp = 0;
    EOW_DataModel objd = new EOW_DataModel();
    List<EOW_Payment> lstPayment = new List<EOW_Payment>();
    lstPayment = (List<EOW_Payment>)TempData["SearchItems"];
    //decimal remamount = 0;
    if (lstPayment == null)
    {
        ViewBag.IsSearched = "no";
        lstPayment = objd.GetSupplierPayment(Session["EcfGid"].ToString(), "S").ToList();
        if (lstPayment.Count > 0)
        {
            Session["Ecfamountpaymentfirst"] = lstPayment[0].PaymentAmount.ToString();
        }
        for (int tr = 0; lstPayment.Count > tr; tr++)
        {
            if (remamountp == 0)
            {
                remamountp = Convert.ToDecimal(lstPayment[tr].PaymentAmount.ToString());
            }
            else
            {
                remamountp = remamountp + Convert.ToDecimal(lstPayment[tr].PaymentAmount.ToString());
            }
        }
    }
    if (lstPayment.Count == 0)
    {
        ViewBag.NoRecordsPayment = "NoRecords";
        ViewBag.NoRecordsFoundPayment = "No Records Found";
    }
}

<div id="wgempPaymensupplier">
    @{
        CmnFunctions objCmnFunctions = new CmnFunctions();
        var gridPayment = new WebGrid(lstPayment, canSort: true, canPage: false, rowsPerPage: 3, ajaxUpdateContainerId: "wgempPaymensupplier", ajaxUpdateCallback: "DummyFunction()");
        int rowValPayment = 0;
    }
    <br />
    <div class="table-responsive" style="max-height: 350px;">
        @gridPayment.GetHtml(
                      htmlAttributes: new { id = "wgempPaymensupplier" },
                      tableStyle: "tableSmall table-bordered",
                      mode: WebGridPagerModes.All,
                        columns:
                         gridPayment.Columns(gridPayment.Column("#", canSort: false, format: item => rowValPayment = rowValPayment + 1),
                                  gridPayment.Column("Employeecode", objCmnFunctions.Sorter("Employeecode", "Supplier Code", gridPayment), canSort: false, style: "collargeBreak"),
                                  gridPayment.Column("Employeename", objCmnFunctions.Sorter("Employeename", "Supplier Name", gridPayment), canSort: false, style: "collargeBreak"),
                                  gridPayment.Column("PaymentModeName", objCmnFunctions.Sorter("PaymentModeName", "Payment Mode", gridPayment), canSort: false, style: "collargeBreak"),
                                           gridPayment.Column("RefNoName", objCmnFunctions.Sorter("RefNoName", "Bank Account Number", gridPayment), canSort: false, style: "collargeBreak"),
                                  gridPayment.Column("Beneficiary", objCmnFunctions.Sorter("Beneficiary", "Beneficiary", gridPayment), canSort: false, style: "collargeBreak"),
                                  gridPayment.Column("Description", objCmnFunctions.Sorter("Description", "Description", gridPayment), canSort: false, style: "collargeBreak"),
                //gridPayment.Column("PaymentAmount", objCmnFunctions.Sorter("PaymentAmount", "Amount", gridPayment), canSort: false, style: "collargeBreak")
                                    gridPayment.Column(header: "Amount",
                        format: @<text>
                                        @Html.Raw(String.Format("{0:#,##}",
                                        objCmnFunctions.GetINRAmount(Convert.ToString(@item.PaymentAmount)
                       ))) </text>, style: "colamountlarge"),
                                           gridPayment.Column(header: "Action", canSort: false, style: "action",
                format: @<text>
                                            
                                                @if (item.PaymentModeName !="TDS")
                                                {
                                                    @Html.Raw("<a title='view' onclick='EmpPaymentView(" + item.Paymentgid + ")' > <span id='id' class='glyphicon glyphicon-eye-open'> </span> </a>")
                                                    if (item.PaymentModeName=="REC")
                                                    {
                                                         @Html.Raw("<a title='Edit' onclick='EmpPaymentEdit(" + item.Paymentgid + ")' > <span id='id' class='glyphicon glyphicon-edit'> </span> </a>")
                                                    @Html.Raw("<a title='Delete' onclick='EmpPaymentDelete(" + item.Paymentgid + ")' > <span id='id' class='glyphicon glyphicon-trash'> </span> </a>")
                                                    }
                                                    else
                                                    {
                                                         @Html.Raw("<a title='Edit' onclick='NewPaymentsupplier(" + item.Paymentgid + ")' > <span id='id' class='glyphicon glyphicon-edit'> </span> </a>")
                                                }
                                                    
                                                }  
                </text>)))

    </div>
    @if (@ViewBag.NoRecordsPayment == "NoRecords")
    {
        <div class="borderStyle">
            <center>
                @ViewBag.NoRecordsFoundPayment
            </center>
        </div>
    }
    else
    {
        <div>
            <table style="width:100%">
                <tr>
                    <td align="left">
                        @*&nbsp;&nbsp; Total Records : <label id="lblDirectorCount">@gridTravelmode.TotalRowCount</label>*@
                    </td>
                    <td align="right">
                        <span>
                            Total Payment Amount : <b>
                                <label id="lblpayamtgg">
                                    @objCmnFunctions.GetINRAmount(remamountp.ToString())
                                </label>
                            </b>
                        </span>
                    </td>
                </tr>
            </table>
        </div>
    }
</div>
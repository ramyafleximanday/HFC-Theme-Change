@using IEM.Areas.EOW.Models;
@using IEM.Common
@*@model IEM.Areas.EOW.Models.EOW_TravelMode*@
@model IEnumerable<IEM.Areas.EOW.Models.EOW_TravelClaim>
@{
    decimal remamount = 0;
    EOW_DataModel objd = new EOW_DataModel();
    List<EOW_TravelClaim> lst = new List<EOW_TravelClaim>();
    lst = (List<EOW_TravelClaim>)TempData["SearchItems"];
    if (lst == null)
    {
        ViewBag.IsSearched = "no";
        lst = objd.GetSuppliserDeditexcel(Session["EcfGid"].ToString(), "S").ToList();
        for (int tr = 0; lst.Count > tr; tr++)
        {
            if (remamount == 0)
            {
                remamount = Convert.ToDecimal(lst[tr].Amount.ToString());
            }
            else
            {
                remamount = remamount + Convert.ToDecimal(lst[tr].Amount.ToString());
            }
        }
        Session["invoiceDebitamnt"] = remamount.ToString();
    }
    if (lst.Count == 0)
    {
        ViewBag.NoRecords = "NoRecords";
        ViewBag.NoRecordsFound = "No Records Found";
    }

}
<div id="wgTravelmodeotab2">
    @{
        CmnFunctions objCmnFunctions = new CmnFunctions();
        var grid = new WebGrid(lst, canSort: true, canPage: false, rowsPerPage: 10, ajaxUpdateContainerId: "wgTravelmodeotab2", ajaxUpdateCallback: "DummyFunction()");
        int rowValExpense = 0;
    }
    <div class="container">
        <div>
            @grid.GetHtml(
                                          htmlAttributes: new { id = "wgTravelmodeotab2" },
                                                   tableStyle: "tableSmall table-bordered table-hover table-responsive",
                        mode: WebGridPagerModes.All,
                        columns:
                                   grid.Columns(grid.Column("#", canSort: false, format: item => rowValExpense = rowValExpense + 1),
                                                             grid.Column("NatureofExpensesName", objCmnFunctions.Sorter("NatureofExpensesName", "Nature of Expenses", grid), canSort: false),
                                                   grid.Column("ExpenseCategoryName", objCmnFunctions.Sorter("ExpenseCategoryName", "Expense Category", grid), canSort: false),
                                                   grid.Column("SubCategoryName", objCmnFunctions.Sorter("SubCategoryName", "Sub Category", grid), canSort: false),
                                                   grid.Column("ClaimMonth", objCmnFunctions.Sorter("ClaimMonth", "GL Code", grid), canSort: false),
                                                   grid.Column("FC", objCmnFunctions.Sorter("FC", "FC", grid), canSort: false),
                                                                      grid.Column("CC", objCmnFunctions.Sorter("CC", "CC", grid), canSort: false),
                                                                      grid.Column("ProductCode", objCmnFunctions.Sorter("ProductCode", "ProductCode", grid), canSort: false),
                                                                      grid.Column("OUCode", objCmnFunctions.Sorter("OUCode", "OUCode", grid), canSort: false),
                                                                                        grid.Column("Amount", objCmnFunctions.Sorter("Amount", "Amount", grid), canSort: false)))


            @if (@ViewBag.NoRecords == "NoRecords")
            {
                <div class="borderStyle" style="font-size: 16px; height: 35px;color: red;padding-left: 1%;
padding-top: 5px;">
                    @ViewBag.NoRecordsFound
                </div>
            }

        </div>
    </div>
</div>

@using IEM.Areas.EOW.Models;
@using IEM.Common
@using System.Data
@*@model IEM.Areas.EOW.Models.EOW_TravelMode*@
@model IEnumerable<IEM.Areas.EOW.Models.EOW_TravelClaim>
@{
    decimal remamount = 0;
    EOW_DataModel objd = new EOW_DataModel();
    List<EOW_TravelClaim> lst = new List<EOW_TravelClaim>();
    lst = (List<EOW_TravelClaim>)TempData["SearchItems"];
    if (lst == null)
    {
        ViewBag.IsSearched = "no";
        lst = objd.GetLocalexpdata(Session["EcfGid"].ToString(),"L").ToList();
        for (int tr = 0; lst.Count > tr; tr++)
        {
            if (remamount == 0)
            {
                remamount = Convert.ToDecimal(lst[tr].Amount.ToString());
            }
            else
            {
                remamount = remamount + Convert.ToDecimal(lst[tr].Amount.ToString());
            }
        }
        ViewBag.NoRecords = "total";
        Session["EcfamountExcelamt"] = remamount.ToString();
    }
    if (lst.Count == 0)
    {
        ViewBag.NoRecords = "NoRecords";
        ViewBag.NoRecordsFound = "No Records Found";
    }

}
<div id="wgTravelmodettlocal">
    @{
        CmnFunctions objCmnFunctions = new CmnFunctions();
        var gridTravelmode = new WebGrid(lst, canSort: true, canPage: true, rowsPerPage: 5, ajaxUpdateContainerId: "wgTravelmodettlocal", ajaxUpdateCallback: "DummyFunction()");
        int rowValExpense = 0;
    }

    <div class="container">
        <br />
        <div>
            @gridTravelmode.GetHtml(
                                          htmlAttributes: new { id = "wgTravelmodettlocal" },
                                                   tableStyle: "tableSmall table-bordered table-hover table-responsive",
                        mode: WebGridPagerModes.All,
                        columns:
                                   gridTravelmode.Columns(gridTravelmode.Column("#", canSort: false, format: item => rowValExpense = rowValExpense + 1),
                                                    gridTravelmode.Column("NatureofExpensesName", objCmnFunctions.Sorter("NatureofExpensesNames", "Nature of Expenses", gridTravelmode), canSort: false),
                                                   gridTravelmode.Column("ExpenseCategoryName", objCmnFunctions.Sorter("ExpenseCategoryName", "Expense Category", gridTravelmode), canSort: false),
                                                   gridTravelmode.Column("SubCategoryName", objCmnFunctions.Sorter("SubCategoryName", "Sub Category", gridTravelmode), canSort: false),

                             gridTravelmode.Column("raisermodeId", objCmnFunctions.Sorter("raisermodeId", "Employee Code", gridTravelmode), canSort: false),
                            gridTravelmode.Column("raisermodeName", objCmnFunctions.Sorter("raisermodeName", "Employee Name", gridTravelmode), canSort: false),
                           gridTravelmode.Column("Branch", objCmnFunctions.Sorter("Branch", "Branch", gridTravelmode), canSort: false),


                                                   gridTravelmode.Column("ClaimPeriodFrom", objCmnFunctions.Sorter("ClaimPeriodFrom", "From Date", gridTravelmode), canSort: false),
                                                             gridTravelmode.Column("ClaimPeriodTo", objCmnFunctions.Sorter("ClaimPeriodTo", "To Date", gridTravelmode), canSort: false),
                                                   gridTravelmode.Column("TravelModeName", objCmnFunctions.Sorter("TravelModeName", "Travel Mode", gridTravelmode), canSort: false),
                                                    gridTravelmode.Column("Rate", objCmnFunctions.Sorter("Rate", "Rate", gridTravelmode), canSort: false),
                                                    gridTravelmode.Column("Distance", objCmnFunctions.Sorter("Distance", "Distance", gridTravelmode), canSort: false),
                                                    gridTravelmode.Column("FC", objCmnFunctions.Sorter("FC", "FC", gridTravelmode), canSort: false),
                                                                      gridTravelmode.Column("CC", objCmnFunctions.Sorter("CC", "CC", gridTravelmode), canSort: false),
                                                                      gridTravelmode.Column("ProductCode", objCmnFunctions.Sorter("ProductCode", "ProductCode", gridTravelmode), canSort: false),
                                                                      gridTravelmode.Column("OUCode", objCmnFunctions.Sorter("OUCode", "OUCode", gridTravelmode), canSort: false),
                                                                               gridTravelmode.Column("Amount", objCmnFunctions.Sorter("Amount", "Amount", gridTravelmode), canSort: false)))


            @if (@ViewBag.NoRecords == "NoRecords")
            {
                <div class="borderStyle" style="font-size: 16px; height: 35px;color: red;padding-left: 1%;
padding-top: 5px;">
                    @ViewBag.NoRecordsFound
                </div>
            }
        </div>
        @if (@ViewBag.NoRecords == "total")
        {
            <div>
                <table style="width:100%">
                    <tr>
                        <td align="right">
                            <span> Total Expense Amount : <b> @Session["EcfamountExcelamt"] </b></span>
                        </td>
                    </tr>
                </table>

            </div>
        }
    </div>
</div>

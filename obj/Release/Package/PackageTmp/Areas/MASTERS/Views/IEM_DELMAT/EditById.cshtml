@model IEM.Areas.MASTERS.Models.iem_mst_delmat

@{
    var viewfor = (string)ViewBag.viewfor;
    if (viewfor == "edit")
    {
        ViewBag.viewmode = "";
    }
    else if (viewfor == "view")
    {
        ViewBag.viewmode = "disabled";
    }
    else if (viewfor == "Delete")
    {
        ViewBag.viewmode = "disabled";
    }
}

<link href="@Url.Content("~/Content/RMchosen/chosen.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/RMScript/chosen.jquery.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    
    <table class="myTableStyleTabNew" style="width:100%;">
        <tr>
            <td style="width:100%; padding:0px 10px 0px 3px;display :none ;">
                <input name="CategoryID" id="_exceptionid" type="text" data-val="true" value="@Model.delmatexception_gid" />

            </td>
        </tr>
        <tr>

            <td style="width:100%; padding:0px 10px 0px 3px; ">
                <div id="txtdocgrpname">
                    <span>Employee ID</span>
                    <br />
                    @if (viewfor == "edit")
                    {
                        @Html.DropDownListFor(e => e.employee_gid, Model.GetEmployee, Model.employee_code, new { @class = "fstextbox  chosen-select", @style = "display: block", @id = "employee_gid" })
                    }
                    @if (viewfor == "view")
                    {
                        @Html.DropDownListFor(e => e.employee_gid, Model.GetEmployee, Model.employee_code, new { @class = "fstextbox  chosen-select", @style = "display: block", @id = "employee_gid", @disabled = "disabled" })
                    }
                    @if (viewfor == "Delete")
                    {
                        @Html.DropDownListFor(e => e.employee_gid, Model.GetEmployee, Model.employee_code, new { @class = "fstextbox  chosen-select", @style = "display: block", @id = "employee_gid", @disabled = "disabled" })
                    }
                </div>
            </td>
        </tr>
       
        <tr>

            <td style="width:100%; padding:0px 10px 0px 3px; ">
                <div id="txtCategoryName">
                    <span> Limit </span>
                    <br />
                    <input name="CategoryeName" id="_Limit"
                            class="fstextbox valid" type="text" data-val="true" value="@Model.delmatexception_limit" @ViewBag.viewmode />


                </div>
            </td>
        </tr>


        <tr>
            <td style="width:100%; padding:0px 10px 0px 3px;">
                @*<input type="button" class="btn btn-primary" value="Save" onclick="Update()" @ViewBag.viewmode />
            <input type="button" class="btn btn-warning" value="Cancel" onclick="GotoIndex()" />*@
                @if (viewfor == "view")
                {
                    <button type="button" class="btn btn-warning" value="Cancel" onclick="GotoIndex()" style="margin-top:20px;"> <span style="color:white;" class="glyphicon glyphicon-remove"></span>Close</button>

                }
                @if (viewfor == "edit")
                {
                    <button type="button" class="btn btn-primary" id="btnsave" value="Save" style="margin-top:20px;" onclick="Update()" @ViewBag.viewmode> <span class="glyphicon glyphicon-floppy-save" style="color:white;"></span>Save</button>
    <button type="button" class="btn btn-warning" value="Cancel" onclick="GotoIndex()" style="margin-top:20px;"> <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span>Cancel</button>
                }
                @if (viewfor == "Delete")
                {
                    <button type="button" class="btn btn-danger" value="Delete" onclick="Delete()" style="margin-top:20px;"> <span class="glyphicon glyphicon-trash" style="color:white;"></span>Delete</button>
    <button type="button" class="btn btn-warning" value="Cancel" onclick="GotoIndex()" style="margin-top:20px;"> <span style="color:white;" class="glyphicon glyphicon-remove-sign"></span>Cancel</button>
                }
            </td>
        </tr>
    </table>

}
<script type="text/javascript">
    $(document).ready(function () {

        $("#employee_gid").chosen({});
        $("#employee_gid_chosen").addClass("mychosen").css('width', '100%');
        $("#_Limit").keyup(function () {
            var limit = $("#_Limit").val();
            var employee_gid = $("#employee_gid").val();
            var delmatgid = $('#_exceptionid').val();
            if (limit == "" || employee_gid == 0) {
                $("#btnsave").attr("disabled", true);
            }
            else {
                $("#btnsave").removeAttr('disabled');
            }

            var txtSupplierName = $("#_Limit").val();
            if (txtSupplierName.trim() != "") {
                $("#_Limit").removeClass('required');
                $("#_Limit").addClass('valid');
            }
            else {
                $("#_Limit").removeClass('valid');
                $("#_Limit").addClass('required');
            }
        });
    });
</script>
<script type="text/javascript">
    $("#employee_gid").change(function () {
        var limit = $("#_Limit").val();
        var employee_gid = $("#employee_gid").val();
        var delmatgid = $('#_exceptionid').val();
        if (limit == "" || employee_gid == 0) {
            $("#btnsave").attr("disabled", true);
        }
        else {
            $("#btnsave").removeAttr('disabled');
        }
    });
    function Update() {
        var limit = $("#_Limit").val();
        var employee_gid = $("#employee_gid").val();
        var delmatgid = $('#_exceptionid').val();
       
        if (limit == "") {
            alert("Invalid Limit.");
            return false;
        }
        if (employee_gid == 0) {
            alert("Invalid Employee Code");
            return false;
        }


        var Exceptionmodel = { "delmatexception_to": employee_gid, "delmatexception_limit": limit, "delmatexception_gid": delmatgid };
        
        $.ajax({
            url: '../UpdateDelmatException/',
            data: JSON.stringify(Exceptionmodel),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',

            success: function (result) {
                isSuccess = result;
                    if (result == "Updated Suceesfully") {
                        jAlert(result, "Information", function (r) {
                            if (r = true) { location.reload(); }
                        });
                    }
                    //jAlert(result, "Error");
                    //location.reload();

               
            },
            error: function (result) {
                isSuccess = result;
            }

        })

    }
    function GotoIndex() {
        window.parent.jQuery('#ForPartialViewforexceptionbyID').dialog('close');
    }
    function Delete() {
        var id = $('#_exceptionid').val();
        jConfirm("Do you want to delete this Delmat?", "Delete Category", function (callback) {
            if (callback == true) {
                var DelmatModel = { "delmatexception_gid": id };
                $.ajax({
                    url: '../DeleteDelmatExceptionById/',
                    data: JSON.stringify(DelmatModel),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',

                    success: function (result) {
                        isSuccess = result;
                        if (result == "Record deleted successfully !") {
                            jAlert(result, "Information", function (r) {
                                if (r = true) { location.reload(); }
                            });
                        }
                    },
                    error: function (result) {
                        isSuccess = result;
                    }

                })
            } else {
                return false;
            }
        });
       

    }

</script>

 @using IEM.Common
@using IEM.Areas.MASTERS.Models
 
 @{
     var dis = ViewBag.viewfor;
}
<link href="@Url.Content("~/Content/Rmax_Site.css")" rel="stylesheet" type="text/css" />
@{
    IEM_MST_DELMAT dm = new IEM_MST_DELMAT();
    List<AttachFile> lst = new List<AttachFile>();
    AttachFile lst1 = new AttachFile();
    string IsChecker = "";
    if (lst == null || lst.Count == 0 || dis != "disabled")
    {
        lst = dm.GetDelmatAttachment((Session["delmatgid"]).ToString()).ToList();
    }
    else if(dis =="disabled" || dis==" ")
   {
       lst = dm.GetDelmatAttachment((Session["Update_delmat_gid"]).ToString()).ToList();
   }
    


}
<style type="text/css">
    .hide {
        display: none;
    }
</style>

@*<div class="pageHeadingLayout">
    <span class="pageHeading">Attachment </span>
</div>*@
 
<div id="ForEmployeeDetails" class="well">
    @{
        CmnFunctions objCmnFunctions = new CmnFunctions();
        var gridAttachment = new WebGrid(lst, canSort: true, canPage: true, rowsPerPage: 10, ajaxUpdateContainerId: "ForEmployeeDetails", ajaxUpdateCallback: "DummyFunction9()");


        int rowVal = 0;
    }
    <div class="table-responsive" style="margin-top:10px; width:100%">
@if (dis != "disabled")
                        {
        @gridAttachment.GetHtml(
        htmlAttributes: new { id = "wgridEmployeeDetails" },
                    tableStyle: "tableSmall table-bordered table-hover",
        mode: WebGridPagerModes.All,
        columns:
                     gridAttachment.Columns(
                     gridAttachment.Column("S.No", style: "slno", format: item => rowVal = rowVal + 1, canSort: false),
                                                 gridAttachment.Column("AttachmentFilenameId", objCmnFunctions.Sorter("AttachmentFilenameId", "Attachment", gridAttachment), canSort: false, style: "dattach"),
           
          gridAttachment.Column("AttachmentFilename", objCmnFunctions.Sorter("AttachmentFilename", "Attachment", gridAttachment), canSort: false, style: "dattach"),
                                     // gridAttachment.Column("AttachmentTypeName", objCmnFunctions.Sorter("AttachmentTypeName", "Attachment Type", gridAttachment), canSort: false, style: "cattach"),
                                      gridAttachment.Column("AttachmentDescription", objCmnFunctions.Sorter("AttachmentDescription", "Description", gridAttachment), canSort: false, style: "dattach"),
                                      gridAttachment.Column("AttachmentDate", objCmnFunctions.Sorter("AttachmentDate", "Attached Date", gridAttachment), canSort: false, style: "aattach"),
                                      gridAttachment.Column("AttachmentBy", objCmnFunctions.Sorter("AttachmentBy", "Attached By", gridAttachment), canSort: false, style: "aattach"),
                             gridAttachment.Column(header: "Action", canSort: false, style: "action",
              
                     format: @<text>
            @Html.Raw("<a data-modal='' style='text-decoration:none;' href='../IEM_DELMAT/Download/" + item.AttachmentFilenameId + "' id='" + item.AttachmentFilenameId + "' title='Detail'><span id='" + item.AttachmentFilenameId + "' class='glyphicon glyphicon-eye-open'></span> </a>")
            @*@if (item.attachment_by == objCmnFunctions.GetLoginUserGid())
                        {*@
                @Html.Raw("<a title='Delete' style='text-decoration:none;' onclick='DeleteAttachment(" + item.AttachmentFilenameId + ")' ><span id='id' class='glyphicon glyphicon-trash'></span></a>")
                        @*}*@
        </text>)))
                        }
else
{

    @gridAttachment.GetHtml(
        htmlAttributes: new { id = "wgridEmployeeDetails" },
                    tableStyle: "tableSmall table-bordered table-hover",
      //  mode: WebGridPagerModes.All,
        columns:
                     gridAttachment.Columns(
                     gridAttachment.Column("S.No", style: "slno", format: item => rowVal = rowVal + 1, canSort: false),
                                                 gridAttachment.Column("AttachmentFilenameId", objCmnFunctions.Sorter("AttachmentFilenameId", "Attachment", gridAttachment), canSort: false, style: "dattach"),

          gridAttachment.Column("AttachmentFilename", objCmnFunctions.Sorter("AttachmentFilename", "Attachment", gridAttachment), canSort: false, style: "dattach"),
        // gridAttachment.Column("AttachmentTypeName", objCmnFunctions.Sorter("AttachmentTypeName", "Attachment Type", gridAttachment), canSort: false, style: "cattach"),
                                      gridAttachment.Column("AttachmentDescription", objCmnFunctions.Sorter("AttachmentDescription", "Description", gridAttachment), canSort: false, style: "dattach"),
                                      gridAttachment.Column("AttachmentDate", objCmnFunctions.Sorter("AttachmentDate", "Attached Date", gridAttachment), canSort: false, style: "aattach"),
                                      gridAttachment.Column("AttachmentBy", objCmnFunctions.Sorter("AttachmentBy", "Attached By", gridAttachment), canSort: false, style: "aattach")
                   ))
}
     
    </div>

    @if (@ViewBag.NoRecordsFound != null && @ViewBag.NoRecordsFound != "")
    {
        <div class="gridMessage">
            @ViewBag.NoRecordsFound
        </div>
    }
    else
    {
        <div class="gridCount" style="text-align:left;">Page <b>@(gridAttachment.PageIndex + 1)</b> of <b>@gridAttachment.PageCount</b> - Total No Of Records: <b>@gridAttachment.TotalRowCount</b></div>
    }


</div>
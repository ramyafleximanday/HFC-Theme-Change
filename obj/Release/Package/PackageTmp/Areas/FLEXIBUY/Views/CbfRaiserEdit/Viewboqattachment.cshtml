@model IEM.Areas.FLEXIBUY.Models.CbfSumEntity
           @using IEM.Areas.FLEXIBUY.Models
@{
    var grid = new WebGrid();
    var viewfor = (string)ViewBag.viewfor;
    if (viewfor == "edit")
    {
        ViewBag.viewmode = "";
    }
    else if (viewfor == "view" || viewfor == "cancel" || viewfor == "delete")
    {
        ViewBag.viewmode = "disabled";
    }
    ViewBag.Title = "Index";
    int rowcount = 0;

    string cbfattchemnet = Session["cbfgid"].ToString();
    Session["cbfdetails"] = cbfattchemnet;
    CbfSumEntity objMAttachment = new CbfSumEntity();
    CbfSumModel objRep = new CbfSumModel();
    if (Session["cbfdetails"].ToString() == "")
    {
        objMAttachment.amoun = cbfattchemnet;
        objMAttachment = objRep.Attachmentname(objMAttachment);
        Model.attachment = objMAttachment.attachment;
    }
    else
    {
        objMAttachment.amoun = cbfattchemnet;
        objMAttachment = objRep.Attachmentname(objMAttachment);
        Model.attachment = objMAttachment.attachment;
    }
    objMAttachment.attachmentDate = DateTime.Now.ToShortDateString();
        grid = new WebGrid(source: Model.attachment, canPage: true, canSort: true, rowsPerPage: 5, ajaxUpdateContainerId: "gridattachment", ajaxUpdateCallback: "grid()");

    }




        <div id="createsupattachment" class="borderstyle panel panel-default">
            <table class="myTableStyleTab" align="center" id="hidetisforview">
                <tr>
                    <td>
                        <span>Document Date</span> <br />
                        <input type="text" name="Cbf_AttachDate" id="_AttachDate" value="@Model.attachmentDate" maxlength="10" title="Document Date" class="textboxStyle" />
                    </td>
                    <td>
                        <span>Select File</span><br />                      
                        <form id="frmDeactivation">
                            @Html.TextBoxFor(m => m.boqfile, new { @id = "txtUploadFile1", type = "file", @class = "txtUploadSupAttachmentFile" })
                        </form>
                    </td>                   
                    <td>
                        <span>File Name</span> <br />
                        <input name="_AttachedFileName" readonly="readonly" id="_AttachedFileName" class="textboxStyle" title="File Name" type="text" value="@Model.attachment1" />
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <span>Description</span> <br />
                        <input name="_AttachDescription" id="_AttachDescription" class="textboxStyle" title="Description" type="text" value="@Model.des" />
                    </td>
                    <td>
                        <input type="button" name="btnSaveSupAttachment" id="btnSaveSupAttachment" class="btn btn-primary" value="Save" onclick="SaveSupAttachment()" />
                        &nbsp;&nbsp; &nbsp;&nbsp;
                        <input type="button" class="btn btn-primary" id="btnclear" onclick="refresh()" name="command" value="Clear" />
                    </td>
                </tr>
            </table>
            @*<table class="myTableStyleTab" align="center">
                <tr>
                    <td>
                        <span>Document Date</span> <br />
                        <input type="text" @ViewBag.viewmode name="Cbf_AttachDate" id="_AttachDate" value="@Model.attachmentDate" maxlength="10" title="Document Date" class="textboxStyle valid" />
                        
                    </td>
                    <td>
                        <span>Select File</span><br />
                        @*<input type="file" @ViewBag.viewmode name="UploadFile" id="txtUploadFile" multiple />
                        <form id="frmDeactivation">
                            @Html.TextBoxFor(m => m.boqfile, (string)ViewBag.viewmode, new { @id = "fileupsupplier", type = "file", @class = "txtUploadSupAttachmentFile" })
                        </form>
                    </td><td></td>
                    <td>
                        <span>File Name</span> <br />
                        <input name="_AttachedFileName" @ViewBag.viewmode readonly="readonly" id="_AttachedFileName" class="textboxStyle" title="File Name" type="text" value="@Model.attachment1" />
                    </td></tr><tr>
                    <td colspan="2">
                        <span>Description</span> <br />
                        <input name="_AttachDescription" @ViewBag.viewmode id="_AttachDescription" class="textboxStyle" title="Description" type="text" value="@Model.des" />
                    </td>
                </tr>
                <tr>
                    <td colspan="4" style="text-align:right;padding-right:5%;">

                        <input type="button" name="btnSaveSupAttachment" @ViewBag.viewmode id="btnSaveSupAttachment" class="btn btn-primary" value="Save" onclick="SaveSupAttachment()" />

                        <input type="button" class="btn btn-primary" @ViewBag.viewmode id="btnclear" onclick="refresh()" name="command" value="Clear" />
                        <input type="button" class="btn btn-primary" id="btnback" onclick="back()" name="command" value="Back" />
                    </td>
                </tr>

            </table>*@
        </div>
     
        <div class=" panel panel-default" id="gridattachment1">

            @functions {
                public static string Sorter(string columnName, string columnHeader, WebGrid grid)
                {
                    return string.Format("{0} {1}", columnHeader, grid.SortColumn == columnName ?
                        grid.SortDirection == SortDirection.Ascending ? "▲" :
                        "▼" : string.Empty);
                }
            }
            @grid.GetHtml(
                tableStyle: "tableSmall table-bordered ",
                htmlAttributes: new { id = "gridattachment" },
                          mode: WebGridPagerModes.All,
                columns: grid.Columns
                (
                grid.Column("Sl", format: a => rowcount = rowcount + 1),
                grid.Column("attacheddate", Sorter("attacheddate", "Attachment Date", grid)),
                grid.Column("filename", Sorter("filename", "File name", grid), format: @<text> <a title='click here to download' onclick='DownloadSupAttachment("@item.filename")'> @item.filename </a></text>),
                grid.Column("description", Sorter("description", "Description", grid)),
                grid.Column(header: "Action", canSort: false, style: "action",
                format: @<text>
                    <input type="button" value="Delete" class="btn btn-link" id="@item.attachGid" @ViewBag.viewmode title="Delete" onclick="attachmentDetele(id)" />
                </text>)))

        </div>
        <div class="borderStyle">
            @ViewBag.NoRecordsFound
        </div>
        <span>Page: @(grid.PageIndex + 1) of @grid.PageCount</span>  <span> - Total No Of Records:@grid.TotalRowCount</span>
    
<script>
    function back() {
        window.parent.jQuery('#viewboqattachment').dialog('close');
    }
    function refresh() {
        $("#txtUploadFile").val("");
        $("#_AttachedFileName").val("");
        $("#_AttachDescription").val("");
    }
    function DownloadSupAttachment(filename) {
        var supattachmentmodel =
                {
                    "attachment1": filename
                };

        $.post('../CbfRaiserEdit/DownloadDocument?' + new Date().getTime(), supattachmentmodel,
        function (data) {
            if (data == 0) {
                //location = location.href;
                jAlert("Error Occured", "Error", function () {
                    return false;
                });
                return false;

            } else { window.location = '../CbfRaiserEdit/Download' }
        }, 'json');
    }
    function attachmentDetele(id) {
        var id2 = '@Session["cbfdetails"].ToString()';
        var supattachmentmodel =
                {
                    "attachment1": id
                };

        $.post('../CbfRaiserEdit/DeleteAttachment?' + new Date().getTime(), supattachmentmodel,
        function (data) {
            if (data == 0) {
                //location = location.href;
                jAlert("Error Occured", "Error", function () {
                    return false;
                });
                return false;

            } else { $('#attach').load('../CbfRaiserEdit/Viewboqattachment?id=' + id2); }
        }, 'json');

    }
    //$('#txtUploadFile').on('change', function (e) {
    //    var files = e.target.files;
    //    if (files.length > 0) {
    //        if (window.FormData !== undefined) {
    //            var data = new FormData();
    //            for (var x = 0; x < files.length; x++) {
                  
    //                data.append("temp_" + x, files[x]);
    //            }
    //            var fname = $("#_AttachedFileName").val();
    //            $.ajax({
    //                type: "POST",
    //                url: '../CbfRaiser/UploadedFiles/?fname=' + fname,
    //                contentType: false,
    //                processData: false,
    //                data: data,
    //                success: function (result) {

    //                    $("#_AttachedFileName").val(result);
    //                },
    //                error: function (xhr, status, p3, p4) {
    //                    var err = "Error " + " " + status + " " + p3 + " " + p4;
    //                    if (xhr.responseText && xhr.responseText[0] == "{")
    //                        err = JSON.parse(xhr.responseText).Message;
    //                    console.log(err);
    //                }
    //            });
    //        } else {
    //            alert("This browser doesn't support HTML5 file uploads!");
    //        }
    //    }
    //});

    function SaveSupAttachment() {
        id = '@Session["cbfdetails"].ToString()';
        var AttachDate = $("#_AttachDate").val();
        var AttachFileName = $("#_AttachedFileName").val();
        var AttachDescription = $("#_AttachDescription").val();
        var attachmodel = {
            "selectedValue":$('#viewboqdate').val(),
            "amoun": id,
            "attachment1": AttachFileName,
            "des": AttachDescription,
            "attachmentdate": AttachDate
        };

        if (AttachDate == null || AttachDate == "" || AttachDate == 0) {
            jAlert("Please Select Attachment Date.", "Error");
            return false;
        }

        if (AttachFileName == null || AttachFileName == "" || AttachFileName == 0) {
            jAlert("Please Select Attachmnet.", "Error");
            return false;
        }
        if (AttachDescription == null || AttachDescription == "" || AttachDescription == 0) {
            jAlert("Please Enter Descritption.", "Error");
            return false;
        }
        $.post('../CbfRaiserEdit/Viewboqattachment?' + new Date().getTime(), attachmodel,
        function (data) {

            if (data == 0) {
                //location = location.href;
                jAlert("Error Occured", "Error", function () {
                    return false;
                });
                return false;

            } else {
                $('#attach').load('../CbfRaiserEdit/Viewboqattachment?id=' + id + '&' + new Date().getTime()); jAlert("Inserted Successfully", "Message"); refresh();
            }
        }, 'json');
    }
    var jqXHRData;

    $(document).ready(function () {
        if ('@ViewBag.viewmode' == "disabled") {
            $("#gridattachment td:nth-child(5),#gridattachment th:nth-child(5)").hide();
            $("#hidetisforview").hide();
        }
        $("#_AttachDate").datepicker(
         {
             dateFormat: 'dd-mm-yy'            
         });
    });
    function initAutoFileUpload() {
        'use strict';

        $('#txtUploadFile1').fileupload({
          
            autoUpload: true,
            url: '../CbfRaiser/UploadedFiles?' + new Date().getTime(),
            dataType: 'json',
            add: function (e, data) {
                var jqXHR = data.submit()
                    .success(function (data, textStatus, jqXHR) {
                        if (data.isUploaded) {
                            jAlert(data.message, "");
                        }
                        else {
                            jAlert(data.message, "");
                        }
                        //  $("#gridattachment").load('../PRRaiser/PRattachgrid?' + new Date().getTime());

                        $("#_AttachedFileName").val(data.message);
                    })
                    .error(function (data, textStatus, errorThrown) {
                        if (typeof (data) != 'undefined' || typeof (textStatus) != 'undefined' || typeof (errorThrown) != 'undefined') {
                            jAlert(textStatus + errorThrown + data,"Error");
                        }
                    });
            },
            fail: function (event, data) {
                if (data.files[0].error) {
                    alert(data.files[0].error);
                }
            }
        });
    }
 
</script>
@model IEM.Areas.IFAMS.Models.capitalizationMaker
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>
@{
    IEM.Common.CmnFunctions commfa = new IEM.Common.CmnFunctions();
}
@*@using(Html.BeginForm())
    {*@
<div id="dvAddtax">
    <table align="center" width="100%">

        <tr>
            <td style="padding:10px;">
                <div class="panel panel-default">
                    <table align="center" width="100%">
                        <tr>

                            <td style="padding:10px;">
                                @{
                                    var gridTAX = new WebGrid(Model.Addtaxlist, canSort: false, canPage: false, ajaxUpdateContainerId: "wgCGf");
                                  //  gridTAX.Pager(WebGridPagerModes.All);
                                    @gridTAX.GetHtml(
                            htmlAttributes: new { id = "wgCGf" },
                            tableStyle: "tableSmall table-bordered",
                           // mode: WebGridPagerModes.All,
                            columns:
                            gridTAX.Columns(
                                            //  gridTAX.Column("invoicegid", "SlNo"),
                            gridTAX.Column("invoicegid", "SlNo", format: @<text>
                                                <span class="edittmv"><label style="word-wrap: break-word;font-size:small; width:170px; font-weight:normal" id="lblinvoicegid">@item.invoicegid</label></span>
                            </text>),
                            gridTAX.Column("indextax", "Add index", format: @<text>
                                        <span class="edittmv"><label style="word-wrap: break-word;font-size:small; width:170px; font-weight:normal" id="lblind">@item.indextax</label></span>
                            </text>),
                            gridTAX.Column("SlNo", format: item => item.WebGrid.Rows.IndexOf(item) + 1),
                            gridTAX.Column("invoiceno", commfa.Sorter("invoiceno", "Invoice No", gridTAX)),
                            //gridTAX.Column("Invoicetaxglno", commfa.Sorter("Invoicetaxglno", "GL Code", gridTAX)),
                            gridTAX.Column("Invoicetaxglno", "GL Code", format:
                            @<text>
                                <span class="displaytmvt">
                                    <label style="word-wrap: break-word;font-size:small; width:90px; font-weight:normal;text-align:right" id="lblExp_Now">@item.Invoicetaxglno</label>
                                </span>
                                <input type="text" id="Invoicetaxglno" onkeypress="return isNumber1(event, this);" value="@item.Invoicetaxglno"
                                       style="width:80px" class="edittmvt textboxStyleMedium" maxlength="8" />
                            </text>),
                            gridTAX.Column("TaxName", commfa.Sorter("TaxName", "Description", gridTAX)),
                                 gridTAX.Column("provider_location", commfa.Sorter("provider_location", "Provider Location", gridTAX)),
                                 gridTAX.Column("receiver_location", commfa.Sorter("receiver_location", "Receiver Location", gridTAX)),
                            // gridTAX.Column("Invoicetaxamount", commfa.Sorter("Invoicetaxamount", "Tax Amount", gridTAX)),
                            gridTAX.Column("Invoicetaxamount", "Tax Amount", format: @<text>
                                <span class="displaytmvt"><label style="word-wrap: break-word;font-size:small; width:170px; font-weight:normal" id="lbltaxamount">@item.Invoicetaxamount</label></span>
                            </text>),
                                    @*gridTAX.Column("Already_Capiptal", "Already Capitalized", format:
                                        @<text>
                                        <span class="displaytmvt">
                                        <label style="word-wrap: break-word;font-size:small; width:90px; font-weight:normal;text-align:right" id="lblAlreadycapital">@item.Already_Capiptal</label>
                                        </span>
                                        <input type="text" id="Alreadycapital" onkeypress="return isNumber1(event, this);" value="@item.Already_Capiptal"
                                        style="width:80px" class="edittmvt textboxStyleMedium" />
                                        </text>),*@
 gridTAX.Column("Already_Capiptal", commfa.Sorter("Already_Capiptal", "Already Capitalized", gridTAX)),
                                            //  gridTAX.Column("Cap_Now", commfa.Sorter("Cap_Now", "Captalized Now", gridTAX)),
                                         gridTAX.Column("Cap_Now", "Captalized Now", format:
                                        @<text>
                                            <span class="displaytmvt">
                                                <label style="word-wrap: break-word;font-size:small; width:90px; font-weight:normal;text-align:right" id="lblCap_Now">@item.Cap_Now</label>
                                            </span>
                                            <input type="text" id="Cap_Now" onkeypress="return isNumber1(event, this);" value="@item.Cap_Now"
                                                   style="width:80px" class="edittmvt textboxStyleMedium" />
                                        </text>),
                             @*gridTAX.Column("Already_Exp", commfa.Sorter("Already_Exp", "Already Expensed", gridTAX)),
                           gridTAX.Column("Already_Exp", "Already Expensed", format:
                                @<text>
                                <span class="displaytmvt">
                                <label style="word-wrap: break-word;font-size:small; width:90px; font-weight:normal;text-align:right" id="lblAlready_Exp">@item.Already_Exp</label>
                                </span>
                                <input type="text" id="Already_Exp" onkeypress="return isNumber1(event, this);" value="@item.Already_Exp"
                                style="width:80px" class="edittmvt textboxStyleMedium" />
                                </text>),*@
                                            //  gridTAX.Column("Exp_Now", commfa.Sorter("Exp_Now", "Expensed Now", gridTAX)),
     gridTAX.Column("Exp_Now", "Input Credit Availed", format:
    @<text>
        <span class="displaytmvt">
            <label style="word-wrap: break-word;font-size:small; width:90px; font-weight:normal;text-align:right" id="lblExp_Now">@item.Exp_Now</label>
        </span>
        <input type="text" id="Exp_Now" onkeypress="return isNumber1(event, this);" value="@item.Exp_Now"
               style="width:80px" class="edittmvt textboxStyleMedium" />
    </text>),
                            gridTAX.Column("Balance", commfa.Sorter("Balance", "Balance", gridTAX)),
                            gridTAX.Column(header: "Action", canSort: false, style: "action",
                            format: @<text>
                                @if (Model.view == "Draft")
                                {
                                    @Html.Raw("<a data-modal='' style='cursor: pointer;' title='Edit'> <span class='displaytmvt  edit-btntmvt glyphicon glyphicon-edit'> </span> </a>")
                                    @Html.Raw("<a data-modal='' style='cursor: pointer;' title='Save'> <span class=' edittmvt save-btntmvt glyphicon glyphicon-save'> </span> </a>")
                                    @Html.Raw("<a data-modal='' style='cursor: pointer;' title='Cancel'> <span class=' edittmvt cancel-btntmvt glyphicon glyphicon-remove'> </span> </a>")
                                }
                            </text>)))
                                    if (Model.Addtaxlist.Count == 0)
                                    {
                                        <div class="panel panel-default"><span>No Recards found</span></div>
                                    }                        @*<label style="padding:10px;">Page: @(gridTAX.PageIndex + 1) of @gridTAX.PageCount - Total No of Records :@gridTAX.TotalRowCount</label>*@
                                }

                            </td>

                        </tr>
                    </table>

                </div>
            </td>
        </tr>
        @*<tr>
            <td align="center" >
            <button class="btn btn-warning" id="btnbacktax"><span class="glyphicon glyphicon-eye-close" style="color:white;">Close</span></button>
            </td>
            </tr>*@
    </table>
</div>
@*}*@
<script>

    $("#idtab2capdetails").text('@Model.Addtaxlist.Count');
    //$('#txtTaxAmount').val('');
    //$('#txtDescrption').val('');
    //$('#txtglcode').val('');
    $("#wgCGf td:nth-child(1),#wgCGf th:nth-child(1)").hide();
    $("#wgCGf td:nth-last-child(1)").show();
    $("#wgCGf td:nth-child(2),#wgCGf th:nth-child(2)").hide();
    $("#wgCGf td:nth-last-child(2)").show();
    $(document).ready(function () {
        $('.edittmvt').hide();
        $('.edit-btntmvt,.cancel-btntmvt').on("click", function () {
            var tr = $(this).parents('tr:first');
            tr.find('.edittmvt, .displaytmvt').toggle();
        });


        $('.save-btntmvt').on("click", function () {
            var tr = $(this).parents('tr:first');
            var glcode = tr.find("#Invoicetaxglno").val();
            var al_cap = tr.find("#Alreadycapital").val();
            var Cap_Now = tr.find("#Cap_Now").val();
            var Already_Exp = tr.find("#Already_Exp").val();
            var Exp_Now = tr.find("#Exp_Now").val();
            var inv_gid = tr.find("#lblinvoicegid").text();
            var indextax = tr.find("#lblind").text();
            var taxamount = tr.find("#lbltaxamount").text();
            var balance = parseInt(taxamount) - (parseInt(Cap_Now) + parseInt(Exp_Now));
            // alert(inv_gid);
            // alert(Exp_Now);
            // alert(balance);
            // parseInt(taxamount)
            var total = parseInt(Cap_Now) + parseInt(Exp_Now);
            //  alert(total);
            if (parseInt(taxamount) < parseInt(total)) {
                jAlert("Amount Mismatch with tax amount");
                return false;
            }
            showProgress();
            var tax =
            {
                "indextax": indextax,
                "Already_Capiptal": al_cap,
                "Cap_Now": Cap_Now,
                "Already_Exp": Already_Exp,
                "Exp_Now": Exp_Now,
                "invoicegid": inv_gid,
                "Invoicetaxglno": glcode,
                "Balance": balance
            };
            $.ajax({
                url: "@Url.Action("SaveDataTax", "AssetCapitalizationMakerDetails")?" + new Date().getTime(),
                type: 'POST',
                data: tax,
                async: false,
                success: function (data) {
                    //isSuccess = result;
                    //alert(data);
                  //  hideProgress();
                    jAlert("Successfully Saved", "Message", function (t) {
                        if (t == true) {
                            $("#Exp_Now").val("");
                            $("#Cap_Now").val("");
                            $('#dvAddtax').empty().append(data);
                            $("#txtIsTax").val("1");
                            updatecapdetails(inv_gid);
                        }
                    });

                },
                error: function (data) {
                    hideProgress();
                    jAlert("Error. Please, check the data", "Message");
                }
            })
        });
        $('#btnaddtax').click(function () {

            var TaxAmount = $('#txtTaxAmount').val();
            var Descrption = $('#txtDescrption').val();
            var glcode = $('#txtglcode').val();

            var adddet = {
                "Amount": TaxAmount,
                "Description": Descrption,
                "glcode": glcode
            };

            $.ajax({
                url: '@Url.Action("AddTaxAmount", "AssetCapitalizationMakerDetails")?' + new Date().getTime(),
                data: JSON.stringify(adddet),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    // alert(data);
                    //$("#dvngrid").load('@Url.Action("AddTaxAmount", "AssetCapitalizationMakerDetails")?' + new Date().getTime());
                    $("#dvAddtax").empty().append(data);

                },
                error: function (data) {

                }
            });
        });

        $('#btnclear').click(function () {
            $('#txtTaxAmount').val('');
            $('#txtDescrption').val('');
            $('#txtglcode').val('');

        });

        $('#btnbacktax').click(function () {
            objforchkTax.dialog('close');
        });

    });
    function DeleteTax1() {
        ////alert('hai');
        //objDialog.load('../AssetCodeMaster/DeleteAssetDetails?id='+id,new Date().getTime());
        //objDialog.dialog({ title: 'AssetCode Master' });
        //objDialog.dialog("open");
        //$.post('../AssetCapitalizationMakerDetails/DeleteTax?' + new Date().getTime(),
        //   function (data) {

        //       jAlert("Successfully Deleted!!", "Sucess", function (data) {

        //           if (data == true)
        //           {
        //               // location = '../AssetCapitalizationMakerDetails/AddTaxAmount?' + new Date().getTime();
        //               $("#dvAddtax").empty().append(data);
        //           }
        //       });
        //      // jAlert("Successfully Deleted!!", "Sucess");
        //   }, 'json');

        $.ajax({
            url: '@Url.Action("DeleteTax","AssetCapitalizationMakerDetails")?' + new Date().getTime(),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                jAlert("Successfully Deleted!!", "Sucess");
                $("#dvAddtax").empty().append(data);

            },
            error: function (data) {

            }
        });
    }
</script>
@model IEM.Areas.ASMS.Models.SupplierActivation
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>
@{
    ViewBag.Title = "SupplierActivation";
    if (@ViewBag.status == "success")
    {
        <script>jAlert('Successfully Moved', "Message"); </script>
    }
      
    ViewBag.SupplierHeaderGid = Convert.ToInt64(System.Web.HttpContext.Current.Session["SupplierHeaderGid"]);
}

<script type="text/javascript">
    function SelectEmployee(element, id) {
        var row = $(element).closest('tr');
        var empgid = row.find('td:eq(0)').text();
        var empcode = row.find('td:eq(2)').text();
        var empname = row.find('td:eq(3)').text(); 
        $("#txtNextApproverGid").val(empgid);
        $("#txtNextApprover").val(empcode + "-" + empname);
        window.parent.jQuery('#divApprovalpopup').dialog('close');
    }

    var dirCount;
    var currentapprovalstage = parseInt(@Model.CurrenStrage);
    var requesttype;
    var queuetotype;
    var currentstage;
    var nextlevel;
    var ismandatoryqueue;
    var supheadgid = parseInt(@ViewBag.SupplierHeaderGid); 
    var isallowapprovertoedit = parseInt(@ViewBag.IsAllowApproverToEdit);
    var nextstagename;
    $(document).ready(function () {
        
        var rdbval = $(this).val();
        var requesttype1 = '@Model.RequestTypeName';
        var currentstage = '@Model.CurrenStrage';
        var objApprovalModel = {
            "_RequestType": requesttype1,
            "_QueueCurrentLevel": currentstage
        };
        
            $.ajax({
                url: '../Onboarding/GetNextApprovalStage',
                data: JSON.stringify(objApprovalModel),
                type: 'POST',
                async: false,
                cache: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            ismandatoryqueue = data[i]._NextApprovalIsMandatory;
                            nextstagename = data[i]._NextApprovalGroup;
                            nextlevel = data[i]._QueueCurrentLevel;
                            queuetotype = data[i]._QueueToType;
                        }
                        
                        if (queuetotype = "I") {
                            $("#trOptionalField").css("display", "block");
                        }
                        else if (queuetotype = "G") { 
                            $("#trOptionalField").css("display", "none");
                        }
                        if (ismandatoryqueue == "N") {
                            $("#trOptionalChk").css("display", "block");
                            $("#trOptionalField").css("display", "block");
                            $("#spnOptionalFieldName").text("Select " + nextstagename);
                            $("#lblOptionalFieldChk").text("Is " + nextstagename + " Approval Required?");
                            $("#txtNextApprover").prop("disabled", true);
                            $("#trNextApproverLabel").css("display", "none");
                            $("#btnEmployeeSearchApproval span").prop("disabled", true);
                        }
                        else {
                            $("#trOptionalChk").css("display", "none");
                            $("#trOptionalField").css("display", "none");
                            $("#spnOptionalFieldName").text("");
                            $("#lblOptionalFieldChk").text("");
                            $("#txtNextApprovalQueue").val(nextstagename);
                            $("#txtNextApprovalQueue").prop("disabled", false); 
                        }

                        if (parseInt(nextlevel) == parseInt(currentstage)) {
                            $("#trOptionalChk").css("display", "none");
                            $("#trOptionalField").css("display", "none");
                            $("#spnOptionalFieldName").text("");
                            $("#lblOptionalFieldChk").text("");
                            $("#txtNextApprovalQueue").text("");
                            $("#trNextApproverLabel").css("display", "none");
                        }

                    }

                },
                error: function (result) {
                    jAlert("Something Went wrong", "Error");
                }
            }); 
       

        $('input:radio[name=rtbApproval]').live('change', function () {
            $.ajax({
                url: '../Onboarding/GetNextApprovalStage',
                data: JSON.stringify(objApprovalModel),
                type: 'POST',
                async: false,
                cache: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {

                    if (data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            ismandatoryqueue = data[i]._NextApprovalIsMandatory;
                            nextstagename = data[i]._NextApprovalGroup;
                            nextlevel = data[i]._QueueCurrentLevel;
                            queuetotype = data[i]._QueueToType;
                        }
                        if (rdbval == "1") {
                            if (queuetotype != "G") {
                                if (ismandatoryqueue == "N") {
                                    $("#trOptionalChk").css("display", "block");
                                    $("#trOptionalField").css("display", "block");
                                    $("#spnOptionalFieldName").text("Select " + nextstagename);
                                    $("#lblOptionalFieldChk").text("Is " + nextstagename + " Approval Required?");
                                    $("#txtNextApprover").prop("disabled", true);
                                    $("#trNextApproverLabel").css("display", "none");
                                    $("#btnEmployeeSearchApproval span").prop("disabled", true);
                                }
                                else {
                                    $("#trOptionalChk").css("display", "none");
                                    $("#trOptionalField").css("display", "none");
                                    $("#spnOptionalFieldName").text("");
                                    $("#lblOptionalFieldChk").text("");
                                    $("#txtNextApprovalQueue").val(nextstagename);
                                    $("#txtNextApprovalQueue").prop("disabled", true);
                                }
                            }
                        }
                        else {
                            $("#trOptionalChk").css("display", "none");
                            $("#trOptionalField").css("display", "none");
                            $("#spnOptionalFieldName").text("");
                            $("#lblOptionalFieldChk").text("");
                            $("#txtNextApprovalQueue").val(nextstagename);
                            $("#txtNextApprovalQueue").prop("disabled", true);
                        }

                    }

                },
                error: function (result) {
                    jAlert("Something Went wrong", "Error");
                }
            });
        });


    });
    var objDialogIndex;
    $(document).ready(function () {
        objDialogIndex = $("[id$='divApprovalpopup']");
        objDialogIndex.dialog({
            autoOpen: false,
            closeOnEscape: false,
            modal: true,
            async: false,
            show: 'fade-in',
            close: 'fade-out',
            //width: 660,
            //height: 470,
            cache: false

        });

    });
    function GetNextApprover() {
        objDialogIndex.load('../Onboarding/SearchEmployee?listfor=new&formname=approver&' + new Date().getTime());
        objDialogIndex.dialog({ title: 'Search Next Approver', width: '660', height: '570' });
        objDialogIndex.dialog("open");
    }

    function RequiredFieldChecking() {
        
        var actionremark = "";
        var queueto = "";
        var actionstatus = 1;
        var skipflag = 0;        
        if ($("#rtbApproval").is(':checked')) {
            actionstatus = 1;
        }
        else
            actionstatus = 0;
        actionremark = $("#txtRemarks").val(); 
        var requesttype = "@Model.RequestTypeName"; 
        if (queuetotype == "I") {
            if (ismandatoryqueue == "N") {
                if ($("#IsPushApproval").is(':checked')) {
                    skipflag = 0;
                    queueto = $("#txtNextApproverGid").val();
                    if (queueto == null || $.trim(queueto) == "") {
                        jAlert("Please Select Next Approver..", "Error", function () {
                            $("#txtNextApproverGid").focus();
                            hideProgress();
                            return false;
                        });
                        hideProgress();
                        return false;
                    }
                }
                else {
                    skipflag = 1;
                }
            }
            else if (ismandatoryqueue == "Y") {
                skipflag = 0;
                queueto = $("#txtNextApproverGid").val();
                if (queueto == null) {
                    jAlert("Please Select Next Approver..", "Error", function () {
                        $("#txtNextApproverGid").focus();
                        hideProgress();
                        return false;
                    });
                    hideProgress();
                    return false;
                }
            }
        }
        else {
            if (queuetotype == "G") {
                if (ismandatoryqueue == "N") {
                    if ($("#IsPushApproval").is(':checked')) {
                        skipflag = 0;
                    }
                    else {
                        skipflag = 1;
                    }
                }
            }
            else if (ismandatoryqueue == "Y") {
                skipflag = 0;
                queueto = $("#txtNextApprovalQueue").val();
            }
        }
        if ($.trim(actionstatus).toString() == "0") {
            if (actionremark == "" || actionremark == null) {
                jAlert("Please Enter Remarks..", "Error", function () {
                    $("#txtRemarks").focus();
                    hideProgress();
                    return false;
                });
                hideProgress();
                return false;
            }
        } 
      var objApprovalModel = {
          "RequestTypeName": requesttype,
          "Remarks": actionremark,
            "Approverid": queueto,
            "Approval": actionstatus,
            "skipFlag": skipflag,
            "Supplierheadergid": supheadgid
        }; 
      $.post('../SupplierActivationApprovalQueue/SupplierActivationApproval', objApprovalModel,
          function (data) {
              if (data == "success") {
                  submitflag = 1; 
                  hideProgress();               
              }
              else if (data == "error") {
                  jAlert("Something went wrong" + data, "Error", function () {
                      hideProgress();
                      return false;
                  });

              }
              else {
                  jAlert(data, "Error", function () {
                      hideProgress();                     
                  });
              }
              window.location.href = "@Url.Action("Dashboard", "AsmsMain")"; 
          },
         'json');
    }

</script>
@using (Html.BeginForm())
{
    @*<fieldset>
        <legend>SupplierActivation </legend>*@

    <div class="panel panel-default">
        <table align="center">
            <tr>
                <td>
                    @Html.HiddenFor(model => model.CurrenStrage)
                    @Html.HiddenFor(model => model.RequestTypeName)
                </td>
            </tr>
            <tr style="width:100%">

                @*<td colspan="4" align="right"><label style="color:red">@ViewBag.Message </label></td>*@
                @*<td colspan="4" align="right"><label style="color:red">@Model.QueueStatus</label></td>*@

            </tr>
            <tr style="display:none;">

                <td colspan="4">
                    <span style="font-size:12px;">Supplier HedaerGid </span><br />
                    @Html.TextBoxFor(model => model.Supplierheadergid, new { @class = "textboxStyle", @readonly = "readonly", @id = "txtSupplierheadergid" })
                </td>
                @*<td width="10px"></td>*@
            </tr>
            <tr>
                <td>
                    <span style="font-size:12px;">Supplier Code </span><br />
                    @Html.TextBoxFor(model => model.SupplierCode, new { @class = "textboxStyle", @readonly = "readonly", @id = "txtSupplierCode", @style = "font-size:12px;" })
                </td>
                @*<td width="10px"></td>*@
                <td>
                    <span style="font-size:12px;">Supplier Name </span><br />
                    @Html.TextBoxFor(model => model.SupplierName, new { @class = "textboxStyle", @readonly = "readonly", @id = "txtSupplierName", @style = "font-size:12px;" })
                </td>
                @*<td width="10px"></td>*@
                <td>
                    <span style="font-size:12px;">From Date </span><br />
                    <input id="txtFromDate" type="text" class="textboxStyle" style="font-size:12px;" name='@Html.NameFor(x => x.Fdate)' maxlength="11" value="@Model.Fdate" readonly>
                </td>
                @*<td width="10px"></td>*@
                <td align="right">
                    <span style="font-size:12px;">To Date </span><br />
                    <input id="txtTodate" type="text" class="textboxStyle" style="font-size:12px;" name='@Html.NameFor(x=>x.Todate)' maxlength="11" value="@Model.Todate" readonly />
                </td>
            </tr>
            <tr style="height:10px;"><td></td></tr>



            <tr style="height:10px;"><td></td></tr>
            <tr>


                <td colspan="2" align="left">

                    <span style="font-size:12px;">Activate Reason </span><br />
                    @Html.TextBoxFor(model => model.ActiveReason, new { @style = "width:390px;height:110px;font-size:12px;", @cols = "30", @rows = "4", @disabled = "disabled" })
                    @*<textarea cols="30" rows="4" style="width:388px" id="txtActiveReason" maxlength="128" name='@Html.NameFor(x=>x.ActiveReason)' value="@Model.ActiveReason" disabled> </textarea>*@
                </td>
                <td colspan="2" align="left">
                    <span style="font-size:12px;">Comments </span><br />
                    @Html.TextBoxFor(model => model.comments, new { @style = "width:405px;height:110px;font-size:12px;", @cols = "30", @rows = "4", @disabled = "disabled" })
                    @*<textarea cols="30" rows="4" id="txtComments" style="width:420px" name='@Html.NameFor(x=>x.comments)' maxlength="128" value="@Model.comments"> </textarea>*@
                </td>
            </tr>

            <tr style="height:10px;"><td></td></tr>
            <tr>
                <td colspan="4" align="left">
                    <span style="font-size:12px;">Attachments </span>
                </td>
            </tr>

            <tr>
                <td colspan="4" align="center">
                    @*<div id="dvAttch">
                            @Html.Partial("SupplierActiveAttachments")
                        </div>*@
                    <div id="wgAttachmentsupplier">
                        @{
    var gridAttachment = new WebGrid(Model.AttchList, canSort: true, canPage: false, rowsPerPage: 3, ajaxUpdateContainerId: "wgAttachmentsupplier", ajaxUpdateCallback: "DummyFunction()");
    int rowValAttachment = 0;
                        }

                        <div class="container" style="width:800px;">
                            <div>
                                @gridAttachment.GetHtml(
                              htmlAttributes: new { id = "wgAttachmentsupplier" },
                     tableStyle: "tableSmall table-bordered ",
                        mode: WebGridPagerModes.All,
                        columns:
                gridAttachment.Columns(
gridAttachment.Column("Slno", canSort: false, format: item => rowValAttachment = rowValAttachment + 1),
        // gridAttachment.Column("Attachid", objCmnFunctions.Sorter("Attachid", "Slno", gridAttachment), canSort: false),
        //   gridAttachment.Column("Attachid", "Slno", format: @<text>  <span> <label id="lblgid">@item.Attachid</label> </span> <input type="text" id="gid" value="@item.Attachid" style="display:none;" /></text>, style: "col2Width"),
        // gridAttachment.Column("AttachFileName", objCmnFunctions.Sorter("AttachFileName", "Attachment Name", gridAttachment), canSort: false),
                                                                               gridAttachment.Column("AttachFileName", "Attachment Name", format: @<text>  <span> <label id="lblName">@item.AttachFileName</label> </span> <input type="text" name="attachedfile3" id="Name" value="@item.AttachFileName" style="display:none;" /></text>, style: "col2Width"),
                                                 //   gridAttachment.Column("AttachFileType", objCmnFunctions.Sorter("AttachFileType", "Attachment Type", gridAttachment), canSort: false),
                                //  gridAttachment.Column("AttachmentDescription", objCmnFunctions.Sorter("AttachmentDescription", "Description", gridAttachment), canSort: false),
                                                                                                            gridAttachment.Column("Attachdate", "Attachment Date"),
                                                  //  gridAttachment.Column("Insertby", objCmnFunctions.Sorter("Insertby", "Attached By", gridAttachment), canSort: false),
                                  gridAttachment.Column(header: "Action", canSort: false, style: "action",
                format: @<text>
                                    @*@Html.Raw("<a data-modal='' href='/EOW/EmployeeClaimnew/Download/" + item.AttachmentFilenameId + "' id='" + item.AttachmentFilenameId + "' title='Detail'> <span class='glyphicon glyphicon-search'> </span> </a>")
                                        @if (item.attachment_by == objCmnFunctions.GetLoginUserGid())
                                        {
                                            @Html.Raw("<a data-modal='' href='/EOW/EmployeeClaimnew/Download/" + item.Attachid + "' id='" + item.Attachid + "'  title='Delete'   > <span class='glyphicon glyphicon-trash'> </span> </a>")
                                        }*@
                                <a onclick="DownloadApprovalAttachments3(this)">  <span class='glyphicon glyphicon-eye-open cursorpointer'></span></a> 
                                    @*@Html.Raw("<input type='button' class='glyphicon glyphicon-trash cursorpointer' id='btnremove'  Onclick='remove1(" + item.Attachid + ")'  />")*@
                                    @*<span class='glyphicon glyphicon-trash cursorpointer'></span>*@
                                    @*<input type='button' id='btnremove' class="glyphicon glyphicon-trash cursorpointer" onclick='remove1(" + item.Attachid + ")' />*@


                </text>
)
)
)
                                @if (Model.AttchList.Count == 0)
                                {

                                    <label style="padding:10px;">No Records Found</label>

                                }

                            </div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr style="height:10px;"><td></td></tr>
            <tr id="trApproval">
                <td colspan="4">
                    <table align="center" class="myTableStyleTab">
                        <tr>
                            <td colspan="2" align="center" style="padding:5px">
                                <span style="font-size:12px;">Approved</span>
                                @Html.RadioButtonFor(model => model.Approval, "1", new { @id = "rtbApproval", @checked = "checked" })
                                &nbsp;&nbsp;&nbsp;&nbsp;
                                <span style="font-size:12px;">Reject</span>
                                @Html.RadioButtonFor(model => model.Reject, "0", new { @id = "rtbReject" })
                            </td>
                        </tr>
                        <tr id="trNextApproverLabel">
                            <td>
                                <span>Next Approval Stage</span>
                            </td>
                            <td>
                                <input type="text" id="txtNextApprovalQueue" name="txtNextApprovalQueue" class="textboxStyle" />
                            </td>
                        </tr>
                        <tr id="trOptionalChk">
                            <td colspan="2" style="max-width:100%;text-wrap:normal;">
                                <input type="checkbox" id="IsPushApproval" name="IsPushApproval" value="Y" />
                                <span id="lblOptionalFieldChk"></span>
                            </td>
                        </tr>
                        <tr id="trOptionalField">
                            <td><span id="spnOptionalFieldName"></span></td>
                            <td>
                                <input type="hidden" name="txtNextApproverGid" id="txtNextApproverGid" value="@Model.queueto" />
                                &nbsp;&nbsp;<input type="text" name="txtNextApprover" id="txtNextApprover" class="textboxStyleMedium">
                                &nbsp;&nbsp;&nbsp;<a onclick="GetNextApprover()" id="btnEmployeeSearchApproval"><span class="glyphicon glyphicon-search"></span></a>
                            </td>
                        </tr>
                        <tr>

                            <td style="padding:5px" colspan="2">
                                <span style="font-size:12px;">Remarks </span> <br />
                                <textarea cols="30" rows="4" id="txtRemarks" style="resize:none ; width:400px;height:110px" name='@Html.NameFor(x=>x.Remarks)' class="textareaStyle" maxlength="128" value="@Model.Remarks"> </textarea>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

        </table>
    </div>
    <table align="center" class="myTableStyleTabNew">
        <tr>
            <td colspan="4" align="center">
                <input type="submit" name="btnactivate" id="btnactivate" value="SUBMIT" class="btn btn-success" style="display:none;" />
                @* <input type="submit" name="btnsave" id="btnsave" value="SUBMIT" class="btn btn-success" />*@
             @*Ramya 11 jul 18*@   
    @*<button type="submit" name="btnsave" id="btnsave" value="SUBMIT" class="btn btn-success" onclick="RequiredFieldChecking()"><span style="color:white;" class="glyphicon glyphicon-ok"> </span> Submit</button>*@
               
                @*<button name="btnsave" id="btnsave" value="SUBMIT" class="btn btn-success" onclick="RequiredFieldChecking()"><span style="color:white;" class="glyphicon glyphicon-ok"> </span> Submit</button>*@
                <a name="btnsave" id="btnsave" class="btn btn-success" onclick="RequiredFieldChecking()"><span style="color:white;" class="glyphicon glyphicon-ok"></span> Submit</a>
                @*Ramya 11 jul 18*@
                @*<input type="button" name="BACK" onclick="location.href='@Url.Action("ActivationApprovalQueue", "SupplierActivationApprovalQueue")'" value="BACK" class="btn btn-primary" />*@
                @*<input type="button" name="BACK"  value="BACK" class="btn btn-warning" />*@
                <button type="button" name="BACK" onclick="BackToDashboardAct()" id="" value="BACK" class="btn btn-warning"><span style="color:white;" class="glyphicon glyphicon-circle-arrow-left"> </span> Back</button>

            </td>
        </tr>
    </table>

    <div id="divApprovalpopup"></div>

    @*</fieldset>*@
}

<script>
    function DownloadApprovalAttachments3(element) {
        var row = $(element).closest('tr');
        var fi = row.find($("input[name=attachedfile3]")).val();
      //  alert(fi);
        location = "../Onboarding/DownloadDocument?id=" + fi;
    }
    function BackToDashboardAct() {
        var supcode = '@Model.SupplierCode';
        var objSupHeaderDetails = {
            "_SupplierCode": supcode
        };

        $.ajax({
            url: '@Url.Action("ReleaseMySupplier", "Onboarding")',
            data: JSON.stringify(objSupHeaderDetails),
            type: 'POST',
            async: false,
            cache: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                location = "../AsmsMain/Dashboard?" + new Date().getTime();
            },
            error: function (result) {
                jAlert("Something went wrong", "Error");
            }
        });

    }
    $(document).ready(function () {

        //$('.glyphicon-eye-open').on('click', function () {
        //    // alert('hellow');
        //    var tr = $(this).parents('tr:first');
        //    //var Name = tr.find("#Name").val();
        //    var SurName = tr.find("#Name").val();
        //    //var UserID = tr.find("#UserID").html();
        //    //  alert(SurName);
        //    // alert(SurName);
        //    if (SurName != '') {
        //        window.open("//192.168.84.94/temp/" + SurName, "_blank", "toolbar=yes, scrollbars=yes, resizable=yes, top=500, left=500, width=400, height=400");
        //    }
        //});
        @*var logstastus = '@Model.Alogstatus';

        if (logstastus != "N") {
            alert(logstastus);
            $('#btnsave').prop("disabled", true);
        }
        else {
            //alert(logstastus);
            $('#btnsave').prop("disabled", false);
        }*@


        var checkstatus="A";
        $('#rtbApproval').change(function () {
            $('#rtbReject').removeAttr('checked');
            checkstatus = "A";
        });
        $('#rtbReject').change(function () {
            $('#rtbApproval').removeAttr('checked');
            checkstatus = "R";
        });

        $('#btnsave').click(function () {
            
            var isexistsflag1 = '@Model._IsExistsFlagApprover';
            var isexistsapprovername1 = '@Model._IsExistsApproverName';
            if ($.trim(isexistsflag1).toString() == "Y") {
                jAlert("This Supplier Already Approved By " + isexistsapprovername1, "Error", function () {
                    var supcode = '@Model.SupplierCode';
                    var objSupHeaderDetails = {
                        "_SupplierCode": supcode
                    };

                    $.ajax({
                        url: '@Url.Action("ReleaseMySupplier", "Onboarding")',
                        data: JSON.stringify(objSupHeaderDetails),
                        type: 'POST',
                        async: false,
                        cache: false,
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            location = "../AsmsMain/Dashboard?" + new Date().getTime();
                        },
                        error: function (result) {
                            jAlert("Something went wrong", "Error");
                        }
                    });
                });
                return false;
            }
            var currentStage = '@Model.CurrenStrage';
           
            if (currentStage == 2) {
                if (checkstatus != "R") {
                    if ($('#dropProduct').val() == '') {
                        jAlert('Please Select Next Level Approver', 'Message', function () {
                            $('#dropProduct').focus();
                        });
                        return false;
                    }
                }
               
            }
            if (checkstatus == "R") {

          
                if ($('#txtRemarks').val().trim() == '' || $('#txtRemarks').val() ==null) {
                    jAlert('Please Fill Remarks Field', 'Message', function () {
                        $('#txtRemarks').focus();
                    });
                    return false;
                }
            }
            showProgress();
        });
    });







</script>
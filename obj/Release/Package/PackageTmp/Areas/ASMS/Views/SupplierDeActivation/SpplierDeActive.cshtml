@model IEM.Areas.ASMS.Models.SupplierDeActvation

@{
    ViewBag.Title = "SpplierDeActive";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (@ViewBag.status == "success")
    {
        <script>jAlert('Successfully DeActivated', "Message") </script>
    }
}
<b>
    <span style="color: rgb(52, 108, 196);">Supplier Deactivation</span>
</b>
<br />
@using (Html.BeginForm())
{
    <div class="panel panel-default">
        <table align="center" style="width: 100%;">
            <tr style="display:none;">
                <td><span>Supplier HedaerGid :</span></td>
                <td>@Html.TextBoxFor(model => model.DSupplierheadergid, new { @class = "textboxStyle", @readonly = "readonly" })</td>
            </tr>
            <tr>
                <td><span>Supplier Code :</span></td>
                <td>@Html.TextBoxFor(model => model.DSupplierCode, new { @class = "textboxStyle", @readonly = "readonly" })</td>
            </tr>
            <tr style="height:20px;"><td></td></tr>
            <tr>
                <td><span>Supplier Name :</span></td>
                <td>@Html.TextBoxFor(model => model.DSupplierName, new { @class = "textboxStyle", @readonly = "readonly" })</td>
            </tr>
            <tr style="height:20px;"><td></td></tr>
            @*<tr>
                <td><label>From Date :</label></td>
                <td><input id="FromDate" type="text" class="form-control" name='@Html.NameFor(x=>x.Fromdate)' value="@Model.Fromdate"></td>
            </tr>*@
            @*<tr style="height:20px;"><td></td></tr>*@
            @*<tr>
                <td><label>To Date :</label></td>
                <td>
                    <input id="Todate" type="text" class="form-control" name='@Html.NameFor(x=>x.Todate)' value="@Model.Todate" readonly />
                </td>
            </tr>*@

            <tr>
                <td><span>DeActivate Reason :</span></td>
                <td>
                    @*@Html.TextBoxFor(model => model.ActiveReason, new { @class = "form-control"})*@
                    <textarea class="form-control" cols="30" rows="4" id="txtDeActivatereason" maxlength="128" name='@Html.NameFor(x=>x.DeActiveReason)' value="@Model.DeActiveReason"> </textarea>
                </td>
            </tr>
            <tr style="height:20px;"><td></td></tr>
            <tr>
                <td><span>Attachments :</span></td>
                <td>
                    <div>
                        <table>
                            <tr>
                                <td>
                                    @Html.HiddenFor(i => i.FilesToBeUploaded)
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div id="uploaders">
                                        <input type="file" id="fileToUpload" name="fileUpload" multiple="multiple" style="float: left;" />
                                        <br />
                                        <span id="spnFile" style="float: left; color: #FF0000"></span>
                                        @Html.ValidationMessage("File")
                                        @Html.Hidden("hdnFileUpload")
                                    </div>
                                </td>
                            </tr>


                            <tr>
                                <td>
                                    <div class="control-section" style="padding: 0px;">
                                        <div id="selectedFiles"></div>
                                    </div>
                                </td>


                        </table>
                    </div>

                    @*<input type="file" id="fuldAttach" class="form-control" multiple="multiple" name='@Html.NameFor(x=>x.AttachFileName)' value="@Model.AttachFileName" />*@


                </td>
            </tr>
            @*<tr>
                <td colspan="2" align="center">
                    <a href="#" id="lnkAdd">Add More Attachments" </a>
                    <button id="lnkAdd" value="Add More Attachments"></button></td>
            </tr>*@
            @*<tr>
                <td colspan="2" align="right">
                    <div id="dvAttch">
                        @Html.Partial("Attachments")
                    </div>
                </td>
            </tr>*@
            @*<tr style="height:20px;"><td></td></tr>*@

            <tr style="height:20px;"><td></td></tr>
            <tr>
                <td><span>Comments :</span></td>
                <td>
                    @*@Html.TextBoxFor(model => model.comments, new { @class = "form-control" })*@
                    <textarea class="textareaStyle" style=" resize:none;width:400px;height:50px" cols="30" maxlength="128" rows="4" name='@Html.NameFor(x=>x.Decomments)' value="@Model.Decomments"> </textarea>
                </td>
            </tr>
            <tr style="height:20px;"><td></td></tr>
            @*<tr>
                <td colspan="2" align="center">
                    <fieldset>
                        <div>
                            <table align="center">
                                <tr>
                                    <td><label>Approver  :</label></td>
                                    <td style="width:200px">
                                        @Html.DropDownList("ddlApprover", Model.ApproverList, new { @class = "form-control", @id = "dropProduct" })
                                    </td>
                                    <td style="width:20px"></td>
                                    <td>
                                        <input type="button" name="Push Approval" value="Push Approval" class="btn btn-primary" />
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </fieldset>
                </td>
            </tr>*@
            <tr style="height:20px;"><td></td></tr>
            <tr>
                <td colspan="2" align="center">
                    <input type="submit" name="DEACTIVATE" id="btnDeactivate" value="DEACTIVATE" class="btn btn-primary" disabled />
                    <input type="button" name="BACK" onclick="location.href='@Url.Action("SupplierDeActivation","SupplierDeActivationQueue")'" value="BACK" class="btn btn-primary" />
                </td>
            </tr>
        </table>
    </div>
}

<script>
   //  var nowTemp = new Date();
    //var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
    var d = new Date();
    var strDate = d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear();
    var files;
    var storedFiles = [];
    var upc = 0;



    $(function () {
        //alert('hai');
        $(":file").attr('title', '  ');
        var $loading = $('#loadingDiv').hide();

        $("input[id^='fileToUpload']").change(function (e) {
            doReCreate(e);
        });

        selDiv = $("#selectedFiles");
    });


    function doReCreate(e) {
        //  alert('hellow');
        upc = upc + 1;
        handleFileSelect(e);
      //  alert('ok');
        $("input[id^='fileToUpload']").hide();

        $('<input>').attr({
            type: 'file',
            multiple: 'multiple',
            id: 'fileToUpload' + upc,
            class: 'fUpload',
            name: 'fileUpload',
            style: 'float: left',
            title: '  ',
            onchange: "doReCreate(event)"

        }).appendTo('#uploaders');
    }


    function handleFileSelect(e) {

        //selDiv.innerHTML = ""; storedFiles = [];
        // alert('welcome');
        selDiv = document.querySelector("#selectedFiles");
        //alert(selDiv);
        if (!e.target.files) return;

        //selDiv.innerHTML = "";
        files = e.target.files;
      //  alert(files);

        for (var i = 0; i < files.length; i++) {
            // alert('yes');
            //if (i == 0) { selDiv.innerHTML = ""; storedFiles = []; }
            var f = files[i];
            //alert(f.name);
            //selDiv.innerHTML += "<div>" + f.name + "<a onclick='removeAtt(this)'> Delete </a></div>";
            storedFiles.push(f.name);
            var sl = i + 1;
            //alert(f.name);
            var rowCount = 1;
            //function addMoreRows(files) {
            rowCount++;
            var recRow = '<div id="rowCount' + sl + '"><tr><td><input name="" value="' + f.name + '" type="text"  maxlength="120" style="margin: 4px 5px 0 5px;"/></td><td><input name="" value="' + strDate + '" type="text" maxlength="120" style="margin: 4px 10px 0 0px;"/></td></tr> <a href="javascript:void(0);" onclick="removeRow(' + sl + ');">Delete</a></div>';
            jQuery('#selectedFiles').append(recRow);
        }
        $('#@Html.IdFor(i => i.FilesToBeUploaded)').val(storedFiles);
    }

    function removeRow(removeNum) {
       // alert('hai');
        alert(removeNum);
        jQuery('#rowCount' + removeNum).remove();

    }


    //function validatetext()
    //{
    //    var textre = $('#txtDeActivatereason').val();
    //    alert(textre);
    //    if(textre == '')
    //    {
    //        alert('error');
    //    }

    //    return false;
    //}

    function removeAtt(t) {

        var serEle = $(t).parent().text().slice(0, -3);
        var index = storedFiles.indexOf(serEle);
        if (index !== -1) {
            storedFiles.splice(index, 1);
        }
        $(t).parent().remove();

        $('#@Html.IdFor(i => i.FilesToBeUploaded)').val(storedFiles);

    }


   
    $(document).ready(function () {
      //  alert('gdasgh');
        $('#txtDeActivatereason').change(function () {
           // alert('hellow');
            // $('#btnactivate').enabled = true;
            $('#btnDeactivate').prop('disabled', false);
        });
    //    $('#lnkAdd').click(function () {
    //        var att = $('#fuldAttach').val();
    //        alert(att);
    //        var UserModel =
    //         {
    //             "FilesToBeUploaded": att

    //         };
    //        alert(UserModel);
    //        $.ajax({
    //            url: '/SpplierActivation/Attachments/',
    //            data: JSON.stringify(UserModel),
    //            type: 'POST',
    //            contentType: 'application/json; charset=utf-8',
    //            success: function (data) {
    //                // alert(data);
    //                $('#dvAttch').empty().append(data);
    //            }
    //        });
        //    });

      //  var disable1 = '@ViewBag.status';
        //alert('lll');
        //alert(disable1);
        //if (disable1 == "success")
        //{
        //    alert('ok');
        //    $('#btnDeactivate').removeAttr('disabled');
        //    // $('#btnDeactivate').disabled();
        //    alert('notok');
        //}
        $('#btnDeactivate').click(function () {
           // alert('error');
            var DeActivatereason = $('#txtDeActivatereason').val();
           // alert(DeActivatereason);
            if(DeActivatereason == ' ')
            {
                alert('Shouid not empty DeActivate Reason')
                return false;
            }
          //  return false;
        });

        $('#FromDate').change(function () {
            var dd = $('#FromDate').val();
            var Todate;
            var arr = dd.split('-');
            var TDate = arr[0];
            var Tmon = arr[1];
            var NewDate = 0;
            var i;
           // alert(TDate);
            if (TDate == '30'| TDate == '31')
            {
               // alert('notok');
                Tmon =parseInt(Tmon) + 1;
                TDate = 30;
                Todate = TDate + '-' + Tmon + '-' + arr[2];
            }
            else
            {
                for (i = parseInt(TDate); i < 31; i++) {
                    if(i==30)
                    {
                        Tmon = parseInt(Tmon) + 1;
                        NewDate = parseInt(TDate);
                    }
                    //NewDate++;
                }
                Todate = NewDate + '-' + Tmon + '-' + arr[2];
               // alert(Todate);
            }

            $('#Todate').val(Todate);
           // alert(Todate);
        });
        $('#FromDate').datetimepicker({
            lang: 'de',
            i18n: {
                de: {
                    months: [
                     'Jan', 'Feb', 'Mar', 'Apr',
                     'May', 'Jun', 'Jul', 'Aug',
                     'Sep', 'Oct', 'Nov', 'Dec',
                    ],
                    dayOfWeek: [
                     "Sun", "Mon", "Thu", "wed",
                     "Thr", "Fri", "Sat.",
                    ]
                }
            },
            timepicker: false,
            format: 'd-m-Y'
        });
      

    });
    //function GetToDate()
    //{

    //}
</script>